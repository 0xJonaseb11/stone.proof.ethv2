{
  "address": "0xa3D3884f029C6e651FD0Dd7FA3060B27D3FFbF09",
  "abi": [
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "AddressDoesNotHaveRequiredRole",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "DisputeResolution__AlreadyVoted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "disputeId",
          "type": "uint256"
        }
      ],
      "name": "DisputeResolution__DisputeEscalated_UnableToVote",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "disputeId",
          "type": "uint256"
        }
      ],
      "name": "DisputeResolution__DisputeNotEscalated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "disputeId",
          "type": "uint256"
        }
      ],
      "name": "DisputeResolution__DisputeStatusNotPending",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__DisputeStatusNotPendingOrEscalated",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidDisputeDefendantAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidDisputeDetails",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidDisputeEvidence",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidDisputeIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidResolutionDetails",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "DisputeResolution__NotEligibleToVote",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__VotingPeriodStillActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenTransferFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "InsufficientPermissionsToPerformAction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAccountAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPaymentMethods",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "currentStatus",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "attemptedStatus",
          "type": "string"
        }
      ],
      "name": "InvalidTransportStateTransition",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralNotMarketReady",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralNotReadyToTrade",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralDestination",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralDetails",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralRegistry__InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralLocation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralName",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralOrigin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralPurityPercentage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralStorageConditions",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralWeight",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidReceivingPartyAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralAlreadyAudited",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralAlreadyInspected",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralAlreadyPurchased",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralNotAudited",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralNotInspected",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralRegistry__MineralNotRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__ETHTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__IncorrectETHAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__InvalidMineralPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__InvalidNumberOfPrices",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "MineralWarehouse__InvalidTokenAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__InvalidTokenPrice",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralWarehouse__MineralAlreadySold",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralWarehouse__MineralNotFoundInWarehouse",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralWarehouse__MineralNotMarketReady",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralWarehouse__MineralNotRefined",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "MineralWarehouse__UnacceptedToken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "MineralWarehouse__UnacceptedTokens",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "MineralWarehouse__UnauthorizedSeller",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "NotAssignedTransporter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__AccountAlreadyHasRole",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__AccountDoesNotHaveRole",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralDestination",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralName",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralOrigin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralPurityPercentage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralStorageConditions",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralWeight",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidReceivingPartyAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidRole",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralAlreadyAudited",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralAlreadyInspected",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralAlreadyPurchased",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralAlreadyRefined",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralNotMarketReady",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "purityPercentage",
          "type": "uint256"
        }
      ],
      "name": "RolesManager__MineralPurityPercentageTooLowToRegister",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "RolesManager__NotTheAssignedBuyer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "SupplychainValidator__InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SupplychainValidator__InvalidMineralOwnershipChain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SupplychainValidator__InvalidMineralTransactionHistory",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Tokenization__CallerNotMineralTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Tokenization__InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Tokenization__InvalidTokenIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Tokenization__TokenAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Tokenization__TokenIsAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "TransactionLog__InvalidOperationIndex",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransactionLog__InvalidOperationType",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "TransactionLog__InvalidTransactionIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "TransportRequestAlreadyExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AdminRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AdminRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AuditorRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AuditorRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "BuyerRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "BuyerRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "InspectorRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "InspectorRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MinerRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MinerRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "status",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "auditor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auditedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralAudited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralStatus",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inspector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inspectedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralInspected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "purchasedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "ApprovedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "status",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inspectionDate",
          "type": "uint256"
        }
      ],
      "name": "MineralReadyToTrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "refineryReport",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "refiner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refinedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralRefined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralType",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "origin",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "purityPercentage",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "miner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registeredAt",
          "type": "uint256"
        }
      ],
      "name": "MineralRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "transporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receivingParty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "origin",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "destination",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transportedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralTransported",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "operationType",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OperationRecorded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RefinerRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RefinerRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "roleAssignedAt",
          "type": "uint256"
        }
      ],
      "name": "RoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "revoker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "roleRevokedAt",
          "type": "uint256"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "transactionType",
          "type": "string"
        }
      ],
      "name": "TransactionRecorded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "TransporterRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "TransporterRoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AUDITOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BUYER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INSPECTOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REFINER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSPORTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "report",
          "type": "string"
        }
      ],
      "name": "_auditMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignAuditor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignInspector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignMiner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignRefiner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignTransporter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "checkAuditAndInspectionStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isAudited",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isInspected",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRoleCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minerCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "refinerCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "transporterCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auditorCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inspectorCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyerCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "getMineralHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "fieldChanged",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "newValue",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "updatedBy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct RolesManager.MineralHistory[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOperation",
      "outputs": [
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "operationType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOperationsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getRolesForAddress",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "roles",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "getTransaction",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "transactionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "mineralId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "transactionType",
              "type": "string"
            }
          ],
          "internalType": "struct TransactionLog.Transaction",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "getTransactionsByMineral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "transactionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "mineralId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "transactionType",
              "type": "string"
            }
          ],
          "internalType": "struct TransactionLog.Transaction[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasAdminRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasAuditorRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasBuyerRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasInspectorRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasMinerRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRefinerRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasTransporterRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "report",
          "type": "string"
        }
      ],
      "name": "inspectMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "isMineralRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "mineralDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "origin",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "mineralType",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "purityPercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "storageConditions",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registeredBy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "currentStatus",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "currentLocation",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "currentHandler",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPurchased",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isRefined",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isAudited",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isInspected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mineralHistories",
      "outputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "fieldChanged",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "updatedBy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "purchaseMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "operationType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "recordOperation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "transactionType",
          "type": "string"
        }
      ],
      "name": "recordTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "report",
          "type": "string"
        }
      ],
      "name": "refineMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_mineralType",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_origin",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_purityPercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_storageConditions",
          "type": "string"
        }
      ],
      "name": "registerMineral",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeAuditor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeInspector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeMiner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeRefiner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeTransporter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "roleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_receivingParty",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_origin",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_destination",
          "type": "string"
        }
      ],
      "name": "transferMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf0bec43270d7708454c59265988a31e8ad17492bbca99e1df8dce108a580188f",
  "receipt": {
    "to": null,
    "from": "0x0dfDb5bBaEeCE3871f826DF1C6Fe24a2772f5d38",
    "contractAddress": "0xa3D3884f029C6e651FD0Dd7FA3060B27D3FFbF09",
    "transactionIndex": 27,
    "gasUsed": "4864794",
    "logsBloom": "0x000000040000000000000000000040000000000000000000000000100000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000800000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000100000000000020000040000000000000008000000000000000000000000200000000000000000000",
    "blockHash": "0x7867bc7aa9008a6b8d9991f4c956a906d549445b50125a8ad569a9694c21f446",
    "transactionHash": "0xf0bec43270d7708454c59265988a31e8ad17492bbca99e1df8dce108a580188f",
    "logs": [
      {
        "transactionIndex": 27,
        "blockNumber": 25807637,
        "transactionHash": "0xf0bec43270d7708454c59265988a31e8ad17492bbca99e1df8dce108a580188f",
        "address": "0xa3D3884f029C6e651FD0Dd7FA3060B27D3FFbF09",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x",
        "logIndex": 195,
        "blockHash": "0x7867bc7aa9008a6b8d9991f4c956a906d549445b50125a8ad569a9694c21f446"
      },
      {
        "transactionIndex": 27,
        "blockNumber": 25807637,
        "transactionHash": "0xf0bec43270d7708454c59265988a31e8ad17492bbca99e1df8dce108a580188f",
        "address": "0xa3D3884f029C6e651FD0Dd7FA3060B27D3FFbF09",
        "topics": [
          "0x458ea7e03b3466b3cf9bc2d66ddea8b11fe9469982816f42666888e6c8c6e664",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000006826f50a",
        "logIndex": 196,
        "blockHash": "0x7867bc7aa9008a6b8d9991f4c956a906d549445b50125a8ad569a9694c21f446"
      }
    ],
    "blockNumber": 25807637,
    "cumulativeGasUsed": "17638487",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "57a6037bb722bde0dd8b4081e797ae09",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"AddressDoesNotHaveRequiredRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"DisputeResolution__AlreadyVoted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"DisputeResolution__DisputeEscalated_UnableToVote\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"DisputeResolution__DisputeNotEscalated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"DisputeResolution__DisputeStatusNotPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__DisputeStatusNotPendingOrEscalated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidDisputeDefendantAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidDisputeDetails\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidDisputeEvidence\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidDisputeIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidResolutionDetails\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"DisputeResolution__NotEligibleToVote\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__VotingPeriodStillActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"InsufficientPermissionsToPerformAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAccountAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPaymentMethods\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"currentStatus\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"attemptedStatus\",\"type\":\"string\"}],\"name\":\"InvalidTransportStateTransition\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralNotMarketReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralNotReadyToTrade\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralDestination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralDetails\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralRegistry__InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralLocation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralName\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralOrigin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralPurityPercentage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralStorageConditions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidReceivingPartyAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralAlreadyAudited\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralAlreadyInspected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralAlreadyPurchased\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralNotAudited\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralNotInspected\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralRegistry__MineralNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__IncorrectETHAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__InvalidMineralPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__InvalidNumberOfPrices\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"MineralWarehouse__InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__InvalidTokenPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralWarehouse__MineralAlreadySold\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralWarehouse__MineralNotFoundInWarehouse\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralWarehouse__MineralNotMarketReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralWarehouse__MineralNotRefined\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"MineralWarehouse__UnacceptedToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"MineralWarehouse__UnacceptedTokens\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"MineralWarehouse__UnauthorizedSeller\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotAssignedTransporter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__AccountAlreadyHasRole\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__AccountDoesNotHaveRole\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralDestination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralName\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralOrigin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralPurityPercentage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralStorageConditions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidReceivingPartyAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralAlreadyAudited\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralAlreadyInspected\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralAlreadyPurchased\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralAlreadyRefined\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralNotMarketReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"purityPercentage\",\"type\":\"uint256\"}],\"name\":\"RolesManager__MineralPurityPercentageTooLowToRegister\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"RolesManager__NotTheAssignedBuyer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"SupplychainValidator__InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SupplychainValidator__InvalidMineralOwnershipChain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SupplychainValidator__InvalidMineralTransactionHistory\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Tokenization__CallerNotMineralTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Tokenization__InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Tokenization__InvalidTokenIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Tokenization__TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Tokenization__TokenIsAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"TransactionLog__InvalidOperationIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionLog__InvalidOperationType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"TransactionLog__InvalidTransactionIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"TransportRequestAlreadyExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AdminRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AdminRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AuditorRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AuditorRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BuyerRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BuyerRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"InspectorRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"InspectorRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MinerRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MinerRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"auditor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auditedAt\",\"type\":\"uint256\"}],\"name\":\"MineralAudited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralStatus\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"inspector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inspectedAt\",\"type\":\"uint256\"}],\"name\":\"MineralInspected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"purchasedAt\",\"type\":\"uint256\"}],\"name\":\"MineralPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ApprovedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inspectionDate\",\"type\":\"uint256\"}],\"name\":\"MineralReadyToTrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"refineryReport\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refiner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refinedAt\",\"type\":\"uint256\"}],\"name\":\"MineralRefined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"purityPercentage\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registeredAt\",\"type\":\"uint256\"}],\"name\":\"MineralRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receivingParty\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transportedAt\",\"type\":\"uint256\"}],\"name\":\"MineralTransported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"operationType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OperationRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RefinerRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RefinerRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roleAssignedAt\",\"type\":\"uint256\"}],\"name\":\"RoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roleRevokedAt\",\"type\":\"uint256\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"transactionType\",\"type\":\"string\"}],\"name\":\"TransactionRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TransporterRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TransporterRoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AUDITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BUYER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INSPECTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFINER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSPORTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"report\",\"type\":\"string\"}],\"name\":\"_auditMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignAuditor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignInspector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignMiner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignRefiner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignTransporter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"checkAuditAndInspectionStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAudited\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isInspected\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoleCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refinerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transporterCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auditorCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inspectorCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyerCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"getMineralHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fieldChanged\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct RolesManager.MineralHistory[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOperation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"operationType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOperationsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRolesForAddress\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"roles\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"getTransaction\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"transactionType\",\"type\":\"string\"}],\"internalType\":\"struct TransactionLog.Transaction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"getTransactionsByMineral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"transactionType\",\"type\":\"string\"}],\"internalType\":\"struct TransactionLog.Transaction[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasAdminRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasAuditorRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasBuyerRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasInspectorRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasMinerRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRefinerRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasTransporterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"report\",\"type\":\"string\"}],\"name\":\"inspectMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"isMineralRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"mineralDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mineralType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purityPercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"storageConditions\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registeredBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"currentStatus\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"currentLocation\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentHandler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPurchased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAudited\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isInspected\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mineralHistories\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fieldChanged\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"purchaseMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"operationType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"recordOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"transactionType\",\"type\":\"string\"}],\"name\":\"recordTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"report\",\"type\":\"string\"}],\"name\":\"refineMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_mineralType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_origin\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_purityPercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_storageConditions\",\"type\":\"string\"}],\"name\":\"registerMineral\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeAuditor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeInspector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeMiner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeRefiner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeTransporter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"roleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_receivingParty\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_destination\",\"type\":\"string\"}],\"name\":\"transferMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"_auditMineral(string,string)\":{\"details\":\"only the auditor can audit mineralDetails.Logs audit report on every successful audit.\",\"params\":{\"mineralId\":\"The ID of the mineral under audition.\",\"report\":\"The audit status report of the mineral under audition.\"}},\"checkAuditAndInspectionStatus(string)\":{\"details\":\"checks audit and inspection status\",\"params\":{\"mineralId\":\"The ID of the mineral to check for audit and inspection status Returns (isValid, isInspected) statuses of both audit and inspection of mineral according to mineralId\"}},\"getAllRoleCounts()\":{\"details\":\"Returns all role counts in a single call\",\"returns\":{\"auditorCount\":\"Number of auditors\",\"buyerCount\":\"Number of buyers\",\"inspectorCount\":\"Number of inspectors\",\"minerCount\":\"Number of miners\",\"refinerCount\":\"Number of refiners\",\"transporterCount\":\"Number of transporters\"}},\"getOperation(uint256)\":{\"details\":\"retrieves operations using operation index Returns An arrray containing operation.actor, operationType, mineralId and timestamp\"},\"getOperationsCount()\":{\"details\":\"get track of number of operations done\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have a specific role\",\"params\":{\"role\":\"The role to query member count for\"},\"returns\":{\"count\":\"The number of accounts with the role\"}},\"getRolesForAddress(address)\":{\"details\":\"Returns all roles assigned to a given address\",\"params\":{\"account\":\"The address to check roles for\"},\"returns\":{\"roles\":\"An array of role names the address has\"}},\"getTransaction(uint256)\":{\"details\":\"retrieves transactions using transactionID\",\"returns\":{\"_0\":\"transactions using specified transactionId\"}},\"getTransactionsByMineral(string)\":{\"details\":\"retrieve transactions using mineralIDs\",\"returns\":{\"_0\":\"results of transactions with specified mineralIDs\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasMinerRole(address)\":{\"details\":\"Roles helper functionschecks if an account has a specific role\",\"params\":{\"account\":\"The address of the account to checked with role association\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"inspectMineral(string,string)\":{\"details\":\"only the inspector can inspect mineralDetailsLogs audit report on every successful inspection\",\"params\":{\"mineralId\":\"The ID of the mineral under inspection\",\"report\":\"The inspection status report of the mineral under inspection\"}},\"isMineralRegistered(string)\":{\"details\":\"checks if a mineral with the given ID is registered\",\"params\":{\"mineralId\":\"the ID of the mineral to check\"},\"returns\":{\"_0\":\"A boolean indicating whether the mineral is registered or not\"}},\"purchaseMineral(string)\":{\"details\":\"Only the buyer can purchase mineralDetails\",\"params\":{\"mineralId\":\"The ID of the mineral under purchase\"}},\"recordOperation(address,string,string)\":{\"details\":\"records operation in the supply chain\"},\"recordTransaction(address,string,string)\":{\"details\":\"records a transaction\"},\"refineMineral(string,string)\":{\"details\":\"only the refiner can refiner a mineral\",\"params\":{\"mineralId\":\"The ID of the mineral under refinery\"}},\"registerMineral(string,string,uint256,string,uint256,string)\":{\"details\":\"Register a new mineral - only by miner.Every mineral is assigned a unique mineralId.\",\"params\":{\"_mineralType\":\"The type of a mineral.\",\"_name\":\"Mineral name.\",\"_origin\":\"Mineral Origin.\",\"_purityPercentage\":\"Mineral purity in percentage.\",\"_storageConditions\":\"Mineral Storage conditions.\",\"_weight\":\"Mineral weight in uint256.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferMineral(string,address,string,string)\":{\"details\":\"only the transporter can transport mineralDetails\",\"params\":{\"_destination\":\"The Destination area of the mineral(string)\",\"_origin\":\"The Original location of the mineral under transportation\",\"_receivingParty\":\"The address of the destination portal\",\"mineralId\":\"The ID of the mineral under transportation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_auditMineral(string,string)\":{\"notice\":\"Emits MineralAudited event.\"},\"inspectMineral(string,string)\":{\"notice\":\"Emits MineralInspected event on successful inspection\"},\"purchaseMineral(string)\":{\"notice\":\"Emits MineralPurchased event on successful purchase\"},\"recordOperation(address,string,string)\":{\"notice\":\"Emits OperationRecorded even on successful record\"},\"recordTransaction(address,string,string)\":{\"notice\":\"Emits TransactionRecorded event on successful transaction recording\"},\"refineMineral(string,string)\":{\"notice\":\"Emits MineralRefined event on successfl refining process\"},\"registerMineral(string,string,uint256,string,uint256,string)\":{\"notice\":\"Emits MineralRegistered event on successful registration.\"},\"transferMineral(string,address,string,string)\":{\"notice\":\"Emits MineralTransported on successful transportation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/logs/TransactionLog.sol\":\"TransactionLog\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/core/RolesManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title RolesManager contract\\n * @author @0xJonaseb11\\n * It acts as the factory of all the roles in the whole supplychain\\n * It is where all the roles in the chain are assigned and granted. No any other contract can handle that\\n *\\n * It is a Modular contract\\n */\\n\\nimport { AccessControl } from \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport { Errors } from \\\"../utils/Errors.sol\\\";\\n\\ncontract RolesManager is AccessControl, Errors {\\n    /*/////////////////////////////////////////////////////\\n                           SUPPLYCHAIN ROLES\\n            /////////////////////////////////////////////////////*/\\n    bytes32 public constant MINER_ROLE = keccak256(\\\"MINER_ROLE\\\");\\n    bytes32 public constant REFINER_ROLE = keccak256(\\\"REFINER_ROLE\\\");\\n    bytes32 public constant TRANSPORTER_ROLE = keccak256(\\\"TRANSPORTER_ROLE\\\");\\n    bytes32 public constant AUDITOR_ROLE = keccak256(\\\"AUDITOR_ROLE\\\");\\n    bytes32 public constant INSPECTOR_ROLE = keccak256(\\\"INSPECTOR_ROLE\\\");\\n    bytes32 public constant BUYER_ROLE = keccak256(\\\"BUYER_ROLE\\\");\\n\\n    /*//////////////////////////////////////////////////////\\n                                 EVENTS\\n        //////////////////////////////////////////////////////*/\\n    event RoleAssigned(address indexed account, bytes32 indexed role, uint256 roleAssignedAt);\\n    event RoleRevoked(bytes32 role, address account, address revoker, uint256 roleRevokedAt);\\n\\n    event MineralRegistered(\\n        string mineralId,\\n        string mineralName,\\n        string mineralType,\\n        string origin,\\n        uint256 weight,\\n        uint256 purityPercentage,\\n        address indexed miner,\\n        uint256 registeredAt\\n    );\\n    event MineralRefined(string mineralId, string refineryReport, address indexed refiner, uint256 refinedAt);\\n    event MineralTransported(\\n        string mineralId,\\n        address indexed transporter,\\n        address receivingParty,\\n        string origin,\\n        string destination,\\n        uint256 transportedAt\\n    );\\n    event MineralInspected(string mineralId, string mineralStatus, address indexed inspector, uint256 inspectedAt);\\n    event MineralAudited(string mineralId, string status, address indexed auditor, uint256 auditedAt);\\n    event MineralPurchased(string mineralId, address indexed buyer, uint256 purchasedAt);\\n    event MineralReadyToTrade(string mineralId, address indexed ApprovedBy, string status, uint256 inspectionDate);\\n\\n    // For every assigned role\\n    event MinerRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event RefinerRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event TransporterRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event AuditorRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event InspectorRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event BuyerRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event AdminRoleAssigned(address indexed assignee, uint256 timestamp);\\n    // For every revoked role\\n    event MinerRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event RefinerRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event TransporterRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event AuditorRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event InspectorRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event BuyerRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event AdminRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n\\n    struct MineralDetails {\\n        string id;\\n        string name;\\n        string origin;\\n        string mineralType;\\n        uint256 weight;\\n        uint256 purityPercentage;\\n        string storageConditions;\\n        address registeredBy;\\n        string currentStatus;\\n        string currentLocation;\\n        address currentHandler;\\n        bool isPurchased;\\n        bool isRefined;\\n        bool isAudited;\\n        bool isInspected;\\n        uint256 timestamp;\\n    }\\n\\n    struct MineralHistory {\\n        string id;\\n        string fieldChanged;\\n        string newValue;\\n        address updatedBy;\\n        uint256 timestamp;\\n    }\\n\\n    uint256 private nonce = block.timestamp + block.number;\\n    mapping(string => MineralDetails) public mineralDetails;\\n    mapping(string => MineralHistory[]) public mineralHistories;\\n    mapping(bytes32 => uint256) public roleMemberCount;\\n\\n    // Set the deployer as the admin\\n    constructor() {\\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        roleMemberCount[DEFAULT_ADMIN_ROLE] = 1;\\n        emit AdminRoleAssigned(msg.sender, block.timestamp);\\n\\n        // _setupRole(MINER_ROLE, msg.sender);\\n        // roleMemberCount[MINER_ROLE] = 1;\\n        // emit MinerRoleAssigned(msg.sender, block.timestamp);\\n\\n        // _setupRole(AUDITOR_ROLE, msg.sender);\\n        // roleMemberCount[AUDITOR_ROLE] = 1;\\n        // emit AuditorRoleAssigned(msg.sender, block.timestamp);\\n\\n        // _setupRole(INSPECTOR_ROLE, msg.sender);\\n        // roleMemberCount[INSPECTOR_ROLE] = 1;\\n        // emit InspectorRoleAssigned(msg.sender, block.timestamp);\\n\\n        // _setupRole(BUYER_ROLE, msg.sender);\\n        // roleMemberCount[BUYER_ROLE] = 1;\\n        // emit BuyerRoleAssigned(msg.sender, block.timestamp);\\n\\n        // _setupRole(REFINER_ROLE, msg.sender);\\n        // roleMemberCount[REFINER_ROLE] = 1;\\n        // emit RefinerRoleAssigned(msg.sender, block.timestamp);\\n\\n        // _setupRole(TRANSPORTER_ROLE, msg.sender);\\n        // roleMemberCount[TRANSPORTER_ROLE] = 1;\\n        // emit TransporterRoleAssigned(msg.sender, block.timestamp);\\n    }\\n\\n    /**\\n     * @dev checks if sender has specific role\\n     */\\n    modifier restrictedToRole(bytes32 role) {\\n        if (!hasRole(role, msg.sender)) {\\n            revert InsufficientPermissionsToPerformAction(msg.sender);\\n        }\\n        _;\\n    }\\n\\n    modifier onlyNonZeroAddress(address account) {\\n        if (account == address(0)) {\\n            revert InvalidAccountAddress();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyValidMineralId(string memory mineralId) {\\n        if (keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId))) {\\n            revert InvalidMineralIdOrNotFound(mineralId);\\n        }\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n            ATTENTION HERE - CHECKING VALIDITY OF A MINERAL\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\        \\n    //////////////////////////////////////////////////////////////*/\\n    modifier onlyValidMineral(string memory mineralId) virtual {\\n        if (!isMineralRegistered(mineralId) || bytes(mineralId).length == 0) {\\n            revert InvalidMineralIdOrNotFound(mineralId);\\n        }\\n        _;\\n    }\\n\\n    /*////////////////////////////////////////////////////\\n            =====================================================\\n            ///////// ROLE-BASED FUNCTIONALITY FUNCTIONS ////////\\n            ====================================================\\n            //////////////////////////////////////////////////*/\\n\\n    /*//////////////////////////////////////////////////////////////\\n        ================================================================\\n                              MINING ENTERPRISE PORTAL\\n        =================================================================\\n       //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev Register a new mineral - only by miner.\\n     * @dev Every mineral is assigned a unique mineralId.\\n     * @param _name Mineral name.\\n     * @param _mineralType The type of a mineral.\\n     * @param _weight Mineral weight in uint256.\\n     * @param _origin Mineral Origin.\\n     * @param _purityPercentage Mineral purity in percentage.\\n     * @param _storageConditions Mineral Storage conditions.\\n     * @notice Emits MineralRegistered event on successful registration.\\n     */\\n    function registerMineral(\\n        string memory _name,\\n        string memory _mineralType,\\n        uint256 _weight,\\n        string memory _origin,\\n        uint256 _purityPercentage,\\n        string memory _storageConditions\\n    ) external virtual restrictedToRole(MINER_ROLE) returns (string memory) {\\n        if (bytes(_name).length == 0) revert RolesManager__InvalidMineralName();\\n        if (bytes(_origin).length == 0) revert RolesManager__InvalidMineralOrigin();\\n\\n        if (bytes(_mineralType).length == 0) revert RolesManager__InvalidMineralType();\\n\\n        if (_weight == 0) revert RolesManager__InvalidMineralWeight();\\n\\n        if (_purityPercentage == 0 || _purityPercentage > 100) revert RolesManager__InvalidMineralPurityPercentage();\\n\\n        if (_purityPercentage <= 80) revert RolesManager__MineralPurityPercentageTooLowToRegister(_purityPercentage);\\n\\n        if (bytes(_storageConditions).length == 0) revert RolesManager__InvalidMineralStorageConditions();\\n\\n        string memory mineralId = _generateHashedMineralId(_mineralType);\\n\\n        mineralDetails[mineralId] = MineralDetails({\\n            id: mineralId,\\n            name: _name,\\n            origin: _origin,\\n            mineralType: _mineralType,\\n            weight: _weight,\\n            purityPercentage: _purityPercentage,\\n            storageConditions: _storageConditions,\\n            registeredBy: msg.sender,\\n            currentStatus: \\\"Raw\\\",\\n            currentLocation: \\\"Mining Center\\\",\\n            currentHandler: msg.sender,\\n            isPurchased: false,\\n            isRefined: false,\\n            isAudited: false,\\n            isInspected: false,\\n            timestamp: block.timestamp\\n        });\\n\\n        // record initial mineral history\\n        mineralHistories[mineralId].push(\\n            MineralHistory({\\n                id: mineralId,\\n                fieldChanged: \\\"Registered\\\",\\n                newValue: string(abi.encodePacked(\\\"Origin: \\\", _origin)),\\n                updatedBy: msg.sender,\\n                timestamp: block.timestamp\\n            })\\n        );\\n\\n        emit MineralRegistered(\\n            mineralId,\\n            _name,\\n            _mineralType,\\n            _origin,\\n            _weight,\\n            _purityPercentage,\\n            msg.sender,\\n            block.timestamp\\n        );\\n\\n        return mineralId;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n        ===============================================================\\n                              PROCESSING ENTERPRISE\\n        ===============================================================                    \\n        //////////////////////////////////////////////////////////////*/\\n\\n    /*///////////////////////////////////////////////\\n                              REFINER\\n        ///////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev only the refiner can refiner a mineral\\n     * @param mineralId The ID of the mineral under refinery\\n     * @notice Emits MineralRefined event on successfl refining process\\n     */\\n    function refineMineral(string memory mineralId, string memory report) public restrictedToRole(REFINER_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (mineralDetails[mineralId].isRefined == true) revert RolesManager__MineralAlreadyRefined(mineralId);\\n\\n        mineralDetails[mineralId].isRefined = true;\\n\\n        emit MineralRefined(mineralId, report, msg.sender, block.timestamp);\\n    }\\n\\n    /*////////////////////////////////////////////////\\n                              TRANSPORTER\\n          ///////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev only the transporter can transport mineralDetails\\n     * @param mineralId The ID of the mineral under transportation\\n     * @param _receivingParty The address of the destination portal\\n     * @param _origin The Original location of the mineral under transportation\\n     * @param _destination The Destination area of the mineral(string)\\n     * @notice Emits MineralTransported on successful transportation\\n     */\\n    function transferMineral(\\n        string memory mineralId,\\n        address _receivingParty,\\n        string memory _origin,\\n        string memory _destination\\n    ) public virtual restrictedToRole(TRANSPORTER_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (_receivingParty == address(0)) revert RolesManager__InvalidReceivingPartyAddress();\\n\\n        if (bytes(_origin).length == 0) revert RolesManager__InvalidMineralOrigin();\\n\\n        if (bytes(_destination).length == 0) revert RolesManager__InvalidMineralDestination();\\n\\n        if (mineralDetails[mineralId].isPurchased == true) revert RolesManager__MineralAlreadyPurchased(mineralId);\\n\\n        mineralDetails[mineralId].currentHandler = msg.sender;\\n\\n        emit MineralTransported(mineralId, msg.sender, _receivingParty, _origin, _destination, block.timestamp);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n        ===============================================================\\n                     SUPPLYCHAIN VALIDATION PORTAL\\n        ===============================================================\\n        //////////////////////////////////////////////////////////////*/\\n\\n    /*///////////////////////////////////////////////\\n                               INSPECTOR\\n            ///////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev only the inspector can inspect mineralDetails\\n     * @param mineralId The ID of the mineral under inspection\\n     * @param report The inspection status report of the mineral under inspection\\n     * @notice Emits MineralInspected event on successful inspection\\n     * @dev Logs audit report on every successful inspection\\n     */\\n    function inspectMineral(string memory mineralId, string memory report) public restrictedToRole(INSPECTOR_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (mineralDetails[mineralId].isInspected == true) revert RolesManager__MineralAlreadyInspected(mineralId);\\n\\n        mineralDetails[mineralId].isInspected = true;\\n\\n        emit MineralInspected(mineralId, report, msg.sender, block.timestamp);\\n\\n        /*//////////////////////////////////////////////////\\n                          HANDLE INSPECTION REPORTING\\n           ///////////////////////////////////////////////////*/\\n    }\\n\\n    /*/////////////////////////////////////////////\\n                               AUDITOR\\n            ////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev only the auditor can audit mineralDetails.\\n     * @dev Logs audit report on every successful audit.\\n     * @param mineralId The ID of the mineral under audition.\\n     * @param report The audit status report of the mineral under audition.\\n     * @notice Emits MineralAudited event.\\n     */\\n    function _auditMineral(\\n        string memory mineralId,\\n        string memory report\\n    ) public /*virtual*/ restrictedToRole(AUDITOR_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (mineralDetails[mineralId].isAudited == true) revert RolesManager__MineralAlreadyAudited(mineralId);\\n\\n        mineralDetails[mineralId].isAudited = true;\\n\\n        emit MineralAudited(mineralId, report, msg.sender, block.timestamp);\\n\\n        /*//////////////////////////////////////////////////\\n                          HANDLE AUDIT REPORTING\\n           ///////////////////////////////////////////////////*/\\n    }\\n\\n    /**\\n     * @dev Only the buyer can purchase mineralDetails\\n     * @param mineralId The ID of the mineral under purchase\\n     * @notice Emits MineralPurchased event on successful purchase\\n     */\\n    function purchaseMineral(string memory mineralId) public restrictedToRole(BUYER_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (mineralDetails[mineralId].isPurchased == true) revert RolesManager__MineralAlreadyPurchased(mineralId);\\n\\n        (bool isAudited, bool isInspected) = checkAuditAndInspectionStatus(mineralId);\\n\\n        if (!(isAudited && isInspected)) revert RolesManager__MineralNotMarketReady(mineralId);\\n\\n        // require(mineralDetails[mineralId].currentHandler == msg.sender, \\\"You are not the assigned buyer for this mineral!!\\\");\\n\\n        mineralDetails[mineralId].isPurchased = true;\\n        mineralDetails[mineralId].currentHandler = msg.sender;\\n\\n        emit MineralPurchased(mineralId, msg.sender, block.timestamp);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                     ROLESMANAGER HELPER FUNCTIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            ADMIN FUNCTIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    ////////////////////////////////////////////////\\n    /////// ROLEMANAGEMENT FUNCTIONS ////////////////\\n    ////////////////////////////////////////////////\\n\\n    /////////////////////////////////\\n    ////// ROLE GRANTING ////////////\\n    /////////////////////////////////\\n\\n    /*////////////////////////////////////////////////////\\n                  ROLE MANAGEMENT FUNCTIONS\\n    ////////////////////////////////////////////////////*/\\n\\n    function assignMiner(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasMinerRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(MINER_ROLE, account);\\n        roleMemberCount[MINER_ROLE]++;\\n        emit MinerRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignRefiner(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasRefinerRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(REFINER_ROLE, account);\\n        roleMemberCount[REFINER_ROLE]++;\\n        emit RefinerRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignTransporter(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasTransporterRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(TRANSPORTER_ROLE, account);\\n        roleMemberCount[TRANSPORTER_ROLE]++;\\n        emit TransporterRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignAuditor(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasAuditorRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(AUDITOR_ROLE, account);\\n        roleMemberCount[AUDITOR_ROLE]++;\\n        emit AuditorRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignInspector(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasInspectorRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(INSPECTOR_ROLE, account);\\n        roleMemberCount[INSPECTOR_ROLE]++;\\n        emit InspectorRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignBuyer(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasBuyerRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(BUYER_ROLE, account);\\n        roleMemberCount[BUYER_ROLE]++;\\n        emit BuyerRoleAssigned(account, block.timestamp);\\n    }\\n\\n    /////////////////////////////////\\n    // ROLE REVOKATION /////////////\\n    ////////////////////////////////\\n\\n    function revokeMiner(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasMinerRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(MINER_ROLE, account);\\n        if (roleMemberCount[MINER_ROLE] > 0) {\\n            roleMemberCount[MINER_ROLE]--;\\n        }\\n        emit MinerRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeRefiner(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasRefinerRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(REFINER_ROLE, account);\\n\\n        if (roleMemberCount[REFINER_ROLE] > 0) {\\n            roleMemberCount[REFINER_ROLE]--;\\n        }\\n        emit RefinerRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeTransporter(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasTransporterRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(TRANSPORTER_ROLE, account);\\n        if (roleMemberCount[TRANSPORTER_ROLE] > 0) {\\n            roleMemberCount[TRANSPORTER_ROLE]--;\\n        }\\n        emit TransporterRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeInspector(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasInspectorRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(INSPECTOR_ROLE, account);\\n        if (roleMemberCount[INSPECTOR_ROLE] > 0) {\\n            roleMemberCount[INSPECTOR_ROLE]--;\\n        }\\n        emit InspectorRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeAuditor(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasAuditorRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(AUDITOR_ROLE, account);\\n        if (roleMemberCount[AUDITOR_ROLE] > 0) {\\n            roleMemberCount[AUDITOR_ROLE]--;\\n        }\\n        emit AuditorRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeBuyer(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasBuyerRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(BUYER_ROLE, account);\\n        if (roleMemberCount[BUYER_ROLE] > 0) {\\n            roleMemberCount[BUYER_ROLE]--;\\n        }\\n        emit BuyerRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    /*/////////////////////////////////////////////////////\\n                  NEW ROLE COUNT FUNCTIONS\\n    /////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev Returns the number of accounts that have a specific role\\n     * @param role The role to query member count for\\n     * @return count The number of accounts with the role\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256 count) {\\n        if (!isValidRole(role)) revert RolesManager__InvalidRole();\\n        return roleMemberCount[role];\\n    }\\n\\n    /**\\n     * @dev Returns all role counts in a single call\\n     * @return minerCount Number of miners\\n     * @return refinerCount Number of refiners\\n     * @return transporterCount Number of transporters\\n     * @return auditorCount Number of auditors\\n     * @return inspectorCount Number of inspectors\\n     * @return buyerCount Number of buyers\\n     */\\n    function getAllRoleCounts()\\n        public\\n        view\\n        returns (\\n            uint256 minerCount,\\n            uint256 refinerCount,\\n            uint256 transporterCount,\\n            uint256 auditorCount,\\n            uint256 inspectorCount,\\n            uint256 buyerCount\\n        )\\n    {\\n        return (\\n            roleMemberCount[MINER_ROLE],\\n            roleMemberCount[REFINER_ROLE],\\n            roleMemberCount[TRANSPORTER_ROLE],\\n            roleMemberCount[AUDITOR_ROLE],\\n            roleMemberCount[INSPECTOR_ROLE],\\n            roleMemberCount[BUYER_ROLE]\\n        );\\n    }\\n\\n    // ... (keep all your existing functions below this point) ...\\n    // Only modification needed is to ensure the _setupRole function also increments counters:\\n    function _setupRole(bytes32 role, address account) internal {\\n        _grantRole(role, account);\\n\\n        roleMemberCount[role]++;\\n    }\\n\\n    /**\\n     * @dev Revokes role from an account - onlydmin\\n     * @param account The address of the account to be revoked role by the admin\\n     * @notice Emits event of the revoked role\\n     */\\n\\n    /*/////////////////////////////////////////////////////\\n   ====================================================\\n            HELPER FUNCTIONS SECTION\\n   ====================================================\\n   /////////////////////////////////////////////////////*/\\n\\n    /////////////////////////////////////////////////\\n    //////// ROLE OWNERSHIP CHECKS //////////////////\\n    /////////////////////////////////////////////////\\n\\n    /**\\n     * @dev Returns all roles assigned to a given address\\n     * @param account The address to check roles for\\n     * @return roles An array of role names the address has\\n     */\\n    function getRolesForAddress(\\n        address account\\n    ) public view onlyNonZeroAddress(account) returns (string[] memory roles) {\\n        // Count how many roles the address has\\n        uint256 roleCount = 0;\\n\\n        if (hasRole(DEFAULT_ADMIN_ROLE, account)) roleCount++;\\n        if (hasRole(MINER_ROLE, account)) roleCount++;\\n        if (hasRole(REFINER_ROLE, account)) roleCount++;\\n        if (hasRole(TRANSPORTER_ROLE, account)) roleCount++;\\n        if (hasRole(AUDITOR_ROLE, account)) roleCount++;\\n        if (hasRole(INSPECTOR_ROLE, account)) roleCount++;\\n        if (hasRole(BUYER_ROLE, account)) roleCount++;\\n\\n        // Initialize array with the counted size\\n        roles = new string[](roleCount);\\n        uint256 index = 0;\\n\\n        // Populate the array with role names\\n        if (hasRole(DEFAULT_ADMIN_ROLE, account)) {\\n            roles[index] = \\\"ADMIN\\\";\\n            index++;\\n        }\\n        if (hasRole(MINER_ROLE, account)) {\\n            roles[index] = \\\"MINER\\\";\\n            index++;\\n        }\\n        if (hasRole(REFINER_ROLE, account)) {\\n            roles[index] = \\\"REFINER\\\";\\n            index++;\\n        }\\n        if (hasRole(TRANSPORTER_ROLE, account)) {\\n            roles[index] = \\\"TRANSPORTER\\\";\\n            index++;\\n        }\\n        if (hasRole(AUDITOR_ROLE, account)) {\\n            roles[index] = \\\"AUDITOR\\\";\\n            index++;\\n        }\\n        if (hasRole(INSPECTOR_ROLE, account)) {\\n            roles[index] = \\\"INSPECTOR\\\";\\n            index++;\\n        }\\n        if (hasRole(BUYER_ROLE, account)) {\\n            roles[index] = \\\"BUYER\\\";\\n            index++;\\n        }\\n\\n        return roles;\\n    }\\n\\n    // function _setupRole(bytes32 role, address account) internal virtual {\\n    //     __grantRole(role, account);\\n    // }\\n\\n    /**\\n     ** @dev Roles helper functions\\n     * @dev checks if an account has a specific role\\n     * @param account The address of the account to checked with role association\\n     */\\n    function hasMinerRole(address account) public view returns (bool) {\\n        return hasRole(MINER_ROLE, account);\\n    }\\n    function hasRefinerRole(address account) public view returns (bool) {\\n        return hasRole(REFINER_ROLE, account);\\n    }\\n    function hasTransporterRole(address account) public view returns (bool) {\\n        return hasRole(TRANSPORTER_ROLE, account);\\n    }\\n    function hasInspectorRole(address account) public view returns (bool) {\\n        return hasRole(INSPECTOR_ROLE, account);\\n    }\\n    function hasAuditorRole(address account) public view returns (bool) {\\n        return hasRole(AUDITOR_ROLE, account);\\n    }\\n    function hasBuyerRole(address account) public view returns (bool) {\\n        return hasRole(BUYER_ROLE, account);\\n    }\\n    function hasAdminRole(address account) public view returns (bool) {\\n        return hasRole(DEFAULT_ADMIN_ROLE, account);\\n    }\\n\\n    // Helper function to validate the role\\n    function isValidRole(bytes32 role) private pure returns (bool) {\\n        return\\n            role == MINER_ROLE ||\\n            role == REFINER_ROLE ||\\n            role == TRANSPORTER_ROLE ||\\n            role == AUDITOR_ROLE ||\\n            role == INSPECTOR_ROLE ||\\n            role == BUYER_ROLE;\\n    }\\n\\n    /**\\n    * @dev checks audit and inspection status\\n    * @param mineralId The ID of the mineral to check for audit and inspection status\\n\\n    * Returns (isValid, isInspected) statuses of both audit and inspection of mineral according to mineralId\\n    */\\n    function checkAuditAndInspectionStatus(\\n        string memory mineralId\\n    ) public virtual restrictedToRole(DEFAULT_ADMIN_ROLE) returns (bool isAudited, bool isInspected) {\\n        if (\\n            keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n            bytes(mineralId).length == 0\\n        ) {\\n            revert RolesManager__InvalidMineralIdOrNotFound();\\n        }\\n\\n        if (mineralDetails[mineralId].isAudited && mineralDetails[mineralId].isInspected) {\\n            emit MineralReadyToTrade(mineralId, msg.sender, \\\"TradingReady\\\", block.timestamp);\\n        } else {\\n            revert RolesManager__MineralNotMarketReady(mineralId);\\n        }\\n\\n        isAudited = mineralDetails[mineralId].isAudited;\\n        isInspected = mineralDetails[mineralId].isInspected;\\n\\n        return (isAudited, isInspected);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            GETTERS - For Traceability\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function getMineralHistory(string memory mineralId) public view virtual returns (MineralHistory[] memory) {\\n        if (\\n            keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n            bytes(mineralId).length == 0\\n        ) {\\n            revert RolesManager__InvalidMineralIdOrNotFound();\\n        }\\n\\n        return mineralHistories[mineralId];\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n    ===============================================================\\n         MINERAL REGISTRATION HELPER FUNCTIONS SECTION\\n    ===============================================================\\n    ////////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev checks if a mineral with the given ID is registered\\n     * @param mineralId the ID of the mineral to check\\n     * @return A boolean indicating whether the mineral is registered or not\\n     */\\n    function isMineralRegistered(string memory mineralId) public virtual returns (bool) {\\n        if (bytes(mineralId).length == 0) {\\n            revert MineralRegistry__InvalidMineralIdOrNotFound(mineralId);\\n        }\\n\\n        if (keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId))) {\\n            revert MineralRegistry__MineralNotRegistered(mineralId);\\n        }\\n\\n        return true;\\n    }\\n\\n    //////////////////////////////////////////////////////\\n    //////// GENERATE HASHED MINERALID FOR UNIQUENESS/////\\n    //////////////////////////////////////////////////////\\n    function _generateHashedMineralId(string memory mineralType) internal returns (string memory) {\\n        bytes32 fullHash = keccak256(abi.encodePacked(mineralType, msg.sender, block.timestamp, nonce++));\\n\\n        // Convert first 4 bytes (8 hex characters) into hex string with \\\"0x\\\"\\n        bytes memory shortHex = new bytes(10); // 2 for \\\"0x\\\", 8 for hex chars\\n        shortHex[0] = \\\"0\\\";\\n        shortHex[1] = \\\"x\\\";\\n        for (uint i = 0; i < 4; i++) {\\n            shortHex[2 + i * 2] = _nibbleToHexChar(uint8(fullHash[i] >> 4));\\n            shortHex[3 + i * 2] = _nibbleToHexChar(uint8(fullHash[i] & 0x0f));\\n        }\\n\\n        return string(abi.encodePacked(mineralType, \\\"-\\\", string(shortHex)));\\n    }\\n\\n    // helper: convert nibble to hex char (0-9, a-f)\\n    function _nibbleToHexChar(uint8 nibble) internal pure returns (bytes1) {\\n        return nibble < 10 ? bytes1(nibble + 0x30) : bytes1(nibble + 0x61 - 10);\\n    }\\n\\n    ///////////////////////////////////////////////\\n    //////// getting all registered minerals /////\\n    // //////////////////////////////////////////////\\n    // function getAllRegisteredMineral() public view returns(MineralDetails[] memory mineralDetails) {\\n    //     return mineralDetails;\\n\\n    // }\\n}\\n\",\"keccak256\":\"0xe1d42561c04e03e5c20a3ffa091227c6ddf7827616de718f563331de64846c2f\",\"license\":\"MIT\"},\"contracts/logs/TransactionLog.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title TransactionLog\\n * @author @0xJonaseb11\\n * It keeps track of all the operations, transactions perfomed in the whole supply chain\\n * Helps to keep track of actities in the chain to enforce traceability\\n */\\nimport { RolesManager } from \\\"../core/RolesManager.sol\\\";\\nimport { Errors } from \\\"../utils/Errors.sol\\\";\\n\\ncontract TransactionLog is Errors, RolesManager {\\n    RolesManager private rolesManager;\\n\\n    // events to enforce transparency n traceability\\n    event TransactionRecorded(\\n        uint256 indexed transactionId,\\n        address indexed sender,\\n        address indexed receiver,\\n        string mineralId,\\n        uint256 timestamp,\\n        string transactionType\\n    );\\n    event OperationRecorded(address indexed actor, string operationType, string mineralId, uint256 timestamp);\\n\\n    struct Transaction {\\n        uint256 transactionId;\\n        address sender;\\n        address receiver;\\n        string mineralId;\\n        uint256 timestamp;\\n        string transactionType;\\n    }\\n\\n    /**\\n     * @dev operations to help in supplychainValidation contract\\n     */\\n    struct Operation {\\n        address actor;\\n        string operationType;\\n        string mineralId;\\n        uint256 timestamp;\\n    }\\n\\n    Operation[] private operations;\\n\\n    mapping(uint256 => Transaction) private transactions;\\n    uint256 private nextTransactionId = 1;\\n\\n    modifier onlyAuthorizedRoles() {\\n        if (\\n            !hasRole(MINER_ROLE, msg.sender) ||\\n            !hasRole(TRANSPORTER_ROLE, msg.sender) ||\\n            !hasRole(AUDITOR_ROLE, msg.sender) ||\\n            !hasRole(INSPECTOR_ROLE, msg.sender) ||\\n            !hasRole(DEFAULT_ADMIN_ROLE, msg.sender)\\n        ) revert InsufficientPermissionsToPerformAction(msg.sender);\\n        _;\\n    }\\n\\n    // setters\\n\\n    /**\\n     * @dev records operation in the supply chain\\n     * @notice Emits OperationRecorded even on successful record\\n     */\\n    function recordOperation(\\n        address actor,\\n        string memory operationType,\\n        string memory mineralId\\n    ) external onlyAuthorizedRoles onlyNonZeroAddress(actor) onlyValidMineralId(mineralId) {\\n        if (bytes(operationType).length == 0) revert TransactionLog__InvalidOperationType();\\n\\n        Operation memory newOperation = Operation({\\n            actor: actor,\\n            operationType: operationType,\\n            mineralId: mineralId,\\n            timestamp: block.timestamp\\n        });\\n        operations.push(newOperation);\\n\\n        emit OperationRecorded(actor, operationType, mineralId, block.timestamp);\\n    }\\n\\n    /**\\n     * @dev records a transaction\\n     * @notice Emits TransactionRecorded event on successful transaction recording\\n     */\\n\\n    function recordTransaction(\\n        address receiver,\\n        string memory mineralId,\\n        string memory transactionType\\n    ) public onlyAuthorizedRoles onlyValidMineralId(mineralId) onlyNonZeroAddress(receiver) {\\n        if (bytes(transactionType).length == 0) revert TransactionLog__InvalidOperationType();\\n\\n        uint256 transactionId = nextTransactionId++;\\n        transactions[transactionId] = Transaction({\\n            transactionId: transactionId,\\n            sender: msg.sender,\\n            receiver: receiver,\\n            mineralId: mineralId,\\n            timestamp: block.timestamp,\\n            transactionType: transactionType\\n        });\\n\\n        emit TransactionRecorded(transactionId, msg.sender, receiver, mineralId, block.timestamp, transactionType);\\n    }\\n\\n    // getters\\n\\n    /**\\n     * @dev retrieves operations using operation index\\n     * Returns An arrray containing operation.actor, operationType, mineralId and timestamp\\n     */\\n    function getOperation(\\n        uint256 index\\n    ) external view returns (address actor, string memory operationType, string memory mineralId, uint256 timestamp) {\\n        if (index == 0 || index > operations.length) revert TransactionLog__InvalidOperationIndex(index);\\n\\n        Operation memory operation = operations[index]; // \\u2705 Now safe to access\\n\\n        return (operation.actor, operation.operationType, operation.mineralId, block.timestamp);\\n    }\\n    /**\\n     * @dev get track of number of operations done\\n     */\\n    function getOperationsCount() external view returns (uint256) {\\n        return operations.length;\\n    }\\n\\n    /**\\n     * @dev retrieves transactions using transactionID\\n     * @return transactions using specified transactionId\\n     */\\n    function getTransaction(uint256 transactionId) public view returns (Transaction memory) {\\n        if (transactions[transactionId].transactionId == transactionId || transactionId == 0)\\n            revert TransactionLog__InvalidTransactionIdOrNotFound(transactionId);\\n\\n        return transactions[transactionId];\\n    }\\n\\n    /**\\n     * @dev retrieve transactions using mineralIDs\\n     * @return results of transactions with specified mineralIDs\\n     */\\n    function getTransactionsByMineral(\\n        string memory mineralId\\n    ) public view onlyValidMineralId(mineralId) returns (Transaction[] memory) {\\n        uint256 count = 0;\\n\\n        for (uint256 i = 1; i < nextTransactionId; i++) {\\n            if (keccak256(bytes(transactions[i].mineralId)) == keccak256(bytes(mineralId))) {\\n                count++;\\n            }\\n        }\\n\\n        Transaction[] memory results = new Transaction[](count);\\n        uint256 index = 0;\\n        for (uint256 i = 1; i < nextTransactionId; i++) {\\n            if (keccak256(bytes(transactions[i].mineralId)) == keccak256(bytes(mineralId))) {\\n                results[index] = transactions[i];\\n                index++;\\n            }\\n        }\\n\\n        return results;\\n    }\\n}\\n\",\"keccak256\":\"0x4b25c021ac073573581f79f5d6db24095e958b3c90a6d474ac28896f18b791c0\",\"license\":\"MIT\"},\"contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ncontract Errors {\\n    /*//////////////////////////////////////////////////////////////\\n                        MINERALREGISTRY__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n\\n    error MineralRegistry__MineralNotRegistered(string mineralId);\\n    error MineralRegistry__MineralAlreadyPurchased();\\n    error MineralRegistry__MineralAlreadyAudited();\\n    error MineralRegistry__MineralAlreadyInspected();\\n    error MineralRegistry__MineralNotAudited();\\n    error MineralRegistry__MineralNotInspected();\\n\\n    error MineralRegistry__InvalidMineralDetails();\\n    error MineralRegistry__InvalidMineralIdOrNotFound(string mineralId);\\n    error MineralRegistry__InvalidMineralStatus();\\n    error MineralRegistry__InvalidMineralName();\\n    error MineralRegistry__InvalidMineralOrigin();\\n    error MineralRegistry__InvalidMineralType();\\n    error MineralRegistry__InvalidMineralWeight();\\n    error MineralRegistry__InvalidMineralPurityPercentage();\\n    error MineralRegistry__InvalidMineralStorageConditions();\\n    error MineralRegistry__InvalidMineralLocation();\\n    error MineralRegistry__InvalidReceivingPartyAddress();\\n    error MineralRegistry__InvalidMineralDestination();\\n\\n    error MineralNotReadyToTrade(string mineralId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            ROLESMANAGER__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n    error RolesManager__MineralAlreadyRefined(string mineralId);\\n    error RolesManager__MineralAlreadyPurchased(string mineralId);\\n    error RolesManager__MineralAlreadyInspected(string mineralId);\\n    error RolesManager__MineralAlreadyAudited(string mineralId);\\n    error RolesManager__NotTheAssignedBuyer(address caller);\\n\\n    error RolesManager__InvalidMineralName();\\n    error RolesManager__InvalidMineralOrigin();\\n    error RolesManager__InvalidMineralDestination();\\n\\n    error RolesManager__MineralNotMarketReady(string mineralId);\\n\\n    error RolesManager__InvalidMineralIdOrNotFound();\\n    error RolesManager__InvalidMineralType();\\n    error RolesManager__InvalidReceivingPartyAddress();\\n    error RolesManager__InvalidMineralStorageConditions();\\n    error RolesManager__InvalidMineralPurityPercentage();\\n    error RolesManager__MineralPurityPercentageTooLowToRegister(uint256 purityPercentage);\\n    error RolesManager__InvalidMineralWeight();\\n\\n    error RolesManager__InvalidAddress();\\n    error RolesManager__InvalidRole();\\n\\n    // Roles Assignment and revocation\\n    error RolesManager__AccountAlreadyHasRole();\\n    error RolesManager__AccountDoesNotHaveRole();\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            DISPUTERESOLUTION__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n    error DisputeResolution__InvalidMineralIdOrNotFound();\\n    error DisputeResolution__InvalidDisputeDefendantAddress();\\n    error DisputeResolution__InvalidDisputeDetails();\\n    error DisputeResolution__InvalidDisputeEvidence();\\n    error DisputeResolution__InvalidDisputeIdOrNotFound();\\n    error DisputeResolution__InvalidResolutionDetails();\\n    error DisputeResolution__DisputeStatusNotPendingOrEscalated();\\n    error DisputeResolution__DisputeStatusNotPending(uint256 disputeId);\\n    error DisputeResolution__NotEligibleToVote(address caller);\\n    error DisputeResolution__AlreadyVoted(address caller);\\n    error DisputeResolution__DisputeEscalated_UnableToVote(uint256 disputeId);\\n    error DisputeResolution__VotingPeriodStillActive();\\n    error DisputeResolution__DisputeNotEscalated(uint256 disputeId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            MINERALWAREHOUSE__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n\\n    error MineralWarehouse__InvalidTokenAddress(address tokenAddress);\\n    error MineralWarehouse__MineralNotRefined(string mineralId);\\n    error MineralWarehouse__InvalidNumberOfPrices();\\n    error MineralWarehouse__UnacceptedToken(address tokenAddress);\\n    error MineralWarehouse__UnacceptedTokens(address[] tokenAddresses);\\n    error MineralWarehouse__MineralNotMarketReady(string mineralId);\\n    error MineralWarehouse__InvalidMineralPrice();\\n    error MineralWarehouse__MineralAlreadySold(string mineralId);\\n    error MineralWarehouse__UnauthorizedSeller(address seller);\\n    error MineralNotMarketReady(string mineralId);\\n    error MineralWarehouse__IncorrectETHAmount();\\n    error MineralWarehouse__ETHTransferFailed();\\n    error MineralWarehouse__InvalidTokenPrice();\\n\\n    error MineralWarehouse__MineralNotFoundInWarehouse(string mineralId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            TOKENISATION__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n\\n    error Tokenization__TokenAlreadyExists(uint256 tokenId);\\n    error Tokenization__TokenIsAlreadyMinted(uint256 tokenId);\\n    error Tokenization__InvalidTokenIdOrNotFound(uint256 tokenId);\\n    error Tokenization__CallerNotMineralTokenOwner(uint256 tokenId, address caller);\\n    error Tokenization__InvalidTokenId(uint256 tokenId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            TRANSACTIONlOG__CUSTOM ERRORS\\n       //////////////////////////////////////////////////////////////*/\\n    error TransactionLog__InvalidOperationType();\\n    error TransactionLog__InvalidOperationIndex(uint256 index);\\n    error TransactionLog__InvalidTransactionIdOrNotFound(uint256 transactionId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        SUPPLYCHAINVALIDATOR__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n\\n    error SupplychainValidator__InvalidMineralIdOrNotFound(string mineralId);\\n    error SupplychainValidator__InvalidMineralTransactionHistory();\\n    error SupplychainValidator__InvalidMineralOwnershipChain();\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             GLOBAL ERRORS\\n    //////////////////////////////////////////////////////////////*/\\n    error InvalidAccountAddress();\\n    error ERC20TokenTransferFailed(address token, uint256 tokenAmount);\\n    error InvalidPaymentMethods();\\n    error InvalidMineralIdOrNotFound(string mineralId);\\n    error InsufficientPermissionsToPerformAction(address caller);\\n\\n    /////////////////////////////////////\\n    // LOGISTICS MANAGER ERRORS /////////\\n    /////////////////////////////////////\\n    error TransportRequestAlreadyExists(string mineralId);\\n    error AddressDoesNotHaveRequiredRole(address caller, bytes32 role);\\n    error NotAssignedTransporter(string mineralId, address caller);\\n    error InvalidTransportStateTransition(string currentStatus, string attemptedStatus);\\n}\\n\",\"keccak256\":\"0x6e0084b44ab8ded04100c9661f4ba7cc7f94b2e4e9393723af5b4dc1b3b8d62a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ]
    },
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "_auditMineral(string,string)": {
        "details": "only the auditor can audit mineralDetails.Logs audit report on every successful audit.",
        "params": {
          "mineralId": "The ID of the mineral under audition.",
          "report": "The audit status report of the mineral under audition."
        }
      },
      "checkAuditAndInspectionStatus(string)": {
        "details": "checks audit and inspection status",
        "params": {
          "mineralId": "The ID of the mineral to check for audit and inspection status Returns (isValid, isInspected) statuses of both audit and inspection of mineral according to mineralId"
        }
      },
      "getAllRoleCounts()": {
        "details": "Returns all role counts in a single call",
        "returns": {
          "auditorCount": "Number of auditors",
          "buyerCount": "Number of buyers",
          "inspectorCount": "Number of inspectors",
          "minerCount": "Number of miners",
          "refinerCount": "Number of refiners",
          "transporterCount": "Number of transporters"
        }
      },
      "getOperation(uint256)": {
        "details": "retrieves operations using operation index Returns An arrray containing operation.actor, operationType, mineralId and timestamp"
      },
      "getOperationsCount()": {
        "details": "get track of number of operations done"
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have a specific role",
        "params": {
          "role": "The role to query member count for"
        },
        "returns": {
          "count": "The number of accounts with the role"
        }
      },
      "getRolesForAddress(address)": {
        "details": "Returns all roles assigned to a given address",
        "params": {
          "account": "The address to check roles for"
        },
        "returns": {
          "roles": "An array of role names the address has"
        }
      },
      "getTransaction(uint256)": {
        "details": "retrieves transactions using transactionID",
        "returns": {
          "_0": "transactions using specified transactionId"
        }
      },
      "getTransactionsByMineral(string)": {
        "details": "retrieve transactions using mineralIDs",
        "returns": {
          "_0": "results of transactions with specified mineralIDs"
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasMinerRole(address)": {
        "details": "Roles helper functionschecks if an account has a specific role",
        "params": {
          "account": "The address of the account to checked with role association"
        }
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "inspectMineral(string,string)": {
        "details": "only the inspector can inspect mineralDetailsLogs audit report on every successful inspection",
        "params": {
          "mineralId": "The ID of the mineral under inspection",
          "report": "The inspection status report of the mineral under inspection"
        }
      },
      "isMineralRegistered(string)": {
        "details": "checks if a mineral with the given ID is registered",
        "params": {
          "mineralId": "the ID of the mineral to check"
        },
        "returns": {
          "_0": "A boolean indicating whether the mineral is registered or not"
        }
      },
      "purchaseMineral(string)": {
        "details": "Only the buyer can purchase mineralDetails",
        "params": {
          "mineralId": "The ID of the mineral under purchase"
        }
      },
      "recordOperation(address,string,string)": {
        "details": "records operation in the supply chain"
      },
      "recordTransaction(address,string,string)": {
        "details": "records a transaction"
      },
      "refineMineral(string,string)": {
        "details": "only the refiner can refiner a mineral",
        "params": {
          "mineralId": "The ID of the mineral under refinery"
        }
      },
      "registerMineral(string,string,uint256,string,uint256,string)": {
        "details": "Register a new mineral - only by miner.Every mineral is assigned a unique mineralId.",
        "params": {
          "_mineralType": "The type of a mineral.",
          "_name": "Mineral name.",
          "_origin": "Mineral Origin.",
          "_purityPercentage": "Mineral purity in percentage.",
          "_storageConditions": "Mineral Storage conditions.",
          "_weight": "Mineral weight in uint256."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferMineral(string,address,string,string)": {
        "details": "only the transporter can transport mineralDetails",
        "params": {
          "_destination": "The Destination area of the mineral(string)",
          "_origin": "The Original location of the mineral under transportation",
          "_receivingParty": "The address of the destination portal",
          "mineralId": "The ID of the mineral under transportation"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "_auditMineral(string,string)": {
        "notice": "Emits MineralAudited event."
      },
      "inspectMineral(string,string)": {
        "notice": "Emits MineralInspected event on successful inspection"
      },
      "purchaseMineral(string)": {
        "notice": "Emits MineralPurchased event on successful purchase"
      },
      "recordOperation(address,string,string)": {
        "notice": "Emits OperationRecorded even on successful record"
      },
      "recordTransaction(address,string,string)": {
        "notice": "Emits TransactionRecorded event on successful transaction recording"
      },
      "refineMineral(string,string)": {
        "notice": "Emits MineralRefined event on successfl refining process"
      },
      "registerMineral(string,string,uint256,string,uint256,string)": {
        "notice": "Emits MineralRegistered event on successful registration."
      },
      "transferMineral(string,address,string,string)": {
        "notice": "Emits MineralTransported on successful transportation"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
      },
      {
        "astId": 3707,
        "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
        "label": "nonce",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3712,
        "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
        "label": "mineralDetails",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(MineralDetails)3689_storage)"
      },
      {
        "astId": 3718,
        "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
        "label": "mineralHistories",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(MineralHistory)3700_storage)dyn_storage)"
      },
      {
        "astId": 3722,
        "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
        "label": "roleMemberCount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 6562,
        "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
        "label": "rolesManager",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(RolesManager)5420"
      },
      {
        "astId": 6613,
        "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
        "label": "operations",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(Operation)6609_storage)dyn_storage"
      },
      {
        "astId": 6618,
        "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
        "label": "transactions",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Transaction)6599_storage)"
      },
      {
        "astId": 6621,
        "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
        "label": "nextTransactionId",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(MineralHistory)3700_storage)dyn_storage": {
        "base": "t_struct(MineralHistory)3700_storage",
        "encoding": "dynamic_array",
        "label": "struct RolesManager.MineralHistory[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Operation)6609_storage)dyn_storage": {
        "base": "t_struct(Operation)6609_storage",
        "encoding": "dynamic_array",
        "label": "struct TransactionLog.Operation[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(RolesManager)5420": {
        "encoding": "inplace",
        "label": "contract RolesManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)21_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(MineralHistory)3700_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct RolesManager.MineralHistory[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(MineralHistory)3700_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(MineralDetails)3689_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct RolesManager.MineralDetails)",
        "numberOfBytes": "32",
        "value": "t_struct(MineralDetails)3689_storage"
      },
      "t_mapping(t_uint256,t_struct(Transaction)6599_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct TransactionLog.Transaction)",
        "numberOfBytes": "32",
        "value": "t_struct(Transaction)6599_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(MineralDetails)3689_storage": {
        "encoding": "inplace",
        "label": "struct RolesManager.MineralDetails",
        "members": [
          {
            "astId": 3658,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3660,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 3662,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "origin",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3664,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "mineralType",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 3666,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "weight",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3668,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "purityPercentage",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3670,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "storageConditions",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 3672,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "registeredBy",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 3674,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "currentStatus",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          },
          {
            "astId": 3676,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "currentLocation",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          },
          {
            "astId": 3678,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "currentHandler",
            "offset": 0,
            "slot": "10",
            "type": "t_address"
          },
          {
            "astId": 3680,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "isPurchased",
            "offset": 20,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 3682,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "isRefined",
            "offset": 21,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 3684,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "isAudited",
            "offset": 22,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 3686,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "isInspected",
            "offset": 23,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 3688,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "timestamp",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(MineralHistory)3700_storage": {
        "encoding": "inplace",
        "label": "struct RolesManager.MineralHistory",
        "members": [
          {
            "astId": 3691,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3693,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "fieldChanged",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 3695,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "newValue",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3697,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "updatedBy",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 3699,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Operation)6609_storage": {
        "encoding": "inplace",
        "label": "struct TransactionLog.Operation",
        "members": [
          {
            "astId": 6602,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "actor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6604,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "operationType",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 6606,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "mineralId",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 6608,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(RoleData)21_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Transaction)6599_storage": {
        "encoding": "inplace",
        "label": "struct TransactionLog.Transaction",
        "members": [
          {
            "astId": 6588,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "transactionId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6590,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "sender",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 6592,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "receiver",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 6594,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "mineralId",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 6596,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 6598,
            "contract": "contracts/logs/TransactionLog.sol:TransactionLog",
            "label": "transactionType",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}