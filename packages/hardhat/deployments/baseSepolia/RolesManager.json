{
  "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "AddressDoesNotHaveRequiredRole",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "DisputeResolution__AlreadyVoted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "disputeId",
          "type": "uint256"
        }
      ],
      "name": "DisputeResolution__DisputeEscalated_UnableToVote",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "disputeId",
          "type": "uint256"
        }
      ],
      "name": "DisputeResolution__DisputeNotEscalated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "disputeId",
          "type": "uint256"
        }
      ],
      "name": "DisputeResolution__DisputeStatusNotPending",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__DisputeStatusNotPendingOrEscalated",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidDisputeDefendantAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidDisputeDetails",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidDisputeEvidence",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidDisputeIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__InvalidResolutionDetails",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "DisputeResolution__NotEligibleToVote",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeResolution__VotingPeriodStillActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "ERC20TokenTransferFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "InsufficientPermissionsToPerformAction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAccountAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPaymentMethods",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "currentStatus",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "attemptedStatus",
          "type": "string"
        }
      ],
      "name": "InvalidTransportStateTransition",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralNotMarketReady",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralNotReadyToTrade",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralDestination",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralDetails",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralRegistry__InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralLocation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralName",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralOrigin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralPurityPercentage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralStatus",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralStorageConditions",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidMineralWeight",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__InvalidReceivingPartyAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralAlreadyAudited",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralAlreadyInspected",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralAlreadyPurchased",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralNotAudited",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralRegistry__MineralNotInspected",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralRegistry__MineralNotRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__ETHTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__IncorrectETHAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__InvalidETHPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__InvalidMineralPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__InvalidNumberOfPrices",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "MineralWarehouse__InvalidTokenAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__InvalidTokenPrice",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralWarehouse__MineralAlreadySold",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralWarehouse__MineralNotFoundInWarehouse",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralWarehouse__MineralNotMarketReady",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "MineralWarehouse__MineralNotRefined",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MineralWarehouse__MismatchedArrays",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "MineralWarehouse__TokenNotAccepted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "MineralWarehouse__UnacceptedToken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "MineralWarehouse__UnacceptedTokens",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "MineralWarehouse__UnauthorizedSeller",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "NotAssignedTransporter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__AccountAlreadyHasRole",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__AccountDoesNotHaveRole",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralDestination",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralName",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralOrigin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralPurityPercentage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralStorageConditions",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidMineralWeight",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidReceivingPartyAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RolesManager__InvalidRole",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralAlreadyAudited",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralAlreadyInspected",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralAlreadyPurchased",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralAlreadyRefined",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "RolesManager__MineralNotMarketReady",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "purityPercentage",
          "type": "uint256"
        }
      ],
      "name": "RolesManager__MineralPurityPercentageTooLowToRegister",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "RolesManager__NotTheAssignedBuyer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "SupplychainValidator__InvalidMineralIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SupplychainValidator__InvalidMineralOwnershipChain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SupplychainValidator__InvalidMineralTransactionHistory",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Tokenization__CallerNotMineralTokenOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Tokenization__InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Tokenization__InvalidTokenIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Tokenization__TokenAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Tokenization__TokenIsAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "TransactionLog__InvalidOperationIndex",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransactionLog__InvalidOperationType",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "TransactionLog__InvalidTransactionIdOrNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "TransportRequestAlreadyExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AdminRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AdminRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AuditorRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AuditorRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "BuyerRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "BuyerRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "InspectorRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "InspectorRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MinerRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MinerRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "status",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "auditor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auditedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralAudited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralStatus",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inspector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inspectedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralInspected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "purchasedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "ApprovedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "status",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inspectionDate",
          "type": "uint256"
        }
      ],
      "name": "MineralReadyToTrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "refineryReport",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "refiner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refinedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralRefined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralType",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "origin",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "purityPercentage",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "miner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registeredAt",
          "type": "uint256"
        }
      ],
      "name": "MineralRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "transporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receivingParty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "origin",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "destination",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transportedAt",
          "type": "uint256"
        }
      ],
      "name": "MineralTransported",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RefinerRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RefinerRoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "roleAssignedAt",
          "type": "uint256"
        }
      ],
      "name": "RoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "revoker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "roleRevokedAt",
          "type": "uint256"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assignee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "TransporterRoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revokee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "TransporterRoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AUDITOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BUYER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INSPECTOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REFINER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSPORTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "report",
          "type": "string"
        }
      ],
      "name": "_auditMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignAuditor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignInspector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignMiner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignRefiner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "assignTransporter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "checkAuditAndInspectionStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isAudited",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isInspected",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRoleCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minerCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "refinerCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "transporterCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auditorCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inspectorCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyerCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "getMineralHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "fieldChanged",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "newValue",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "updatedBy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct RolesManager.MineralHistory[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getRolesForAddress",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "roles",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasAdminRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasAuditorRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasBuyerRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasInspectorRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasMinerRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRefinerRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasTransporterRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "report",
          "type": "string"
        }
      ],
      "name": "inspectMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "isMineralRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "mineralDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "origin",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "mineralType",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "purityPercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "storageConditions",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registeredBy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "currentStatus",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "currentLocation",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "currentHandler",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPurchased",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isRefined",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isAudited",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isInspected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mineralHistories",
      "outputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "fieldChanged",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "updatedBy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        }
      ],
      "name": "purchaseMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "report",
          "type": "string"
        }
      ],
      "name": "refineMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_mineralType",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_origin",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_purityPercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_storageConditions",
          "type": "string"
        }
      ],
      "name": "registerMineral",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeAuditor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeInspector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeMiner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeRefiner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeTransporter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "roleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mineralId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_receivingParty",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_origin",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_destination",
          "type": "string"
        }
      ],
      "name": "transferMineral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
  "receipt": {
    "to": null,
    "from": "0x0dfDb5bBaEeCE3871f826DF1C6Fe24a2772f5d38",
    "contractAddress": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
    "transactionIndex": 84,
    "gasUsed": "4324272",
    "logsBloom": "0x008000040000000000000000000240000000000000040000100000100000005040102000000000000000800000004000010000000044000000000000000000000000000000000000000000000200000000000000000000004000000000200000000000800a1000000000000000000800000000000040100000000000008000000000000400000000000000000000000000000000000000000200000000220000000000020800004000100002000010000100000100000000001000000000400000800000000000000000000000000000000040000000000100000000000020000042000000000000000000000000000000000000000300000000000000000000",
    "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a",
    "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
    "logs": [
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x",
        "logIndex": 95,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x458ea7e03b3466b3cf9bc2d66ddea8b11fe9469982816f42666888e6c8c6e664",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000068274434",
        "logIndex": 96,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e72",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x",
        "logIndex": 97,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x593f046317558c2857b92915c62c99f2d2108f7bc6f1e1b3c5376cd559abf559",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000068274434",
        "logIndex": 98,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x59a1c48e5837ad7a7f3dcedcbe129bf3249ec4fbf651fd4f5e2600ead39fe2f5",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x",
        "logIndex": 99,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x4a02edd19f09212e54b2ac85d7d3a4a2e3fbf424e6710c3f817d9b4cecc9cdb3",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000068274434",
        "logIndex": 100,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x273dcf2136c7d8ef632bb8ef13dbca69a8f36fa620c7468671b3153d46a211c0",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x",
        "logIndex": 101,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x49cc27c2a068c01cf703c3923dfc679109b5f6c27bd1f61b542c159e3a73e092",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000068274434",
        "logIndex": 102,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xf8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x",
        "logIndex": 103,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0xf8ed9ac482b0f7c12999b3f157f758f84e39cd339fa301ea203823ac29e97505",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000068274434",
        "logIndex": 104,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xa977e1a3444218ff332edf735c56487bbe59922b15c88777d443eb8b78020f4d",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x",
        "logIndex": 105,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x4e3eede475de92d3e23765b737dbb67646352b3328c1a437d7f089766d7be751",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000068274434",
        "logIndex": 106,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xddaa901e2fe3bda354fe0ede2785152d5c109282a613fe024a056a3e66c41bb3",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x",
        "logIndex": 107,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 25817770,
        "transactionHash": "0xdcd12ca1792ae07e19a1914cdd96a999e72f98d7262e6f25ec4bf663f3ccaa3d",
        "address": "0xBE9937373Fb1ECb63C4542b683a983680ca19B61",
        "topics": [
          "0x964e50cb3bdb84c00a30f56ae15d538d23dc6db14f891d7d819761b161e990a6",
          "0x0000000000000000000000000dfdb5bbaeece3871f826df1c6fe24a2772f5d38"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000068274434",
        "logIndex": 108,
        "blockHash": "0xbbfa2ef8ab624f82d31545f3fb3aafc472a3b4e591db68755fea8ab765569b9a"
      }
    ],
    "blockNumber": 25817770,
    "cumulativeGasUsed": "11444201",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4ac07be6920e786cad9484450fdc0858",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"AddressDoesNotHaveRequiredRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"DisputeResolution__AlreadyVoted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"DisputeResolution__DisputeEscalated_UnableToVote\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"DisputeResolution__DisputeNotEscalated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"DisputeResolution__DisputeStatusNotPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__DisputeStatusNotPendingOrEscalated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidDisputeDefendantAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidDisputeDetails\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidDisputeEvidence\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidDisputeIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__InvalidResolutionDetails\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"DisputeResolution__NotEligibleToVote\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeResolution__VotingPeriodStillActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"ERC20TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"InsufficientPermissionsToPerformAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAccountAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPaymentMethods\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"currentStatus\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"attemptedStatus\",\"type\":\"string\"}],\"name\":\"InvalidTransportStateTransition\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralNotMarketReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralNotReadyToTrade\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralDestination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralDetails\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralRegistry__InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralLocation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralName\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralOrigin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralPurityPercentage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralStorageConditions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidMineralWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__InvalidReceivingPartyAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralAlreadyAudited\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralAlreadyInspected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralAlreadyPurchased\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralNotAudited\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralRegistry__MineralNotInspected\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralRegistry__MineralNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__IncorrectETHAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__InvalidETHPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__InvalidMineralPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__InvalidNumberOfPrices\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"MineralWarehouse__InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__InvalidTokenPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralWarehouse__MineralAlreadySold\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralWarehouse__MineralNotFoundInWarehouse\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralWarehouse__MineralNotMarketReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"MineralWarehouse__MineralNotRefined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MineralWarehouse__MismatchedArrays\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"MineralWarehouse__TokenNotAccepted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"MineralWarehouse__UnacceptedToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"MineralWarehouse__UnacceptedTokens\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"MineralWarehouse__UnauthorizedSeller\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotAssignedTransporter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__AccountAlreadyHasRole\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__AccountDoesNotHaveRole\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralDestination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralName\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralOrigin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralPurityPercentage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralStorageConditions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidMineralWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidReceivingPartyAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RolesManager__InvalidRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralAlreadyAudited\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralAlreadyInspected\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralAlreadyPurchased\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralAlreadyRefined\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"RolesManager__MineralNotMarketReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"purityPercentage\",\"type\":\"uint256\"}],\"name\":\"RolesManager__MineralPurityPercentageTooLowToRegister\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"RolesManager__NotTheAssignedBuyer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"SupplychainValidator__InvalidMineralIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SupplychainValidator__InvalidMineralOwnershipChain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SupplychainValidator__InvalidMineralTransactionHistory\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Tokenization__CallerNotMineralTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Tokenization__InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Tokenization__InvalidTokenIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Tokenization__TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Tokenization__TokenIsAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"TransactionLog__InvalidOperationIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionLog__InvalidOperationType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"TransactionLog__InvalidTransactionIdOrNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"TransportRequestAlreadyExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AdminRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AdminRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AuditorRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AuditorRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BuyerRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BuyerRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"InspectorRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"InspectorRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MinerRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MinerRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"auditor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auditedAt\",\"type\":\"uint256\"}],\"name\":\"MineralAudited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralStatus\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"inspector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inspectedAt\",\"type\":\"uint256\"}],\"name\":\"MineralInspected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"purchasedAt\",\"type\":\"uint256\"}],\"name\":\"MineralPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ApprovedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inspectionDate\",\"type\":\"uint256\"}],\"name\":\"MineralReadyToTrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"refineryReport\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refiner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refinedAt\",\"type\":\"uint256\"}],\"name\":\"MineralRefined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"purityPercentage\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registeredAt\",\"type\":\"uint256\"}],\"name\":\"MineralRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receivingParty\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transportedAt\",\"type\":\"uint256\"}],\"name\":\"MineralTransported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RefinerRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RefinerRoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roleAssignedAt\",\"type\":\"uint256\"}],\"name\":\"RoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roleRevokedAt\",\"type\":\"uint256\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TransporterRoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TransporterRoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AUDITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BUYER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INSPECTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFINER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSPORTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"report\",\"type\":\"string\"}],\"name\":\"_auditMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignAuditor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignInspector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignMiner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignRefiner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assignTransporter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"checkAuditAndInspectionStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAudited\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isInspected\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoleCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refinerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transporterCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auditorCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inspectorCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyerCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"getMineralHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fieldChanged\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct RolesManager.MineralHistory[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRolesForAddress\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"roles\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasAdminRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasAuditorRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasBuyerRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasInspectorRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasMinerRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRefinerRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasTransporterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"report\",\"type\":\"string\"}],\"name\":\"inspectMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"isMineralRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"mineralDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mineralType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"purityPercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"storageConditions\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registeredBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"currentStatus\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"currentLocation\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentHandler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPurchased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAudited\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isInspected\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mineralHistories\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fieldChanged\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"}],\"name\":\"purchaseMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"report\",\"type\":\"string\"}],\"name\":\"refineMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_mineralType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_origin\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_purityPercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_storageConditions\",\"type\":\"string\"}],\"name\":\"registerMineral\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeAuditor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeInspector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeMiner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeRefiner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeTransporter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"roleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mineralId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_receivingParty\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_destination\",\"type\":\"string\"}],\"name\":\"transferMineral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"_auditMineral(string,string)\":{\"details\":\"only the auditor can audit mineralDetails.Logs audit report on every successful audit.\",\"params\":{\"mineralId\":\"The ID of the mineral under audition.\",\"report\":\"The audit status report of the mineral under audition.\"}},\"checkAuditAndInspectionStatus(string)\":{\"details\":\"checks audit and inspection status\",\"params\":{\"mineralId\":\"The ID of the mineral to check for audit and inspection status Returns (isValid, isInspected) statuses of both audit and inspection of mineral according to mineralId\"}},\"getAllRoleCounts()\":{\"details\":\"Returns all role counts in a single call\",\"returns\":{\"auditorCount\":\"Number of auditors\",\"buyerCount\":\"Number of buyers\",\"inspectorCount\":\"Number of inspectors\",\"minerCount\":\"Number of miners\",\"refinerCount\":\"Number of refiners\",\"transporterCount\":\"Number of transporters\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have a specific role\",\"params\":{\"role\":\"The role to query member count for\"},\"returns\":{\"count\":\"The number of accounts with the role\"}},\"getRolesForAddress(address)\":{\"details\":\"Returns all roles assigned to a given address\",\"params\":{\"account\":\"The address to check roles for\"},\"returns\":{\"roles\":\"An array of role names the address has\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasMinerRole(address)\":{\"details\":\"Roles helper functionschecks if an account has a specific role\",\"params\":{\"account\":\"The address of the account to checked with role association\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"inspectMineral(string,string)\":{\"details\":\"only the inspector can inspect mineralDetailsLogs audit report on every successful inspection\",\"params\":{\"mineralId\":\"The ID of the mineral under inspection\",\"report\":\"The inspection status report of the mineral under inspection\"}},\"isMineralRegistered(string)\":{\"details\":\"checks if a mineral with the given ID is registered\",\"params\":{\"mineralId\":\"the ID of the mineral to check\"},\"returns\":{\"_0\":\"A boolean indicating whether the mineral is registered or not\"}},\"purchaseMineral(string)\":{\"details\":\"Only the buyer can purchase mineralDetails\",\"params\":{\"mineralId\":\"The ID of the mineral under purchase\"}},\"refineMineral(string,string)\":{\"details\":\"only the refiner can refiner a mineral\",\"params\":{\"mineralId\":\"The ID of the mineral under refinery\"}},\"registerMineral(string,string,uint256,string,uint256,string)\":{\"details\":\"Register a new mineral - only by miner.Every mineral is assigned a unique mineralId.\",\"params\":{\"_mineralType\":\"The type of a mineral.\",\"_name\":\"Mineral name.\",\"_origin\":\"Mineral Origin.\",\"_purityPercentage\":\"Mineral purity in percentage.\",\"_storageConditions\":\"Mineral Storage conditions.\",\"_weight\":\"Mineral weight in uint256.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferMineral(string,address,string,string)\":{\"details\":\"only the transporter can transport mineralDetails\",\"params\":{\"_destination\":\"The Destination area of the mineral(string)\",\"_origin\":\"The Original location of the mineral under transportation\",\"_receivingParty\":\"The address of the destination portal\",\"mineralId\":\"The ID of the mineral under transportation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_auditMineral(string,string)\":{\"notice\":\"Emits MineralAudited event.\"},\"inspectMineral(string,string)\":{\"notice\":\"Emits MineralInspected event on successful inspection\"},\"purchaseMineral(string)\":{\"notice\":\"Emits MineralPurchased event on successful purchase\"},\"refineMineral(string,string)\":{\"notice\":\"Emits MineralRefined event on successfl refining process\"},\"registerMineral(string,string,uint256,string,uint256,string)\":{\"notice\":\"Emits MineralRegistered event on successful registration.\"},\"transferMineral(string,address,string,string)\":{\"notice\":\"Emits MineralTransported on successful transportation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/RolesManager.sol\":\"RolesManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/core/RolesManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title RolesManager contract\\n * @author @0xJonaseb11\\n * It acts as the factory of all the roles in the whole supplychain\\n * It is where all the roles in the chain are assigned and granted. No any other contract can handle that\\n *\\n * It is a Modular contract\\n */\\n\\nimport { AccessControl } from \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport { Errors } from \\\"../utils/Errors.sol\\\";\\n\\ncontract RolesManager is AccessControl, Errors {\\n    /*/////////////////////////////////////////////////////\\n                           SUPPLYCHAIN ROLES\\n            /////////////////////////////////////////////////////*/\\n    bytes32 public constant MINER_ROLE = keccak256(\\\"MINER_ROLE\\\");\\n    bytes32 public constant REFINER_ROLE = keccak256(\\\"REFINER_ROLE\\\");\\n    bytes32 public constant TRANSPORTER_ROLE = keccak256(\\\"TRANSPORTER_ROLE\\\");\\n    bytes32 public constant AUDITOR_ROLE = keccak256(\\\"AUDITOR_ROLE\\\");\\n    bytes32 public constant INSPECTOR_ROLE = keccak256(\\\"INSPECTOR_ROLE\\\");\\n    bytes32 public constant BUYER_ROLE = keccak256(\\\"BUYER_ROLE\\\");\\n\\n    /*//////////////////////////////////////////////////////\\n                                 EVENTS\\n        //////////////////////////////////////////////////////*/\\n    event RoleAssigned(address indexed account, bytes32 indexed role, uint256 roleAssignedAt);\\n    event RoleRevoked(bytes32 role, address account, address revoker, uint256 roleRevokedAt);\\n\\n    event MineralRegistered(\\n        string mineralId,\\n        string mineralName,\\n        string mineralType,\\n        string origin,\\n        uint256 weight,\\n        uint256 purityPercentage,\\n        address indexed miner,\\n        uint256 registeredAt\\n    );\\n    event MineralRefined(string mineralId, string refineryReport, address indexed refiner, uint256 refinedAt);\\n    event MineralTransported(\\n        string mineralId,\\n        address indexed transporter,\\n        address receivingParty,\\n        string origin,\\n        string destination,\\n        uint256 transportedAt\\n    );\\n    event MineralInspected(string mineralId, string mineralStatus, address indexed inspector, uint256 inspectedAt);\\n    event MineralAudited(string mineralId, string status, address indexed auditor, uint256 auditedAt);\\n    event MineralPurchased(string mineralId, address indexed buyer, uint256 purchasedAt);\\n    event MineralReadyToTrade(string mineralId, address indexed ApprovedBy, string status, uint256 inspectionDate);\\n\\n    // For every assigned role\\n    event MinerRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event RefinerRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event TransporterRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event AuditorRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event InspectorRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event BuyerRoleAssigned(address indexed assignee, uint256 timestamp);\\n    event AdminRoleAssigned(address indexed assignee, uint256 timestamp);\\n    // For every revoked role\\n    event MinerRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event RefinerRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event TransporterRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event AuditorRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event InspectorRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event BuyerRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n    event AdminRoleRevoked(address indexed revokee, string reason, uint256 timestamp);\\n\\n    struct MineralDetails {\\n        string id;\\n        string name;\\n        string origin;\\n        string mineralType;\\n        uint256 weight;\\n        uint256 purityPercentage;\\n        string storageConditions;\\n        address registeredBy;\\n        string currentStatus;\\n        string currentLocation;\\n        address currentHandler;\\n        bool isPurchased;\\n        bool isRefined;\\n        bool isAudited;\\n        bool isInspected;\\n        uint256 timestamp;\\n    }\\n\\n    struct MineralHistory {\\n        string id;\\n        string fieldChanged;\\n        string newValue;\\n        address updatedBy;\\n        uint256 timestamp;\\n    }\\n\\n    uint256 private nonce = block.timestamp + block.number;\\n    mapping(string => MineralDetails) public mineralDetails;\\n    mapping(string => MineralHistory[]) public mineralHistories;\\n    mapping(bytes32 => uint256) public roleMemberCount;\\n\\n    // Set the deployer as the admin\\n    constructor() {\\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        roleMemberCount[DEFAULT_ADMIN_ROLE] = 1;\\n        emit AdminRoleAssigned(msg.sender, block.timestamp);\\n\\n        _setupRole(MINER_ROLE, msg.sender);\\n        roleMemberCount[MINER_ROLE] = 1;\\n        emit MinerRoleAssigned(msg.sender, block.timestamp);\\n\\n        _setupRole(AUDITOR_ROLE, msg.sender);\\n        roleMemberCount[AUDITOR_ROLE] = 1;\\n        emit AuditorRoleAssigned(msg.sender, block.timestamp);\\n\\n        _setupRole(INSPECTOR_ROLE, msg.sender);\\n        roleMemberCount[INSPECTOR_ROLE] = 1;\\n        emit InspectorRoleAssigned(msg.sender, block.timestamp);\\n\\n        _setupRole(BUYER_ROLE, msg.sender);\\n        roleMemberCount[BUYER_ROLE] = 1;\\n        emit BuyerRoleAssigned(msg.sender, block.timestamp);\\n\\n        _setupRole(REFINER_ROLE, msg.sender);\\n        roleMemberCount[REFINER_ROLE] = 1;\\n        emit RefinerRoleAssigned(msg.sender, block.timestamp);\\n\\n        _setupRole(TRANSPORTER_ROLE, msg.sender);\\n        roleMemberCount[TRANSPORTER_ROLE] = 1;\\n        emit TransporterRoleAssigned(msg.sender, block.timestamp);\\n    }\\n\\n    /**\\n     * @dev checks if sender has specific role\\n     */\\n    modifier restrictedToRole(bytes32 role) {\\n        if (!hasRole(role, msg.sender)) {\\n            revert InsufficientPermissionsToPerformAction(msg.sender);\\n        }\\n        _;\\n    }\\n\\n    modifier onlyNonZeroAddress(address account) {\\n        if (account == address(0)) {\\n            revert InvalidAccountAddress();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyValidMineralId(string memory mineralId) {\\n        if (keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId))) {\\n            revert InvalidMineralIdOrNotFound(mineralId);\\n        }\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n            ATTENTION HERE - CHECKING VALIDITY OF A MINERAL\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\        \\n    //////////////////////////////////////////////////////////////*/\\n    modifier onlyValidMineral(string memory mineralId) virtual {\\n        if (!isMineralRegistered(mineralId) || bytes(mineralId).length == 0) {\\n            revert InvalidMineralIdOrNotFound(mineralId);\\n        }\\n        _;\\n    }\\n\\n    /*////////////////////////////////////////////////////\\n            =====================================================\\n            ///////// ROLE-BASED FUNCTIONALITY FUNCTIONS ////////\\n            ====================================================\\n            //////////////////////////////////////////////////*/\\n\\n    /*//////////////////////////////////////////////////////////////\\n        ================================================================\\n                              MINING ENTERPRISE PORTAL\\n        =================================================================\\n       //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev Register a new mineral - only by miner.\\n     * @dev Every mineral is assigned a unique mineralId.\\n     * @param _name Mineral name.\\n     * @param _mineralType The type of a mineral.\\n     * @param _weight Mineral weight in uint256.\\n     * @param _origin Mineral Origin.\\n     * @param _purityPercentage Mineral purity in percentage.\\n     * @param _storageConditions Mineral Storage conditions.\\n     * @notice Emits MineralRegistered event on successful registration.\\n     */\\n    function registerMineral(\\n        string memory _name,\\n        string memory _mineralType,\\n        uint256 _weight,\\n        string memory _origin,\\n        uint256 _purityPercentage,\\n        string memory _storageConditions\\n    ) external virtual restrictedToRole(MINER_ROLE) returns (string memory) {\\n        if (bytes(_name).length == 0) revert RolesManager__InvalidMineralName();\\n        if (bytes(_origin).length == 0) revert RolesManager__InvalidMineralOrigin();\\n\\n        if (bytes(_mineralType).length == 0) revert RolesManager__InvalidMineralType();\\n\\n        if (_weight == 0) revert RolesManager__InvalidMineralWeight();\\n\\n        if (_purityPercentage == 0 || _purityPercentage > 100) revert RolesManager__InvalidMineralPurityPercentage();\\n\\n        if (_purityPercentage <= 80) revert RolesManager__MineralPurityPercentageTooLowToRegister(_purityPercentage);\\n\\n        if (bytes(_storageConditions).length == 0) revert RolesManager__InvalidMineralStorageConditions();\\n\\n        string memory mineralId = _generateHashedMineralId(_mineralType);\\n\\n        mineralDetails[mineralId] = MineralDetails({\\n            id: mineralId,\\n            name: _name,\\n            origin: _origin,\\n            mineralType: _mineralType,\\n            weight: _weight,\\n            purityPercentage: _purityPercentage,\\n            storageConditions: _storageConditions,\\n            registeredBy: msg.sender,\\n            currentStatus: \\\"Raw\\\",\\n            currentLocation: \\\"Mining Center\\\",\\n            currentHandler: msg.sender,\\n            isPurchased: false,\\n            isRefined: false,\\n            isAudited: false,\\n            isInspected: false,\\n            timestamp: block.timestamp\\n        });\\n\\n        // record initial mineral history\\n        mineralHistories[mineralId].push(\\n            MineralHistory({\\n                id: mineralId,\\n                fieldChanged: \\\"Registered\\\",\\n                newValue: string(abi.encodePacked(\\\"Origin: \\\", _origin)),\\n                updatedBy: msg.sender,\\n                timestamp: block.timestamp\\n            })\\n        );\\n\\n        emit MineralRegistered(\\n            mineralId,\\n            _name,\\n            _mineralType,\\n            _origin,\\n            _weight,\\n            _purityPercentage,\\n            msg.sender,\\n            block.timestamp\\n        );\\n\\n        return mineralId;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n        ===============================================================\\n                              PROCESSING ENTERPRISE\\n        ===============================================================                    \\n        //////////////////////////////////////////////////////////////*/\\n\\n    /*///////////////////////////////////////////////\\n                              REFINER\\n        ///////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev only the refiner can refiner a mineral\\n     * @param mineralId The ID of the mineral under refinery\\n     * @notice Emits MineralRefined event on successfl refining process\\n     */\\n    function refineMineral(string memory mineralId, string memory report) public restrictedToRole(REFINER_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (mineralDetails[mineralId].isRefined == true) revert RolesManager__MineralAlreadyRefined(mineralId);\\n\\n        mineralDetails[mineralId].isRefined = true;\\n\\n        emit MineralRefined(mineralId, report, msg.sender, block.timestamp);\\n    }\\n\\n    /*////////////////////////////////////////////////\\n                              TRANSPORTER\\n          ///////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev only the transporter can transport mineralDetails\\n     * @param mineralId The ID of the mineral under transportation\\n     * @param _receivingParty The address of the destination portal\\n     * @param _origin The Original location of the mineral under transportation\\n     * @param _destination The Destination area of the mineral(string)\\n     * @notice Emits MineralTransported on successful transportation\\n     */\\n    function transferMineral(\\n        string memory mineralId,\\n        address _receivingParty,\\n        string memory _origin,\\n        string memory _destination\\n    ) public virtual restrictedToRole(TRANSPORTER_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (_receivingParty == address(0)) revert RolesManager__InvalidReceivingPartyAddress();\\n\\n        if (bytes(_origin).length == 0) revert RolesManager__InvalidMineralOrigin();\\n\\n        if (bytes(_destination).length == 0) revert RolesManager__InvalidMineralDestination();\\n\\n        if (mineralDetails[mineralId].isPurchased == true) revert RolesManager__MineralAlreadyPurchased(mineralId);\\n\\n        mineralDetails[mineralId].currentHandler = msg.sender;\\n\\n        emit MineralTransported(mineralId, msg.sender, _receivingParty, _origin, _destination, block.timestamp);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n        ===============================================================\\n                     SUPPLYCHAIN VALIDATION PORTAL\\n        ===============================================================\\n        //////////////////////////////////////////////////////////////*/\\n\\n    /*///////////////////////////////////////////////\\n                               INSPECTOR\\n            ///////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev only the inspector can inspect mineralDetails\\n     * @param mineralId The ID of the mineral under inspection\\n     * @param report The inspection status report of the mineral under inspection\\n     * @notice Emits MineralInspected event on successful inspection\\n     * @dev Logs audit report on every successful inspection\\n     */\\n    function inspectMineral(string memory mineralId, string memory report) public restrictedToRole(INSPECTOR_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (mineralDetails[mineralId].isInspected == true) revert RolesManager__MineralAlreadyInspected(mineralId);\\n\\n        mineralDetails[mineralId].isInspected = true;\\n\\n        emit MineralInspected(mineralId, report, msg.sender, block.timestamp);\\n\\n        /*//////////////////////////////////////////////////\\n                          HANDLE INSPECTION REPORTING\\n           ///////////////////////////////////////////////////*/\\n    }\\n\\n    /*/////////////////////////////////////////////\\n                               AUDITOR\\n            ////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev only the auditor can audit mineralDetails.\\n     * @dev Logs audit report on every successful audit.\\n     * @param mineralId The ID of the mineral under audition.\\n     * @param report The audit status report of the mineral under audition.\\n     * @notice Emits MineralAudited event.\\n     */\\n    function _auditMineral(\\n        string memory mineralId,\\n        string memory report\\n    ) public /*virtual*/ restrictedToRole(AUDITOR_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (mineralDetails[mineralId].isAudited == true) revert RolesManager__MineralAlreadyAudited(mineralId);\\n\\n        mineralDetails[mineralId].isAudited = true;\\n\\n        emit MineralAudited(mineralId, report, msg.sender, block.timestamp);\\n\\n        /*//////////////////////////////////////////////////\\n                          HANDLE AUDIT REPORTING\\n           ///////////////////////////////////////////////////*/\\n    }\\n\\n    /**\\n     * @dev Only the buyer can purchase mineralDetails\\n     * @param mineralId The ID of the mineral under purchase\\n     * @notice Emits MineralPurchased event on successful purchase\\n     */\\n    function purchaseMineral(string memory mineralId) public restrictedToRole(BUYER_ROLE) {\\n        // if (\\n        //     keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n        //     bytes(mineralId).length == 0\\n        // ) {\\n        //     revert RolesManager__InvalidMineralIdOrNotFound();\\n        // }\\n\\n        if (mineralDetails[mineralId].isPurchased == true) revert RolesManager__MineralAlreadyPurchased(mineralId);\\n\\n        (bool isAudited, bool isInspected) = checkAuditAndInspectionStatus(mineralId);\\n\\n        if (!(isAudited && isInspected)) revert RolesManager__MineralNotMarketReady(mineralId);\\n\\n        // require(mineralDetails[mineralId].currentHandler == msg.sender, \\\"You are not the assigned buyer for this mineral!!\\\");\\n\\n        mineralDetails[mineralId].isPurchased = true;\\n        mineralDetails[mineralId].currentHandler = msg.sender;\\n\\n        emit MineralPurchased(mineralId, msg.sender, block.timestamp);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                     ROLESMANAGER HELPER FUNCTIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            ADMIN FUNCTIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    ////////////////////////////////////////////////\\n    /////// ROLEMANAGEMENT FUNCTIONS ////////////////\\n    ////////////////////////////////////////////////\\n\\n    /////////////////////////////////\\n    ////// ROLE GRANTING ////////////\\n    /////////////////////////////////\\n\\n    /*////////////////////////////////////////////////////\\n                  ROLE MANAGEMENT FUNCTIONS\\n    ////////////////////////////////////////////////////*/\\n\\n    function assignMiner(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasMinerRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(MINER_ROLE, account);\\n        roleMemberCount[MINER_ROLE]++;\\n        emit MinerRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignRefiner(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasRefinerRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(REFINER_ROLE, account);\\n        roleMemberCount[REFINER_ROLE]++;\\n        emit RefinerRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignTransporter(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasTransporterRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(TRANSPORTER_ROLE, account);\\n        roleMemberCount[TRANSPORTER_ROLE]++;\\n        emit TransporterRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignAuditor(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasAuditorRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(AUDITOR_ROLE, account);\\n        roleMemberCount[AUDITOR_ROLE]++;\\n        emit AuditorRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignInspector(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasInspectorRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(INSPECTOR_ROLE, account);\\n        roleMemberCount[INSPECTOR_ROLE]++;\\n        emit InspectorRoleAssigned(account, block.timestamp);\\n    }\\n\\n    function assignBuyer(address account) external onlyNonZeroAddress(account) onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (hasBuyerRole(account)) revert RolesManager__AccountAlreadyHasRole();\\n        _grantRole(BUYER_ROLE, account);\\n        roleMemberCount[BUYER_ROLE]++;\\n        emit BuyerRoleAssigned(account, block.timestamp);\\n    }\\n\\n    /////////////////////////////////\\n    // ROLE REVOKATION /////////////\\n    ////////////////////////////////\\n\\n    function revokeMiner(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasMinerRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(MINER_ROLE, account);\\n        if (roleMemberCount[MINER_ROLE] > 0) {\\n            roleMemberCount[MINER_ROLE]--;\\n        }\\n        emit MinerRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeRefiner(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasRefinerRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(REFINER_ROLE, account);\\n\\n        if (roleMemberCount[REFINER_ROLE] > 0) {\\n            roleMemberCount[REFINER_ROLE]--;\\n        }\\n        emit RefinerRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeTransporter(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasTransporterRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(TRANSPORTER_ROLE, account);\\n        if (roleMemberCount[TRANSPORTER_ROLE] > 0) {\\n            roleMemberCount[TRANSPORTER_ROLE]--;\\n        }\\n        emit TransporterRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeInspector(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasInspectorRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(INSPECTOR_ROLE, account);\\n        if (roleMemberCount[INSPECTOR_ROLE] > 0) {\\n            roleMemberCount[INSPECTOR_ROLE]--;\\n        }\\n        emit InspectorRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeAuditor(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasAuditorRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(AUDITOR_ROLE, account);\\n        if (roleMemberCount[AUDITOR_ROLE] > 0) {\\n            roleMemberCount[AUDITOR_ROLE]--;\\n        }\\n        emit AuditorRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    function revokeBuyer(address account, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        if (!hasBuyerRole(account)) revert RolesManager__AccountDoesNotHaveRole();\\n        revokeRole(BUYER_ROLE, account);\\n        if (roleMemberCount[BUYER_ROLE] > 0) {\\n            roleMemberCount[BUYER_ROLE]--;\\n        }\\n        emit BuyerRoleRevoked(account, reason, block.timestamp);\\n    }\\n\\n    /*/////////////////////////////////////////////////////\\n                  NEW ROLE COUNT FUNCTIONS\\n    /////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev Returns the number of accounts that have a specific role\\n     * @param role The role to query member count for\\n     * @return count The number of accounts with the role\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256 count) {\\n        if (!isValidRole(role)) revert RolesManager__InvalidRole();\\n        return roleMemberCount[role];\\n    }\\n\\n    /**\\n     * @dev Returns all role counts in a single call\\n     * @return minerCount Number of miners\\n     * @return refinerCount Number of refiners\\n     * @return transporterCount Number of transporters\\n     * @return auditorCount Number of auditors\\n     * @return inspectorCount Number of inspectors\\n     * @return buyerCount Number of buyers\\n     */\\n    function getAllRoleCounts()\\n        public\\n        view\\n        returns (\\n            uint256 minerCount,\\n            uint256 refinerCount,\\n            uint256 transporterCount,\\n            uint256 auditorCount,\\n            uint256 inspectorCount,\\n            uint256 buyerCount\\n        )\\n    {\\n        return (\\n            roleMemberCount[MINER_ROLE],\\n            roleMemberCount[REFINER_ROLE],\\n            roleMemberCount[TRANSPORTER_ROLE],\\n            roleMemberCount[AUDITOR_ROLE],\\n            roleMemberCount[INSPECTOR_ROLE],\\n            roleMemberCount[BUYER_ROLE]\\n        );\\n    }\\n\\n    // ... (keep all your existing functions below this point) ...\\n    // Only modification needed is to ensure the _setupRole function also increments counters:\\n    function _setupRole(bytes32 role, address account) internal {\\n        _grantRole(role, account);\\n\\n        roleMemberCount[role]++;\\n    }\\n\\n    /**\\n     * @dev Revokes role from an account - onlydmin\\n     * @param account The address of the account to be revoked role by the admin\\n     * @notice Emits event of the revoked role\\n     */\\n\\n    /*/////////////////////////////////////////////////////\\n   ====================================================\\n            HELPER FUNCTIONS SECTION\\n   ====================================================\\n   /////////////////////////////////////////////////////*/\\n\\n    /////////////////////////////////////////////////\\n    //////// ROLE OWNERSHIP CHECKS //////////////////\\n    /////////////////////////////////////////////////\\n\\n    /**\\n     * @dev Returns all roles assigned to a given address\\n     * @param account The address to check roles for\\n     * @return roles An array of role names the address has\\n     */\\n    function getRolesForAddress(\\n        address account\\n    ) public view onlyNonZeroAddress(account) returns (string[] memory roles) {\\n        // Count how many roles the address has\\n        uint256 roleCount = 0;\\n\\n        if (hasRole(DEFAULT_ADMIN_ROLE, account)) roleCount++;\\n        if (hasRole(MINER_ROLE, account)) roleCount++;\\n        if (hasRole(REFINER_ROLE, account)) roleCount++;\\n        if (hasRole(TRANSPORTER_ROLE, account)) roleCount++;\\n        if (hasRole(AUDITOR_ROLE, account)) roleCount++;\\n        if (hasRole(INSPECTOR_ROLE, account)) roleCount++;\\n        if (hasRole(BUYER_ROLE, account)) roleCount++;\\n\\n        // Initialize array with the counted size\\n        roles = new string[](roleCount);\\n        uint256 index = 0;\\n\\n        // Populate the array with role names\\n        if (hasRole(DEFAULT_ADMIN_ROLE, account)) {\\n            roles[index] = \\\"ADMIN\\\";\\n            index++;\\n        }\\n        if (hasRole(MINER_ROLE, account)) {\\n            roles[index] = \\\"MINER\\\";\\n            index++;\\n        }\\n        if (hasRole(REFINER_ROLE, account)) {\\n            roles[index] = \\\"REFINER\\\";\\n            index++;\\n        }\\n        if (hasRole(TRANSPORTER_ROLE, account)) {\\n            roles[index] = \\\"TRANSPORTER\\\";\\n            index++;\\n        }\\n        if (hasRole(AUDITOR_ROLE, account)) {\\n            roles[index] = \\\"AUDITOR\\\";\\n            index++;\\n        }\\n        if (hasRole(INSPECTOR_ROLE, account)) {\\n            roles[index] = \\\"INSPECTOR\\\";\\n            index++;\\n        }\\n        if (hasRole(BUYER_ROLE, account)) {\\n            roles[index] = \\\"BUYER\\\";\\n            index++;\\n        }\\n\\n        return roles;\\n    }\\n\\n    // function _setupRole(bytes32 role, address account) internal virtual {\\n    //     __grantRole(role, account);\\n    // }\\n\\n    /**\\n     ** @dev Roles helper functions\\n     * @dev checks if an account has a specific role\\n     * @param account The address of the account to checked with role association\\n     */\\n    function hasMinerRole(address account) public view returns (bool) {\\n        return hasRole(MINER_ROLE, account);\\n    }\\n    function hasRefinerRole(address account) public view returns (bool) {\\n        return hasRole(REFINER_ROLE, account);\\n    }\\n    function hasTransporterRole(address account) public view returns (bool) {\\n        return hasRole(TRANSPORTER_ROLE, account);\\n    }\\n    function hasInspectorRole(address account) public view returns (bool) {\\n        return hasRole(INSPECTOR_ROLE, account);\\n    }\\n    function hasAuditorRole(address account) public view returns (bool) {\\n        return hasRole(AUDITOR_ROLE, account);\\n    }\\n    function hasBuyerRole(address account) public view returns (bool) {\\n        return hasRole(BUYER_ROLE, account);\\n    }\\n    function hasAdminRole(address account) public view returns (bool) {\\n        return hasRole(DEFAULT_ADMIN_ROLE, account);\\n    }\\n\\n    // Helper function to validate the role\\n    function isValidRole(bytes32 role) private pure returns (bool) {\\n        return\\n            role == MINER_ROLE ||\\n            role == REFINER_ROLE ||\\n            role == TRANSPORTER_ROLE ||\\n            role == AUDITOR_ROLE ||\\n            role == INSPECTOR_ROLE ||\\n            role == BUYER_ROLE;\\n    }\\n\\n    /**\\n    * @dev checks audit and inspection status\\n    * @param mineralId The ID of the mineral to check for audit and inspection status\\n\\n    * Returns (isValid, isInspected) statuses of both audit and inspection of mineral according to mineralId\\n    */\\n    function checkAuditAndInspectionStatus(\\n        string memory mineralId\\n    ) public virtual restrictedToRole(DEFAULT_ADMIN_ROLE) returns (bool isAudited, bool isInspected) {\\n        if (\\n            keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n            bytes(mineralId).length == 0\\n        ) {\\n            revert RolesManager__InvalidMineralIdOrNotFound();\\n        }\\n\\n        if (mineralDetails[mineralId].isAudited && mineralDetails[mineralId].isInspected) {\\n            emit MineralReadyToTrade(mineralId, msg.sender, \\\"TradingReady\\\", block.timestamp);\\n        } else {\\n            revert RolesManager__MineralNotMarketReady(mineralId);\\n        }\\n\\n        isAudited = mineralDetails[mineralId].isAudited;\\n        isInspected = mineralDetails[mineralId].isInspected;\\n\\n        return (isAudited, isInspected);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            GETTERS - For Traceability\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function getMineralHistory(string memory mineralId) public view virtual returns (MineralHistory[] memory) {\\n        if (\\n            keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId)) ||\\n            bytes(mineralId).length == 0\\n        ) {\\n            revert RolesManager__InvalidMineralIdOrNotFound();\\n        }\\n\\n        return mineralHistories[mineralId];\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n    ===============================================================\\n         MINERAL REGISTRATION HELPER FUNCTIONS SECTION\\n    ===============================================================\\n    ////////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev checks if a mineral with the given ID is registered\\n     * @param mineralId the ID of the mineral to check\\n     * @return A boolean indicating whether the mineral is registered or not\\n     */\\n    function isMineralRegistered(string memory mineralId) public virtual returns (bool) {\\n        if (bytes(mineralId).length == 0) {\\n            revert MineralRegistry__InvalidMineralIdOrNotFound(mineralId);\\n        }\\n\\n        if (keccak256(bytes(mineralDetails[mineralId].id)) != keccak256(bytes(mineralId))) {\\n            revert MineralRegistry__MineralNotRegistered(mineralId);\\n        }\\n\\n        return true;\\n    }\\n\\n    //////////////////////////////////////////////////////\\n    //////// GENERATE HASHED MINERALID FOR UNIQUENESS/////\\n    //////////////////////////////////////////////////////\\n    function _generateHashedMineralId(string memory mineralType) internal returns (string memory) {\\n        bytes32 fullHash = keccak256(abi.encodePacked(mineralType, msg.sender, block.timestamp, nonce++));\\n\\n        // Convert first 4 bytes (8 hex characters) into hex string with \\\"0x\\\"\\n        bytes memory shortHex = new bytes(10); // 2 for \\\"0x\\\", 8 for hex chars\\n        shortHex[0] = \\\"0\\\";\\n        shortHex[1] = \\\"x\\\";\\n        for (uint i = 0; i < 4; i++) {\\n            shortHex[2 + i * 2] = _nibbleToHexChar(uint8(fullHash[i] >> 4));\\n            shortHex[3 + i * 2] = _nibbleToHexChar(uint8(fullHash[i] & 0x0f));\\n        }\\n\\n        return string(abi.encodePacked(mineralType, \\\"-\\\", string(shortHex)));\\n    }\\n\\n    // helper: convert nibble to hex char (0-9, a-f)\\n    function _nibbleToHexChar(uint8 nibble) internal pure returns (bytes1) {\\n        return nibble < 10 ? bytes1(nibble + 0x30) : bytes1(nibble + 0x61 - 10);\\n    }\\n\\n    ///////////////////////////////////////////////\\n    //////// getting all registered minerals /////\\n    // //////////////////////////////////////////////\\n    // function getAllRegisteredMineral() public view returns(MineralDetails[] memory mineralDetails) {\\n    //     return mineralDetails;\\n\\n    // }\\n}\\n\",\"keccak256\":\"0x57a2ee2919b8ee8a1066e6c744e13a793640f39c81f754699a2ede84906c3f51\",\"license\":\"MIT\"},\"contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ncontract Errors {\\n    /*//////////////////////////////////////////////////////////////\\n                        MINERALREGISTRY__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n\\n    error MineralRegistry__MineralNotRegistered(string mineralId);\\n    error MineralRegistry__MineralAlreadyPurchased();\\n    error MineralRegistry__MineralAlreadyAudited();\\n    error MineralRegistry__MineralAlreadyInspected();\\n    error MineralRegistry__MineralNotAudited();\\n    error MineralRegistry__MineralNotInspected();\\n\\n    error MineralRegistry__InvalidMineralDetails();\\n    error MineralRegistry__InvalidMineralIdOrNotFound(string mineralId);\\n    error MineralRegistry__InvalidMineralStatus();\\n    error MineralRegistry__InvalidMineralName();\\n    error MineralRegistry__InvalidMineralOrigin();\\n    error MineralRegistry__InvalidMineralType();\\n    error MineralRegistry__InvalidMineralWeight();\\n    error MineralRegistry__InvalidMineralPurityPercentage();\\n    error MineralRegistry__InvalidMineralStorageConditions();\\n    error MineralRegistry__InvalidMineralLocation();\\n    error MineralRegistry__InvalidReceivingPartyAddress();\\n    error MineralRegistry__InvalidMineralDestination();\\n\\n    error MineralNotReadyToTrade(string mineralId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            ROLESMANAGER__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n    error RolesManager__MineralAlreadyRefined(string mineralId);\\n    error RolesManager__MineralAlreadyPurchased(string mineralId);\\n    error RolesManager__MineralAlreadyInspected(string mineralId);\\n    error RolesManager__MineralAlreadyAudited(string mineralId);\\n    error RolesManager__NotTheAssignedBuyer(address caller);\\n\\n    error RolesManager__InvalidMineralName();\\n    error RolesManager__InvalidMineralOrigin();\\n    error RolesManager__InvalidMineralDestination();\\n\\n    error RolesManager__MineralNotMarketReady(string mineralId);\\n\\n    error RolesManager__InvalidMineralIdOrNotFound();\\n    error RolesManager__InvalidMineralType();\\n    error RolesManager__InvalidReceivingPartyAddress();\\n    error RolesManager__InvalidMineralStorageConditions();\\n    error RolesManager__InvalidMineralPurityPercentage();\\n    error RolesManager__MineralPurityPercentageTooLowToRegister(uint256 purityPercentage);\\n    error RolesManager__InvalidMineralWeight();\\n\\n    error RolesManager__InvalidAddress();\\n    error RolesManager__InvalidRole();\\n\\n    // Roles Assignment and revocation\\n    error RolesManager__AccountAlreadyHasRole();\\n    error RolesManager__AccountDoesNotHaveRole();\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            DISPUTERESOLUTION__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n    error DisputeResolution__InvalidMineralIdOrNotFound();\\n    error DisputeResolution__InvalidDisputeDefendantAddress();\\n    error DisputeResolution__InvalidDisputeDetails();\\n    error DisputeResolution__InvalidDisputeEvidence();\\n    error DisputeResolution__InvalidDisputeIdOrNotFound();\\n    error DisputeResolution__InvalidResolutionDetails();\\n    error DisputeResolution__DisputeStatusNotPendingOrEscalated();\\n    error DisputeResolution__DisputeStatusNotPending(uint256 disputeId);\\n    error DisputeResolution__NotEligibleToVote(address caller);\\n    error DisputeResolution__AlreadyVoted(address caller);\\n    error DisputeResolution__DisputeEscalated_UnableToVote(uint256 disputeId);\\n    error DisputeResolution__VotingPeriodStillActive();\\n    error DisputeResolution__DisputeNotEscalated(uint256 disputeId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            MINERALWAREHOUSE__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n\\n    error MineralWarehouse__InvalidTokenAddress(address tokenAddress);\\n    error MineralWarehouse__MineralNotRefined(string mineralId);\\n    error MineralWarehouse__InvalidNumberOfPrices();\\n    error MineralWarehouse__UnacceptedToken(address tokenAddress);\\n    error MineralWarehouse__UnacceptedTokens(address[] tokenAddresses);\\n    error MineralWarehouse__MineralNotMarketReady(string mineralId);\\n    error MineralWarehouse__InvalidMineralPrice();\\n    error MineralWarehouse__MineralAlreadySold(string mineralId);\\n    error MineralWarehouse__UnauthorizedSeller(address seller);\\n    error MineralNotMarketReady(string mineralId);\\n    error MineralWarehouse__IncorrectETHAmount();\\n    error MineralWarehouse__ETHTransferFailed();\\n    error MineralWarehouse__InvalidTokenPrice();\\n\\n    error MineralWarehouse__MismatchedArrays();\\n    error MineralWarehouse__InvalidETHPrice();\\n    error MineralWarehouse__TokenNotAccepted(address tokenAddress);\\n\\n    error MineralWarehouse__MineralNotFoundInWarehouse(string mineralId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            TOKENISATION__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n\\n    error Tokenization__TokenAlreadyExists(uint256 tokenId);\\n    error Tokenization__TokenIsAlreadyMinted(uint256 tokenId);\\n    error Tokenization__InvalidTokenIdOrNotFound(uint256 tokenId);\\n    error Tokenization__CallerNotMineralTokenOwner(uint256 tokenId, address caller);\\n    error Tokenization__InvalidTokenId(uint256 tokenId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            TRANSACTIONlOG__CUSTOM ERRORS\\n       //////////////////////////////////////////////////////////////*/\\n    error TransactionLog__InvalidOperationType();\\n    error TransactionLog__InvalidOperationIndex(uint256 index);\\n    error TransactionLog__InvalidTransactionIdOrNotFound(uint256 transactionId);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        SUPPLYCHAINVALIDATOR__CUSTOM ERRORS\\n        //////////////////////////////////////////////////////////////*/\\n\\n    error SupplychainValidator__InvalidMineralIdOrNotFound(string mineralId);\\n    error SupplychainValidator__InvalidMineralTransactionHistory();\\n    error SupplychainValidator__InvalidMineralOwnershipChain();\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             GLOBAL ERRORS\\n    //////////////////////////////////////////////////////////////*/\\n    error InvalidAccountAddress();\\n    error ERC20TokenTransferFailed(address token, uint256 tokenAmount);\\n    error InvalidPaymentMethods();\\n    error InvalidMineralIdOrNotFound(string mineralId);\\n    error InsufficientPermissionsToPerformAction(address caller);\\n\\n    /////////////////////////////////////\\n    // LOGISTICS MANAGER ERRORS /////////\\n    /////////////////////////////////////\\n    error TransportRequestAlreadyExists(string mineralId);\\n    error AddressDoesNotHaveRequiredRole(address caller, bytes32 role);\\n    error NotAssignedTransporter(string mineralId, address caller);\\n    error InvalidTransportStateTransition(string currentStatus, string attemptedStatus);\\n}\\n\",\"keccak256\":\"0x9b1b8d0828a0d7960988398eef2b8605af3485151b661a3bc695eb4362b00e38\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6040608081523462000357574342018042116200034157600190815562000026336200035c565b50600090818052600491602092808452848220805490600019918281146200031b5785019055828052818552838684205585514281527f458ea7e03b3466b3cf9bc2d66ddea8b11fe9469982816f42666888e6c8c6e664863392a26200008c33620003dc565b507fa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e7280845282865286842080548381146200032e57860190558352818552838684205585514281527f593f046317558c2857b92915c62c99f2d2108f7bc6f1e1b3c5376cd559abf559863392a262000104336200047e565b507f59a1c48e5837ad7a7f3dcedcbe129bf3249ec4fbf651fd4f5e2600ead39fe2f580845282865286842080548381146200032e57860190558352818552838684205585514281527f4a02edd19f09212e54b2ac85d7d3a4a2e3fbf424e6710c3f817d9b4cecc9cdb3863392a26200017c336200051b565b5060008051602062004db783398151915280845282865286842080548381146200032e57860190558352818552838684205585514281527f49cc27c2a068c01cf703c3923dfc679109b5f6c27bd1f61b542c159e3a73e092863392a2620001e333620005a7565b5060008051602062004dd783398151915280845282865286842080548381146200032e57860190558352818552838684205585514281527ff8ed9ac482b0f7c12999b3f157f758f84e39cd339fa301ea203823ac29e97505863392a26200024a3362000633565b5060008051602062004df783398151915280845282865286842080548381146200032e57860190558352818552838684205585514281527f4e3eede475de92d3e23765b737dbb67646352b3328c1a437d7f089766d7be751863392a2620002b133620006bf565b5060008051602062004d97833981519152908184528286528684209081549081146200031b57850190558252835283902055815142815233917f964e50cb3bdb84c00a30f56ae15d538d23dc6db14f891d7d819761b161e990a691a25161462b90816200074c8239f35b634e487b7160e01b855260118452602485fd5b634e487b7160e01b865260118552602486fd5b634e487b7160e01b600052601160045260246000fd5b600080fd5b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff16620003d857818052816020526040822081835260205260408220600160ff19825416179055339160008051602062004d778339815191528180a4600190565b5090565b6001600160a01b031660008181527fbb3fcc25fbffa12ea463b3505377899a4d5ddb4858b9c7bd36764686d9425b3660205260408120549091907fa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e729060ff166200047957808352826020526040832082845260205260408320600160ff1982541617905560008051602062004d77833981519152339380a4600190565b505090565b6001600160a01b031660008181527f0d2d6a5d08cb5d871289c0a3ca855d9da72909a111c24cce2d5c2b34a20daa5460205260408120549091907f59a1c48e5837ad7a7f3dcedcbe129bf3249ec4fbf651fd4f5e2600ead39fe2f59060ff166200047957808352826020526040832082845260205260408320600160ff1982541617905560008051602062004d77833981519152339380a4600190565b6001600160a01b031660008181527facfff8a39fb957d9d1c8e3ef9f08385e3fcf7bb23ab7ba0ad0f8df93dbde6a68602052604081205490919060008051602062004db78339815191529060ff166200047957808352826020526040832082845260205260408320600160ff1982541617905560008051602062004d77833981519152339380a4600190565b6001600160a01b031660008181527ff3fa603c74bfe2a4719960e47343678c3dc690d2b27a2295acc6fc430833aaf9602052604081205490919060008051602062004dd78339815191529060ff166200047957808352826020526040832082845260205260408320600160ff1982541617905560008051602062004d77833981519152339380a4600190565b6001600160a01b031660008181527f4130a4caca6023b0ba21488ee680ce5c3df22860b1cd8b02cd2a0bcb0de98851602052604081205490919060008051602062004df78339815191529060ff166200047957808352826020526040832082845260205260408320600160ff1982541617905560008051602062004d77833981519152339380a4600190565b6001600160a01b031660008181527fbce5fd3347e0dc338dcc0e895534dd4af2740eec95f56cd4ca4b4b2ada357ca0602052604081205490919060008051602062004d978339815191529060ff166200047957808352826020526040832082845260205260408320600160ff1982541617905560008051602062004d77833981519152339380a460019056fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714613865575080630958fc2d146137ab5780630dacad2e146136f1578063126ee338146133bc578063248a9ca31461338d5780632f2ff15d1461334e578063309514df146132d35780633499c3a21461328357806335ba62071461317d57806336568abe146131365780633a7adea514611f0d578063480d1dd314611e535780634e2a310914611d5a5780634eabbe7714611d315780635aee1b1514611b0e5780636377741d14611a545780636394f6e614611a2b5780636e1d616e14611a0257806370e22e42146119b257806375a2b0d4146117de57806379451cd7146117b55780637a01a1da1461178c5780637ae9c160146117115780637cde2b9914611618578063826fe0f5146113f35780638850845f146113a357806391d148541461135657806399691194146112585780639b188dd6146111dd578063a217fddf146111c1578063a917601b14611107578063abaa536f146110b7578063ac851dfd14610fe5578063b6ba1ca714610fb9578063b9c5b83314610e94578063beae461514610e44578063c395fcb314610de2578063ca15c87314610cf8578063cc82b09014610c2c578063d547741f14610beb578063de7ce39114610b9b578063df422bf214610674578063e3a3c5221461064b578063e438fdf8146105d0578063f17f3523146103c3578063f5716a851461030b5763fc1032eb1461022457600080fd5b346103065761023236613991565b61023a613c4c565b61024382613ba0565b156102f4576102cb7f93e936184fad9f80c7000aa987f91be0cd621bacde11839fdc7139f3d9c2407b91600080516020614596833981519152806000526000602052610296600160406000200154613ca4565b61029f85614249565b50600052600460205260406000208054806102e2575b5050604051918291604083526040830190613ae2565b4260208301526001600160a01b03909416930390a2005b6102eb9061435e565b905538806102b5565b604051632ac1560560e21b8152600490fd5b600080fd5b346103065761031936613991565b610321613c4c565b61032a82613bcb565b156102f4576102cb7f4614600adaea632b1e4c381ad24471dab7b587dca104c8dd4da76bc64f19716f916000805160206145b683398151915280600052600060205261037d600160406000200154613ca4565b610386856141d4565b50600052600460205260406000208054806103b1575050604051918291604083526040830190613ae2565b6103ba9061435e565b905584806102b5565b34610306576080366003190112610306576001600160401b03600435818111610306576103f490369060040161393b565b906103fd6138ce565b906044358181116103065761041690369060040161393b565b906064359081116103065761042f90369060040161393b565b906000805160206144b683398151915260005260209260008452604060002033600052845260ff60406000205416156105b8576001600160a01b031680156105a6578151156105945782511561058257604051600160ff600a8851938881818c019661049c81838a6139d3565b81016002815203019020015460a01c1615151461055c579361054d939261053f92600a6104f7847f55b00b3c29344a545244b18d70b135e423405427088bd5425f13d690b82310b4998b6040519384928392519283916139d3565b8101600281520301902001336bffffffffffffffffffffffff60a01b82541617905561052e6040519860a08a5260a08a0190613ae2565b928801528682036040880152613ae2565b908482036060860152613ae2565b914260808201528033930390a2005b604051632072bb0160e11b8152600481018690528061057e6024820189613ae2565b0390fd5b604051635dbef47560e01b8152600490fd5b6040516326813e6f60e01b8152600490fd5b60405163bea3fd2f60e01b8152600490fd5b604051630568555f60e41b8152336004820152602490fd5b34610306576105de36613991565b6105e6613c4c565b6105ef82613c21565b156102f4576102cb7f352e14c53d161e2481e65145b53265d1608f979a93a06df66d4c99b2a84ddc63916000805160206144d6833981519152806000526000602052610642600160406000200154613ca4565b6103868561415f565b346103065760003660031901126103065760206040516000805160206144d68339815191528152f35b3461030657602080600319360112610306576001600160a01b036106966138b8565b168015610b89576000906000805260008352604060002081600052835260ff8060406000205416610b80575b60008051602061457683398151915291826000526000855260406000208160005285528160406000205416610b70575b6000805160206145b6833981519152806000526000865260406000208260005286528260406000205416610b60575b6000805160206144b6833981519152806000526000875260406000208360005287528360406000205416610b50575b600080516020614596833981519152806000526000885260406000208460005288528460406000205416610b40575b6000805160206144d683398151915291826000526000895260406000208560005289528560406000205416610b30575b600080516020614556833981519152938460005260008a526040600020866000528a528660406000205416610b20575b6107e88961436b565b986107f66040519a8b61391a565b808a52610805601f199161436b565b018a8a60005b838110610b0f57505050506000976000805260008b526040600020876000528b528760406000205416610ad4575b60005260008a526040600020866000528a528660406000205416610a97575b6000526000895260406000208560005289528560406000205416610a58575b6000526000885260406000208460005288528460406000205416610a15575b60005260008752604060002083600052875283604060002054166109d6575b6000526000865260406000208260005286528260406000205416610995575b60005260008552604060002090600052845260406000205416610952575b506040519082820192808352815180945260408301938160408260051b8601019301916000955b8287106109265785850386f35b909192938280610942600193603f198a82030186528851613ae2565b9601920196019592919092610919565b61098e90604051610962816138ff565b6005815264212aaca2a960d91b8582015261097d828561438f565b52610988818461438f565b5061434f565b50826108f2565b926109d0906040516109a6816138ff565b600981526824a729a822a1aa27a960b91b888201526109c5828861438f565b52610988818761438f565b926108d4565b93610a0f906040516109e7816138ff565b600781526620aaa224aa27a960c91b89820152610a04828961438f565b52610988818861438f565b936108b5565b94610a5290604051610a26816138ff565b600b81526a2a2920a729a827a92a22a960a91b8a820152610a47828a61438f565b52610988818961438f565b94610896565b95610a9190604051610a69816138ff565b60078152662922a324a722a960c91b8b820152610a86828b61438f565b52610988818a61438f565b95610877565b96610ace90604051610aa8816138ff565b600581526426a4a722a960d91b8c820152610ac3828c61438f565b52610988818b61438f565b96610858565b9750604051610ae2816138ff565b600581526420a226a4a760d91b8b820152610afc8a614382565b52610b0689614382565b50600197610839565b606083828194010152018b9061080b565b97610b2a9061434f565b976107df565b96610b3a9061434f565b966107af565b95610b4a9061434f565b9561077f565b94610b5a9061434f565b94610750565b93610b6a9061434f565b93610721565b92610b7a9061434f565b926106f2565b600192506106c2565b60405163200db56f60e11b8152600490fd5b3461030657602036600319011261030657610bb46138b8565b6001600160a01b03166000908152600080516020614536833981519152602090815260409182902054915160ff9092161515825290f35b3461030657604036600319011261030657610c2a600435610c0a6138ce565b90806000526000602052610c25600160406000200154613ca4565b6142be565b005b3461030657602036600319011261030657610c456138b8565b6001600160a01b038116908115610b8957610c5e613c4c565b610c6781613c21565b610ce657610c7490613f22565b506000805160206144d683398151915260005260046020527f9d423956391424a558206d539d4c7b96f2596f9d71b6fe92efe1f071a870ba948054610cb89061434f565b90557f49cc27c2a068c01cf703c3923dfc679109b5f6c27bd1f61b542c159e3a73e0926020604051428152a2005b6040516314726de560e21b8152600490fd5b346103065760203660031901126103065760043560008051602061457683398151915281148015610dcb575b8015610db4575b8015610d9d575b8015610d86575b8015610d6f575b15610d5d5760005260046020526020604060002054604051908152f35b604051636b9c461160e01b8152600490fd5b506000805160206145568339815191528114610d40565b506000805160206144d68339815191528114610d39565b506000805160206145968339815191528114610d32565b506000805160206144b68339815191528114610d2b565b506000805160206145b68339815191528114610d24565b3461030657602036600319011261030657610dfb6138b8565b6001600160a01b031660009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602090815260409182902054915160ff9092161515825290f35b3461030657602036600319011261030657610e5d6138b8565b6001600160a01b03166000908152600080516020614476833981519152602090815260409182902054915160ff9092161515825290f35b3461030657600036600319011261030657600460209081527f973ccc145476ef147b966a44694f8b2d26bac5a3d44a844fec6be696fe5fea70547f02ff85b9f193a3a7824cbaf5a79db262c0bac955152adf2752c6413d76b2d3c7547f0e08e55c6329ca2d4f38429c472032b4e97537c869a64c376bb7e702721eb8c3547fa792fa383e6bd9c6b4465bbfd8031f4b47377210fa121067c03906e9afac6246547f9d423956391424a558206d539d4c7b96f2596f9d71b6fe92efe1f071a870ba94546000805160206145568339815191526000527f5455ba4b8a75b33fa0f1f7affd9817680912f06b7b194bcf9ac01183c4930020546040805196875296860194909452948401919091526060830152608082019290925260a081019190915260c090f35b346103065760203660031901126103065760043560005260046020526020604060002054604051908152f35b3461030657602080600319360112610306576004356001600160401b0381116103065761101690369060040161393b565b8051156110945760405161105061105783519285818187019561103a8183896139d3565b8101600281520301902060405192838092613a4c565b038261391a565b838151910120908251902003611071575060405160018152f35b9061057e6040519283926311bb0bc960e31b845260048401526024830190613ae2565b9061057e60405192839263f855236d60e01b845260048401526024830190613ae2565b34610306576020366003190112610306576110d06138b8565b6001600160a01b03166000908152600080516020614436833981519152602090815260409182902054915160ff9092161515825290f35b34610306576020366003190112610306576111206138b8565b6001600160a01b038116908115610b8957611139613c4c565b61114281613bf6565b610ce65761114f90613eab565b506000805160206144b683398151915260005260046020527f0e08e55c6329ca2d4f38429c472032b4e97537c869a64c376bb7e702721eb8c380546111939061434f565b90557f964e50cb3bdb84c00a30f56ae15d538d23dc6db14f891d7d819761b161e990a66020604051428152a2005b3461030657600036600319011261030657602060405160008152f35b34610306576111eb36613991565b6111f3613c4c565b6111fc82613b75565b156102f4576102cb7f69e94e373f69f3f945457a07b335722310788af9cd459a33df6f72cc9e9640439160008051602061455683398151915280600052600060205261124f600160406000200154613ca4565b610386856140ea565b346103065761126636613b07565b336000908152600080516020614496833981519152602090815260409091205491929160ff16156105b857604051600160ff600a8551938581818901966112ae81838a6139d3565b81016002815203019020015460b81c161515146113335791600a61130261132e937f3a9eebd240f4c9f631531ebc672c4c040de483b868ccebe8a3a1fdad70cde0d9956040518093819287519283916139d3565b8101600281520301902001600160b81b60ff60b81b198254161790556040519182913395429184614321565b0390a2005b5061057e604051928392636f5f944160e11b845260048401526024830190613ae2565b346103065760403660031901126103065761136f6138ce565b600435600052600060205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b34610306576020366003190112610306576113bc6138b8565b6001600160a01b03166000908152600080516020614496833981519152602090815260409182902054915160ff9092161515825290f35b3461030657602080600319360112610306576004356001600160401b0381116103065761142490369060040161393b565b6040519080519061105061145b858301936114408187876139d3565b85019486816002978881520301902060405192838092613a4c565b848151910120815190818420149081159161160f575b506115fd5782849161148b604051948592519283916139d3565b830192828160039586815203019020908154906114a78261436b565b946114b5604051968761391a565b82865284860191829460005285600020916000935b85851061157b57604080518981528a51818b01819052600092600582901b83018101918b918d9085015b8287106115015785850386f35b909192938280600192603f1989820301855287519061155061153e61152e845160a0808652850190613ae2565b8585015184820387860152613ae2565b60408401518382036040850152613ae2565b916060868060a01b0381830151169083015260808091015191015296019201960195929190926114f4565b60058860019260409b9a9b51611590816138e4565b6040516115a181611050818c613a4c565b81526040516115b68161105081898d01613a4c565b838201526040516115cd81611050818b8d01613a4c565b6040820152848060a01b0386890154166060820152600488015460808201528152019401940193929796976114ca565b6040516329d7b10b60e11b8152600490fd5b90501585611471565b346103065761162636613b07565b336000908152600080516020614536833981519152602090815260409091205491929160ff16156105b857604051600160ff600a85519385818189019661166e81838a6139d3565b81016002815203019020015460a81c161515146116ee5791600a6116c261132e937fa214f45af6d86b0d5ff7bb48f888cf4205e4a383da35fcbebfdbd9bd8e6d5a7c956040518093819287519283916139d3565b8101600281520301902001600160a81b60ff60a81b198254161790556040519182913395429184614321565b5061057e60405192839263701203b760e01b845260048401526024830190613ae2565b346103065761171f36613991565b611727613c4c565b61173082613bf6565b156102f4576102cb7f71577b91708c73ee54b43c6709958ff42e4bcc084910648ce7c3d16928b51d52916000805160206144b6833981519152806000526000602052611783600160406000200154613ca4565b61038685614075565b346103065760003660031901126103065760206040516000805160206145568339815191528152f35b346103065760003660031901126103065760206040516000805160206145b68339815191528152f35b3461030657602080600319360112610306576004356001600160401b0381116103065761180f90369060040161393b565b906000805260008152604060002033600052815260ff60406000205416156105b85760405161105061184e84519284818188019561103a8183896139d3565b82815191012083519081832014908115916119a9575b506115fd5760ff600a6040518481875161187f8183896139d3565b81016002815203019020015460b01c168061197d575b1561195a579060ff600a61193b83604096958751606081527f10f4ba4c7bb6f0c442f54585004a6e24440bea5c2d2e6f36b688e3e624762e226118db606083018a613ae2565b916b54726164696e67526561647960a01b85828503948582850152600c81520152428b8201528a33930190a28484895184818b5161191a8183896139d3565b81016002815203019020015460b01c169688519384928392519283916139d3565b81016002815203019020015460b81c1683519215158352151590820152f35b5061057e6040519283926348cddbdb60e11b845260048401526024830190613ae2565b5060ff600a604051848187516119948183896139d3565b81016002815203019020015460b81c16611895565b90501584611864565b34610306576020366003190112610306576119cb6138b8565b6001600160a01b03166000908152600080516020614516833981519152602090815260409182902054915160ff9092161515825290f35b346103065760003660031901126103065760206040516000805160206145968339815191528152f35b346103065760003660031901126103065760206040516000805160206145768339815191528152f35b3461030657602036600319011261030657611a6d6138b8565b6001600160a01b038116908115610b8957611a86613c4c565b611a8f81613bcb565b610ce657611a9c90613e34565b506000805160206145b683398151915260005260046020527f02ff85b9f193a3a7824cbaf5a79db262c0bac955152adf2752c6413d76b2d3c78054611ae09061434f565b90557f4e3eede475de92d3e23765b737dbb67646352b3328c1a437d7f089766d7be7516020604051428152a2005b34610306576020366003190112610306576004356001600160401b03811161030657611b3e90369060040161393b565b6040518181809351602081930191611b55926139d3565b81016002815203602001902060405180611b6f8184613a4c565b03611b7a908261391a565b6040519182611b8c8160018401613a4c565b03611b97908461391a565b60405180611ba88160028501613a4c565b03611bb3908261391a565b6040519182611bc58160038401613a4c565b03611bd0908461391a565b60048101546005820154604051949185611bed8160068701613a4c565b03611bf8908761391a565b60078401546040516001600160a01b0397909391881692909184611c1f8160088a01613a4c565b03611c2a908661391a565b6040519586611c3c8160098b01613a4c565b03611c47908861391a565b600a88015497600b0154986040519c8d9c8d6102009081815201611c6a91613ae2565b8d810360208f0152611c7b91613ae2565b8c810360408e0152611c8c91613ae2565b8b810360608d0152611c9d91613ae2565b9160808b015260a08a015288810360c08a0152611cb991613ae2565b9060e0880152868103610100880152611cd191613ae2565b858103610120870152611ce391613ae2565b9281166101408501528060a01c60ff1615156101608501528060a81c60ff1615156101808501528060b01c60ff1615156101a085015260b81c60ff1615156101c08401526101e08301520390f35b346103065760003660031901126103065760206040516000805160206144b68339815191528152f35b3461030657611d6836613b07565b336000908152600080516020614436833981519152602090815260409091205491929160ff16156105b857604051600160ff600a855193858181890196611db081838a6139d3565b81016002815203019020015460b01c16151514611e305791600a611e0461132e937fa9de1934279a83f8cfaaecf6a7002ac10aeaea244c8c763f3752f3fc4c3e631d956040518093819287519283916139d3565b8101600281520301902001600160b01b60ff60b01b198254161790556040519182913395429184614321565b5061057e60405192839263c817400d60e01b845260048401526024830190613ae2565b3461030657602036600319011261030657611e6c6138b8565b6001600160a01b038116908115610b8957611e85613c4c565b611e8e81613ba0565b610ce657611e9b90613dbd565b5060008051602061459683398151915260005260046020527fa792fa383e6bd9c6b4465bbfd8031f4b47377210fa121067c03906e9afac62468054611edf9061434f565b90557f4a02edd19f09212e54b2ac85d7d3a4a2e3fbf424e6710c3f817d9b4cecc9cdb36020604051428152a2005b346103065760c0366003190112610306576004356001600160401b03811161030657611f3d90369060040161393b565b6024356001600160401b03811161030657611f5c90369060040161393b565b906064356001600160401b03811161030657611f7c90369060040161393b565b9060a4356001600160401b03811161030657611f9c90369060040161393b565b3360009081526000805160206144f6833981519152602052604090205490929060ff16156105b85781511561312457805115610594578351156131125760443515613100576084351580156130f4575b6130e257605060843511156130c8578251156130b65760015461200e8161434f565b600155604051612056607482602081019460206120318b888151938492016139d3565b8201903360601b6020830152426034830152605482015203605481018452018261391a565b5190209260405193612067856138ff565b600a8552602036818701378451156130a057603060208601538451600110156130a0576078602186015360005b6004811061300d5750506120e96021604051809688516120bb816020850160208d016139d3565b8201602d60f81b60208201526120da82518093602087850191016139d3565b0103600181018752018561391a565b60405190816102008101106001600160401b03610200840111176128ab576102008201604052848252836020830152826040830152856060830152604435608083015260843560a083015260c08201523360e082015260405161214b816138ff565b600381526252617760e81b602082015261010082015260405161216d816138ff565b600d81526c26b4b734b7339021b2b73a32b960991b6020820152610120820152336101408201526000610160820152600061018082015260006101a082015260006101c0820152426101e082015260405160208186516121d08183858b016139d3565b810160028152030190209080518051906001600160401b0382116128ab5781906121fa8554613a12565b601f8111612fbd575b50602090601f8311600114612f5157600092612f46575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b0382116128ab5781906122546001860154613a12565b601f8111612ef3575b50602090601f8311600114612e8157600092612e76575b50508160011b916000199060031b1c19161760018301555b60408101518051906001600160401b0382116128ab5781906122b16002860154613a12565b601f8111612e23575b50602090601f8311600114612db157600092612da6575b50508160011b916000199060031b1c19161760028301555b60608101518051906001600160401b0382116128ab57819061230e6003860154613a12565b601f8111612d53575b50602090601f8311600114612ce157600092612cd6575b50508160011b916000199060031b1c19161760038301555b6080810151600483015560a0810151600583015560c08101518051906001600160401b0382116128ab57819061237f6006860154613a12565b601f8111612c83575b50602090601f8311600114612c1157600092612c06575b50508160011b916000199060031b1c19161760068301555b60e08101516007830180546001600160a01b0319166001600160a01b03929092169190911790556101008101518051906001600160401b0382116128ab5781906124046008860154613a12565b601f8111612bb3575b50602090601f8311600114612b4157600092612b36575b50508160011b916000199060031b1c19161760088301555b6101208101518051906001600160401b0382116128ab576124606009850154613a12565b601f8111612aef575b50602090601f8311600114612a79579180600b94926101e094600092612a6e575b50508160011b916000199060031b1c19161760098501555b600a840160018060a01b036101408301511681549060ff60a01b610160850151151560a01b1660ff60a81b610180860151151560a81b169060ff60b01b6101a0870151151560b01b169260ff60b81b6101c0880151151560b81b16946001600160401b0360c01b16171717171790550151910155604051602081855161252b8183858a016139d3565b81016003815203019020936040519467027b934b3b4b71d160c51b602087015261257360288785516125638184840160208a016139d3565b810103600881018952018761391a565b60405195612580876138e4565b85875260405161258f816138ff565b600a815269149959da5cdd195c995960b21b6020820152602088015260408701523360608701524260808701528054680100000000000000008110156128ab576125de916001820181556139f6565b612a585785518051906001600160401b0382116128ab5781906126018454613a12565b601f8111612a08575b50602090601f831160011461299c57600092612991575b50508160011b916000199060031b1c19161781555b60208601518051906001600160401b0382116128ab57819061265b6001850154613a12565b601f811161293e575b50602090601f83116001146128cc576000926128c1575b50508160011b916000199060031b1c19161760018201555b60408601519586516001600160401b0381116128ab576126b66002840154613a12565b601f8111612864575b506020601f82116001146127c357926004608061053f948461278398957f73c819068ba25b88a32cb91f9b552ab50d9cccb7c4abdeb2a04f44373b7153939a986127b49e6000926127b8575b50508160011b916000199060031b1c19161760028501555b6003840160018060a01b036060830151166bffffffffffffffffffffffff60a01b82541617905501519101556127756040519660e0885261276760e089018a613ae2565b9088820360208a0152613ae2565b908682036040880152613ae2565b91604435608082015260843560a08201524260c08201528033930390a2604051918291602083526020830190613ae2565b0390f35b015190508e8061270b565b6002840160005260206000209860005b601f198416811061284c5750608061053f946001856127b49d7f73c819068ba25b88a32cb91f9b552ab50d9cccb7c4abdeb2a04f44373b7153939b99966004966127839c99601f19811610612833575b505050811b016002850155612723565b015160001960f88460031b161c191690558e8080612823565b828201518b556001909a0199602092830192016127d3565b600284016000526020600020601f830160051c8101602084106128a4575b601f830160051c820181106128985750506126bf565b60008155600101612882565b5080612882565b634e487b7160e01b600052604160045260246000fd5b01519050888061267b565b9250600184016000526020600020906000935b601f1984168510612923576001945083601f1981161061290a575b505050811b016001820155612693565b015160001960f88460031b161c191690558880806128fa565b818101518355602094850194600190930192909101906128df565b909150600184016000526020600020601f840160051c81016020851061298a575b90849392915b601f830160051c8201811061297b575050612664565b60008155859450600101612965565b508061295f565b015190508880612621565b9250836000526020600020906000935b601f19841685106129ed576001945083601f198116106129d4575b505050811b018155612636565b015160001960f88460031b161c191690558880806129c7565b818101518355602094850194600190930192909101906129ac565b909150836000526020600020601f840160051c810160208510612a51575b90849392915b601f830160051c82018110612a4257505061260a565b60008155859450600101612a2c565b5080612a26565b634e487b7160e01b600052600060045260246000fd5b015190508a8061248a565b906009850160005260206000209160005b601f1985168110612ad7575092600b94926001926101e09583601f19811610612abe575b505050811b0160098501556124a2565b015160001960f88460031b161c191690558a8080612aae565b91926020600181928685015181550194019201612a8a565b600985016000526020600020601f840160051c810160208510612b2f575b601f830160051c82018110612b23575050612469565b60008155600101612b0d565b5080612b0d565b015190508880612424565b9250600885016000526020600020906000935b601f1984168510612b98576001945083601f19811610612b7f575b505050811b01600883015561243c565b015160001960f88460031b161c19169055888080612b6f565b81810151835560209485019460019093019290910190612b54565b909150600885016000526020600020601f840160051c810160208510612bff575b90849392915b601f830160051c82018110612bf057505061240d565b60008155859450600101612bda565b5080612bd4565b01519050888061239f565b9250600685016000526020600020906000935b601f1984168510612c68576001945083601f19811610612c4f575b505050811b0160068301556123b7565b015160001960f88460031b161c19169055888080612c3f565b81810151835560209485019460019093019290910190612c24565b909150600685016000526020600020601f840160051c810160208510612ccf575b90849392915b601f830160051c82018110612cc0575050612388565b60008155859450600101612caa565b5080612ca4565b01519050888061232e565b9250600385016000526020600020906000935b601f1984168510612d38576001945083601f19811610612d1f575b505050811b016003830155612346565b015160001960f88460031b161c19169055888080612d0f565b81810151835560209485019460019093019290910190612cf4565b909150600385016000526020600020601f840160051c810160208510612d9f575b90849392915b601f830160051c82018110612d90575050612317565b60008155859450600101612d7a565b5080612d74565b0151905088806122d1565b9250600285016000526020600020906000935b601f1984168510612e08576001945083601f19811610612def575b505050811b0160028301556122e9565b015160001960f88460031b161c19169055888080612ddf565b81810151835560209485019460019093019290910190612dc4565b909150600285016000526020600020601f840160051c810160208510612e6f575b90849392915b601f830160051c82018110612e605750506122ba565b60008155859450600101612e4a565b5080612e44565b015190508880612274565b9250600185016000526020600020906000935b601f1984168510612ed8576001945083601f19811610612ebf575b505050811b01600183015561228c565b015160001960f88460031b161c19169055888080612eaf565b81810151835560209485019460019093019290910190612e94565b909150600185016000526020600020601f840160051c810160208510612f3f575b90849392915b601f830160051c82018110612f3057505061225d565b60008155859450600101612f1a565b5080612f14565b01519050888061221a565b9250846000526020600020906000935b601f1984168510612fa2576001945083601f19811610612f89575b505050811b01825561222f565b015160001960f88460031b161c19169055888080612f7c565b81810151835560209485019460019093019290910190612f61565b909150846000526020600020601f840160051c810160208510613006575b90849392915b601f830160051c82018110612ff7575050612203565b60008155859450600101612fe1565b5080612fdb565b60208110156130a05781811a90600f61302a818460041c166143b4565b908260011b93600284860481148515171561308a5785810180911161308a5761305a6130619460001a918c6143a3565b53166143b4565b91600390810180911161308a5761307f6130859360001a91896143a3565b5361434f565b612094565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60405163bfccc8e960e01b8152600490fd5b60405163d05db01960e01b81526084356004820152602490fd5b604051633abe7db760e21b8152600490fd5b50606460843511611fec565b60405163fd83f8d960e01b8152600490fd5b60405163a765e58f60e01b8152600490fd5b604051630ac6e45360e31b8152600490fd5b346103065760403660031901126103065761314f6138ce565b336001600160a01b0382160361316b57610c2a906004356142be565b60405163334bd91960e11b8152600490fd5b34610306576040366003190112610306576004356001600160401b038111610306576131ad90369060040161393b565b6131c960206024359281604051938285809451938492016139d3565b81016003815203019020805482101561030657613258916131e9916139f6565b5060405190613203826131fc8184613a4c565b038361391a565b604051613217816110508160018601613a4c565b61327460405161322e816110508160028801613a4c565b613266600460018060a01b036003870154169501549360405197889760a0895260a0890190613ae2565b908782036020890152613ae2565b908582036040870152613ae2565b91606084015260808301520390f35b346103065760203660031901126103065761329c6138b8565b6001600160a01b031660009081526000805160206144f6833981519152602090815260409182902054915160ff9092161515825290f35b34610306576132e136613991565b6132e9613c4c565b6132f282613b4a565b156102f4576102cb7f125f88db22967983b401f70f6804d47f43cb545fcb725d0b335fe7d43d9b4a4a91600080516020614576833981519152806000526000602052613345600160406000200154613ca4565b61038685614000565b3461030657604036600319011261030657610c2a60043561336d6138ce565b90806000526000602052613388600160406000200154613ca4565b613f99565b346103065760203660031901126103065760043560005260006020526020600160406000200154604051908152f35b3461030657602080600319360112610306576004356001600160401b038111610306576133ed90369060040161393b565b9060008051602061455683398151915260005260008152604060002033600052815260ff918260406000205416156105b857604051815193838301946134348184886139d3565b8201906001816002938481528588600a97889303019020015460a01c161515146136cf57600080526000855260406000203360005285528060406000205416156105b8576110506134a76040518781806134928c8b519283916139d3565b81018781520301902060405192838092613a4c565b85815191012084519081882014908115916136c6575b506115fd5780836040518781806134d88c8b519283916139d3565b810187815203019020015460b01c168061369b575b1561367957604051606081527f10f4ba4c7bb6f0c442f54585004a6e24440bea5c2d2e6f36b688e3e624762e226135276060830187613ae2565b916b54726164696e67526561647960a01b88828503948582850152600c81520152426040820152604033930190a2808360405187818061356b8c8b519283916139d3565b810187815203019020015460b01c1690836040518781806135908c8b519283916139d3565b810187815203019020015460b81c1681613671575b501561364f57837ffed1001c142a7ab386454a2f7d78b013ba7ff40595d10c128f2fb6463ccd7b7a94956136139284604051848189516135e68183896139d3565b81018581520301902001805460ff60a01b1916600160a01b179055604051865190948593829085906139d3565b8201908152030190200180546001600160a01b03191633179055604080518181529161364191830190613ae2565b9242908201528033930390a2005b6040516348cddbdb60e11b8152600481018590528061057e6024820186613ae2565b9050866135a5565b6040516348cddbdb60e11b8152600481018690528061057e6024820187613ae2565b5080836040518781806136b28c8b519283916139d3565b810187815203019020015460b81c166134ed565b905015876134bd565b604051632072bb0160e11b8152600481018690528061057e6024820187613ae2565b346103065760203660031901126103065761370a6138b8565b6001600160a01b038116908115610b8957613723613c4c565b61372c81613b75565b610ce65761373990613d46565b5060008051602061455683398151915260005260046020527f5455ba4b8a75b33fa0f1f7affd9817680912f06b7b194bcf9ac01183c4930020805461377d9061434f565b90557ff8ed9ac482b0f7c12999b3f157f758f84e39cd339fa301ea203823ac29e975056020604051428152a2005b34610306576020366003190112610306576137c46138b8565b6001600160a01b038116908115610b89576137dd613c4c565b6137e681613b4a565b610ce6576137f390613cca565b5060008051602061457683398151915260005260046020527f973ccc145476ef147b966a44694f8b2d26bac5a3d44a844fec6be696fe5fea7080546138379061434f565b90557f593f046317558c2857b92915c62c99f2d2108f7bc6f1e1b3c5376cd559abf5596020604051428152a2005b34610306576020366003190112610306576004359063ffffffff60e01b821680920361030657602091637965db0b60e01b81149081156138a7575b5015158152f35b6301ffc9a760e01b149050836138a0565b600435906001600160a01b038216820361030657565b602435906001600160a01b038216820361030657565b60a081019081106001600160401b038211176128ab57604052565b604081019081106001600160401b038211176128ab57604052565b90601f801991011681019081106001600160401b038211176128ab57604052565b81601f82011215610306578035906001600160401b0382116128ab576040519261396f601f8401601f19166020018561391a565b8284526020838301011161030657816000926020809301838601378301015290565b906040600319830112610306576004356001600160a01b03811681036103065791602435906001600160401b038211610306576139d09160040161393b565b90565b60005b8381106139e65750506000910152565b81810151838201526020016139d6565b80548210156130a0576000526005602060002091020190600090565b90600182811c92168015613a42575b6020831014613a2c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691613a21565b9060009291805491613a5d83613a12565b918282526001938481169081600014613abf5750600114613a7f575b50505050565b90919394506000526020928360002092846000945b838610613aab575050505001019038808080613a79565b805485870183015294019385908201613a94565b9294505050602093945060ff191683830152151560051b01019038808080613a79565b90602091613afb815180928185528580860191016139d3565b601f01601f1916010190565b906040600319830112610306576001600160401b036004358181116103065783613b339160040161393b565b92602435918211610306576139d09160040161393b565b6001600160a01b031660009081526000805160206144f6833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614476833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614436833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614536833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614516833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614496833981519152602052604090205460ff1690565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff1615613c865750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600060205260406000203360005260205260ff6040600020541615613c865750565b6001600160a01b031660008181526000805160206144f683398151915260205260408120549091906000805160206145768339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b505090565b6001600160a01b0316600081815260008051602061447683398151915260205260408120549091906000805160206145568339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b0316600081815260008051602061443683398151915260205260408120549091906000805160206145968339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b0316600081815260008051602061453683398151915260205260408120549091906000805160206145b68339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b0316600081815260008051602061451683398151915260205260408120549091906000805160206144b68339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b0316600081815260008051602061449683398151915260205260408120549091906000805160206144d68339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541615600014613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b031660008181526000805160206144f683398151915260205260408120549091906000805160206145768339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061451683398151915260205260408120549091906000805160206144b68339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061447683398151915260205260408120549091906000805160206145568339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061449683398151915260205260408120549091906000805160206144d68339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061453683398151915260205260408120549091906000805160206145b68339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061443683398151915260205260408120549091906000805160206145968339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416600014613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b93929161434a9061433c604093606088526060880190613ae2565b908682036020880152613ae2565b930152565b600019811461308a5760010190565b801561308a576000190190565b6001600160401b0381116128ab5760051b60200190565b8051156130a05760200190565b80518210156130a05760209160051b010190565b9081518110156130a0570160200190565b60009060ff16600a8110156143e057603091500160ff811161308a5760f81b6001600160f81b03191690565b60610160ff81116144215760ff6009199116019060ff821161440d575060f81b6001600160f81b03191690565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b82526011600452602482fdfe0d2d6a5d08cb5d871289c0a3ca855d9da72909a111c24cce2d5c2b34a20daa542f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0df3fa603c74bfe2a4719960e47343678c3dc690d2b27a2295acc6fc430833aaf9acfff8a39fb957d9d1c8e3ef9f08385e3fcf7bb23ab7ba0ad0f8df93dbde6a68ddaa901e2fe3bda354fe0ede2785152d5c109282a613fe024a056a3e66c41bb3273dcf2136c7d8ef632bb8ef13dbca69a8f36fa620c7468671b3153d46a211c0bb3fcc25fbffa12ea463b3505377899a4d5ddb4858b9c7bd36764686d9425b36bce5fd3347e0dc338dcc0e895534dd4af2740eec95f56cd4ca4b4b2ada357ca04130a4caca6023b0ba21488ee680ce5c3df22860b1cd8b02cd2a0bcb0de98851f8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90ea952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e7259a1c48e5837ad7a7f3dcedcbe129bf3249ec4fbf651fd4f5e2600ead39fe2f5a977e1a3444218ff332edf735c56487bbe59922b15c88777d443eb8b78020f4df6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171ba2646970667358221220b19807b95e0ea62b7b0dd72be0d4a321b0981a008b93d0c49c053c7b3a992e4d64736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0dddaa901e2fe3bda354fe0ede2785152d5c109282a613fe024a056a3e66c41bb3273dcf2136c7d8ef632bb8ef13dbca69a8f36fa620c7468671b3153d46a211c0f8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90ea977e1a3444218ff332edf735c56487bbe59922b15c88777d443eb8b78020f4d",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714613865575080630958fc2d146137ab5780630dacad2e146136f1578063126ee338146133bc578063248a9ca31461338d5780632f2ff15d1461334e578063309514df146132d35780633499c3a21461328357806335ba62071461317d57806336568abe146131365780633a7adea514611f0d578063480d1dd314611e535780634e2a310914611d5a5780634eabbe7714611d315780635aee1b1514611b0e5780636377741d14611a545780636394f6e614611a2b5780636e1d616e14611a0257806370e22e42146119b257806375a2b0d4146117de57806379451cd7146117b55780637a01a1da1461178c5780637ae9c160146117115780637cde2b9914611618578063826fe0f5146113f35780638850845f146113a357806391d148541461135657806399691194146112585780639b188dd6146111dd578063a217fddf146111c1578063a917601b14611107578063abaa536f146110b7578063ac851dfd14610fe5578063b6ba1ca714610fb9578063b9c5b83314610e94578063beae461514610e44578063c395fcb314610de2578063ca15c87314610cf8578063cc82b09014610c2c578063d547741f14610beb578063de7ce39114610b9b578063df422bf214610674578063e3a3c5221461064b578063e438fdf8146105d0578063f17f3523146103c3578063f5716a851461030b5763fc1032eb1461022457600080fd5b346103065761023236613991565b61023a613c4c565b61024382613ba0565b156102f4576102cb7f93e936184fad9f80c7000aa987f91be0cd621bacde11839fdc7139f3d9c2407b91600080516020614596833981519152806000526000602052610296600160406000200154613ca4565b61029f85614249565b50600052600460205260406000208054806102e2575b5050604051918291604083526040830190613ae2565b4260208301526001600160a01b03909416930390a2005b6102eb9061435e565b905538806102b5565b604051632ac1560560e21b8152600490fd5b600080fd5b346103065761031936613991565b610321613c4c565b61032a82613bcb565b156102f4576102cb7f4614600adaea632b1e4c381ad24471dab7b587dca104c8dd4da76bc64f19716f916000805160206145b683398151915280600052600060205261037d600160406000200154613ca4565b610386856141d4565b50600052600460205260406000208054806103b1575050604051918291604083526040830190613ae2565b6103ba9061435e565b905584806102b5565b34610306576080366003190112610306576001600160401b03600435818111610306576103f490369060040161393b565b906103fd6138ce565b906044358181116103065761041690369060040161393b565b906064359081116103065761042f90369060040161393b565b906000805160206144b683398151915260005260209260008452604060002033600052845260ff60406000205416156105b8576001600160a01b031680156105a6578151156105945782511561058257604051600160ff600a8851938881818c019661049c81838a6139d3565b81016002815203019020015460a01c1615151461055c579361054d939261053f92600a6104f7847f55b00b3c29344a545244b18d70b135e423405427088bd5425f13d690b82310b4998b6040519384928392519283916139d3565b8101600281520301902001336bffffffffffffffffffffffff60a01b82541617905561052e6040519860a08a5260a08a0190613ae2565b928801528682036040880152613ae2565b908482036060860152613ae2565b914260808201528033930390a2005b604051632072bb0160e11b8152600481018690528061057e6024820189613ae2565b0390fd5b604051635dbef47560e01b8152600490fd5b6040516326813e6f60e01b8152600490fd5b60405163bea3fd2f60e01b8152600490fd5b604051630568555f60e41b8152336004820152602490fd5b34610306576105de36613991565b6105e6613c4c565b6105ef82613c21565b156102f4576102cb7f352e14c53d161e2481e65145b53265d1608f979a93a06df66d4c99b2a84ddc63916000805160206144d6833981519152806000526000602052610642600160406000200154613ca4565b6103868561415f565b346103065760003660031901126103065760206040516000805160206144d68339815191528152f35b3461030657602080600319360112610306576001600160a01b036106966138b8565b168015610b89576000906000805260008352604060002081600052835260ff8060406000205416610b80575b60008051602061457683398151915291826000526000855260406000208160005285528160406000205416610b70575b6000805160206145b6833981519152806000526000865260406000208260005286528260406000205416610b60575b6000805160206144b6833981519152806000526000875260406000208360005287528360406000205416610b50575b600080516020614596833981519152806000526000885260406000208460005288528460406000205416610b40575b6000805160206144d683398151915291826000526000895260406000208560005289528560406000205416610b30575b600080516020614556833981519152938460005260008a526040600020866000528a528660406000205416610b20575b6107e88961436b565b986107f66040519a8b61391a565b808a52610805601f199161436b565b018a8a60005b838110610b0f57505050506000976000805260008b526040600020876000528b528760406000205416610ad4575b60005260008a526040600020866000528a528660406000205416610a97575b6000526000895260406000208560005289528560406000205416610a58575b6000526000885260406000208460005288528460406000205416610a15575b60005260008752604060002083600052875283604060002054166109d6575b6000526000865260406000208260005286528260406000205416610995575b60005260008552604060002090600052845260406000205416610952575b506040519082820192808352815180945260408301938160408260051b8601019301916000955b8287106109265785850386f35b909192938280610942600193603f198a82030186528851613ae2565b9601920196019592919092610919565b61098e90604051610962816138ff565b6005815264212aaca2a960d91b8582015261097d828561438f565b52610988818461438f565b5061434f565b50826108f2565b926109d0906040516109a6816138ff565b600981526824a729a822a1aa27a960b91b888201526109c5828861438f565b52610988818761438f565b926108d4565b93610a0f906040516109e7816138ff565b600781526620aaa224aa27a960c91b89820152610a04828961438f565b52610988818861438f565b936108b5565b94610a5290604051610a26816138ff565b600b81526a2a2920a729a827a92a22a960a91b8a820152610a47828a61438f565b52610988818961438f565b94610896565b95610a9190604051610a69816138ff565b60078152662922a324a722a960c91b8b820152610a86828b61438f565b52610988818a61438f565b95610877565b96610ace90604051610aa8816138ff565b600581526426a4a722a960d91b8c820152610ac3828c61438f565b52610988818b61438f565b96610858565b9750604051610ae2816138ff565b600581526420a226a4a760d91b8b820152610afc8a614382565b52610b0689614382565b50600197610839565b606083828194010152018b9061080b565b97610b2a9061434f565b976107df565b96610b3a9061434f565b966107af565b95610b4a9061434f565b9561077f565b94610b5a9061434f565b94610750565b93610b6a9061434f565b93610721565b92610b7a9061434f565b926106f2565b600192506106c2565b60405163200db56f60e11b8152600490fd5b3461030657602036600319011261030657610bb46138b8565b6001600160a01b03166000908152600080516020614536833981519152602090815260409182902054915160ff9092161515825290f35b3461030657604036600319011261030657610c2a600435610c0a6138ce565b90806000526000602052610c25600160406000200154613ca4565b6142be565b005b3461030657602036600319011261030657610c456138b8565b6001600160a01b038116908115610b8957610c5e613c4c565b610c6781613c21565b610ce657610c7490613f22565b506000805160206144d683398151915260005260046020527f9d423956391424a558206d539d4c7b96f2596f9d71b6fe92efe1f071a870ba948054610cb89061434f565b90557f49cc27c2a068c01cf703c3923dfc679109b5f6c27bd1f61b542c159e3a73e0926020604051428152a2005b6040516314726de560e21b8152600490fd5b346103065760203660031901126103065760043560008051602061457683398151915281148015610dcb575b8015610db4575b8015610d9d575b8015610d86575b8015610d6f575b15610d5d5760005260046020526020604060002054604051908152f35b604051636b9c461160e01b8152600490fd5b506000805160206145568339815191528114610d40565b506000805160206144d68339815191528114610d39565b506000805160206145968339815191528114610d32565b506000805160206144b68339815191528114610d2b565b506000805160206145b68339815191528114610d24565b3461030657602036600319011261030657610dfb6138b8565b6001600160a01b031660009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602090815260409182902054915160ff9092161515825290f35b3461030657602036600319011261030657610e5d6138b8565b6001600160a01b03166000908152600080516020614476833981519152602090815260409182902054915160ff9092161515825290f35b3461030657600036600319011261030657600460209081527f973ccc145476ef147b966a44694f8b2d26bac5a3d44a844fec6be696fe5fea70547f02ff85b9f193a3a7824cbaf5a79db262c0bac955152adf2752c6413d76b2d3c7547f0e08e55c6329ca2d4f38429c472032b4e97537c869a64c376bb7e702721eb8c3547fa792fa383e6bd9c6b4465bbfd8031f4b47377210fa121067c03906e9afac6246547f9d423956391424a558206d539d4c7b96f2596f9d71b6fe92efe1f071a870ba94546000805160206145568339815191526000527f5455ba4b8a75b33fa0f1f7affd9817680912f06b7b194bcf9ac01183c4930020546040805196875296860194909452948401919091526060830152608082019290925260a081019190915260c090f35b346103065760203660031901126103065760043560005260046020526020604060002054604051908152f35b3461030657602080600319360112610306576004356001600160401b0381116103065761101690369060040161393b565b8051156110945760405161105061105783519285818187019561103a8183896139d3565b8101600281520301902060405192838092613a4c565b038261391a565b838151910120908251902003611071575060405160018152f35b9061057e6040519283926311bb0bc960e31b845260048401526024830190613ae2565b9061057e60405192839263f855236d60e01b845260048401526024830190613ae2565b34610306576020366003190112610306576110d06138b8565b6001600160a01b03166000908152600080516020614436833981519152602090815260409182902054915160ff9092161515825290f35b34610306576020366003190112610306576111206138b8565b6001600160a01b038116908115610b8957611139613c4c565b61114281613bf6565b610ce65761114f90613eab565b506000805160206144b683398151915260005260046020527f0e08e55c6329ca2d4f38429c472032b4e97537c869a64c376bb7e702721eb8c380546111939061434f565b90557f964e50cb3bdb84c00a30f56ae15d538d23dc6db14f891d7d819761b161e990a66020604051428152a2005b3461030657600036600319011261030657602060405160008152f35b34610306576111eb36613991565b6111f3613c4c565b6111fc82613b75565b156102f4576102cb7f69e94e373f69f3f945457a07b335722310788af9cd459a33df6f72cc9e9640439160008051602061455683398151915280600052600060205261124f600160406000200154613ca4565b610386856140ea565b346103065761126636613b07565b336000908152600080516020614496833981519152602090815260409091205491929160ff16156105b857604051600160ff600a8551938581818901966112ae81838a6139d3565b81016002815203019020015460b81c161515146113335791600a61130261132e937f3a9eebd240f4c9f631531ebc672c4c040de483b868ccebe8a3a1fdad70cde0d9956040518093819287519283916139d3565b8101600281520301902001600160b81b60ff60b81b198254161790556040519182913395429184614321565b0390a2005b5061057e604051928392636f5f944160e11b845260048401526024830190613ae2565b346103065760403660031901126103065761136f6138ce565b600435600052600060205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b34610306576020366003190112610306576113bc6138b8565b6001600160a01b03166000908152600080516020614496833981519152602090815260409182902054915160ff9092161515825290f35b3461030657602080600319360112610306576004356001600160401b0381116103065761142490369060040161393b565b6040519080519061105061145b858301936114408187876139d3565b85019486816002978881520301902060405192838092613a4c565b848151910120815190818420149081159161160f575b506115fd5782849161148b604051948592519283916139d3565b830192828160039586815203019020908154906114a78261436b565b946114b5604051968761391a565b82865284860191829460005285600020916000935b85851061157b57604080518981528a51818b01819052600092600582901b83018101918b918d9085015b8287106115015785850386f35b909192938280600192603f1989820301855287519061155061153e61152e845160a0808652850190613ae2565b8585015184820387860152613ae2565b60408401518382036040850152613ae2565b916060868060a01b0381830151169083015260808091015191015296019201960195929190926114f4565b60058860019260409b9a9b51611590816138e4565b6040516115a181611050818c613a4c565b81526040516115b68161105081898d01613a4c565b838201526040516115cd81611050818b8d01613a4c565b6040820152848060a01b0386890154166060820152600488015460808201528152019401940193929796976114ca565b6040516329d7b10b60e11b8152600490fd5b90501585611471565b346103065761162636613b07565b336000908152600080516020614536833981519152602090815260409091205491929160ff16156105b857604051600160ff600a85519385818189019661166e81838a6139d3565b81016002815203019020015460a81c161515146116ee5791600a6116c261132e937fa214f45af6d86b0d5ff7bb48f888cf4205e4a383da35fcbebfdbd9bd8e6d5a7c956040518093819287519283916139d3565b8101600281520301902001600160a81b60ff60a81b198254161790556040519182913395429184614321565b5061057e60405192839263701203b760e01b845260048401526024830190613ae2565b346103065761171f36613991565b611727613c4c565b61173082613bf6565b156102f4576102cb7f71577b91708c73ee54b43c6709958ff42e4bcc084910648ce7c3d16928b51d52916000805160206144b6833981519152806000526000602052611783600160406000200154613ca4565b61038685614075565b346103065760003660031901126103065760206040516000805160206145568339815191528152f35b346103065760003660031901126103065760206040516000805160206145b68339815191528152f35b3461030657602080600319360112610306576004356001600160401b0381116103065761180f90369060040161393b565b906000805260008152604060002033600052815260ff60406000205416156105b85760405161105061184e84519284818188019561103a8183896139d3565b82815191012083519081832014908115916119a9575b506115fd5760ff600a6040518481875161187f8183896139d3565b81016002815203019020015460b01c168061197d575b1561195a579060ff600a61193b83604096958751606081527f10f4ba4c7bb6f0c442f54585004a6e24440bea5c2d2e6f36b688e3e624762e226118db606083018a613ae2565b916b54726164696e67526561647960a01b85828503948582850152600c81520152428b8201528a33930190a28484895184818b5161191a8183896139d3565b81016002815203019020015460b01c169688519384928392519283916139d3565b81016002815203019020015460b81c1683519215158352151590820152f35b5061057e6040519283926348cddbdb60e11b845260048401526024830190613ae2565b5060ff600a604051848187516119948183896139d3565b81016002815203019020015460b81c16611895565b90501584611864565b34610306576020366003190112610306576119cb6138b8565b6001600160a01b03166000908152600080516020614516833981519152602090815260409182902054915160ff9092161515825290f35b346103065760003660031901126103065760206040516000805160206145968339815191528152f35b346103065760003660031901126103065760206040516000805160206145768339815191528152f35b3461030657602036600319011261030657611a6d6138b8565b6001600160a01b038116908115610b8957611a86613c4c565b611a8f81613bcb565b610ce657611a9c90613e34565b506000805160206145b683398151915260005260046020527f02ff85b9f193a3a7824cbaf5a79db262c0bac955152adf2752c6413d76b2d3c78054611ae09061434f565b90557f4e3eede475de92d3e23765b737dbb67646352b3328c1a437d7f089766d7be7516020604051428152a2005b34610306576020366003190112610306576004356001600160401b03811161030657611b3e90369060040161393b565b6040518181809351602081930191611b55926139d3565b81016002815203602001902060405180611b6f8184613a4c565b03611b7a908261391a565b6040519182611b8c8160018401613a4c565b03611b97908461391a565b60405180611ba88160028501613a4c565b03611bb3908261391a565b6040519182611bc58160038401613a4c565b03611bd0908461391a565b60048101546005820154604051949185611bed8160068701613a4c565b03611bf8908761391a565b60078401546040516001600160a01b0397909391881692909184611c1f8160088a01613a4c565b03611c2a908661391a565b6040519586611c3c8160098b01613a4c565b03611c47908861391a565b600a88015497600b0154986040519c8d9c8d6102009081815201611c6a91613ae2565b8d810360208f0152611c7b91613ae2565b8c810360408e0152611c8c91613ae2565b8b810360608d0152611c9d91613ae2565b9160808b015260a08a015288810360c08a0152611cb991613ae2565b9060e0880152868103610100880152611cd191613ae2565b858103610120870152611ce391613ae2565b9281166101408501528060a01c60ff1615156101608501528060a81c60ff1615156101808501528060b01c60ff1615156101a085015260b81c60ff1615156101c08401526101e08301520390f35b346103065760003660031901126103065760206040516000805160206144b68339815191528152f35b3461030657611d6836613b07565b336000908152600080516020614436833981519152602090815260409091205491929160ff16156105b857604051600160ff600a855193858181890196611db081838a6139d3565b81016002815203019020015460b01c16151514611e305791600a611e0461132e937fa9de1934279a83f8cfaaecf6a7002ac10aeaea244c8c763f3752f3fc4c3e631d956040518093819287519283916139d3565b8101600281520301902001600160b01b60ff60b01b198254161790556040519182913395429184614321565b5061057e60405192839263c817400d60e01b845260048401526024830190613ae2565b3461030657602036600319011261030657611e6c6138b8565b6001600160a01b038116908115610b8957611e85613c4c565b611e8e81613ba0565b610ce657611e9b90613dbd565b5060008051602061459683398151915260005260046020527fa792fa383e6bd9c6b4465bbfd8031f4b47377210fa121067c03906e9afac62468054611edf9061434f565b90557f4a02edd19f09212e54b2ac85d7d3a4a2e3fbf424e6710c3f817d9b4cecc9cdb36020604051428152a2005b346103065760c0366003190112610306576004356001600160401b03811161030657611f3d90369060040161393b565b6024356001600160401b03811161030657611f5c90369060040161393b565b906064356001600160401b03811161030657611f7c90369060040161393b565b9060a4356001600160401b03811161030657611f9c90369060040161393b565b3360009081526000805160206144f6833981519152602052604090205490929060ff16156105b85781511561312457805115610594578351156131125760443515613100576084351580156130f4575b6130e257605060843511156130c8578251156130b65760015461200e8161434f565b600155604051612056607482602081019460206120318b888151938492016139d3565b8201903360601b6020830152426034830152605482015203605481018452018261391a565b5190209260405193612067856138ff565b600a8552602036818701378451156130a057603060208601538451600110156130a0576078602186015360005b6004811061300d5750506120e96021604051809688516120bb816020850160208d016139d3565b8201602d60f81b60208201526120da82518093602087850191016139d3565b0103600181018752018561391a565b60405190816102008101106001600160401b03610200840111176128ab576102008201604052848252836020830152826040830152856060830152604435608083015260843560a083015260c08201523360e082015260405161214b816138ff565b600381526252617760e81b602082015261010082015260405161216d816138ff565b600d81526c26b4b734b7339021b2b73a32b960991b6020820152610120820152336101408201526000610160820152600061018082015260006101a082015260006101c0820152426101e082015260405160208186516121d08183858b016139d3565b810160028152030190209080518051906001600160401b0382116128ab5781906121fa8554613a12565b601f8111612fbd575b50602090601f8311600114612f5157600092612f46575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b0382116128ab5781906122546001860154613a12565b601f8111612ef3575b50602090601f8311600114612e8157600092612e76575b50508160011b916000199060031b1c19161760018301555b60408101518051906001600160401b0382116128ab5781906122b16002860154613a12565b601f8111612e23575b50602090601f8311600114612db157600092612da6575b50508160011b916000199060031b1c19161760028301555b60608101518051906001600160401b0382116128ab57819061230e6003860154613a12565b601f8111612d53575b50602090601f8311600114612ce157600092612cd6575b50508160011b916000199060031b1c19161760038301555b6080810151600483015560a0810151600583015560c08101518051906001600160401b0382116128ab57819061237f6006860154613a12565b601f8111612c83575b50602090601f8311600114612c1157600092612c06575b50508160011b916000199060031b1c19161760068301555b60e08101516007830180546001600160a01b0319166001600160a01b03929092169190911790556101008101518051906001600160401b0382116128ab5781906124046008860154613a12565b601f8111612bb3575b50602090601f8311600114612b4157600092612b36575b50508160011b916000199060031b1c19161760088301555b6101208101518051906001600160401b0382116128ab576124606009850154613a12565b601f8111612aef575b50602090601f8311600114612a79579180600b94926101e094600092612a6e575b50508160011b916000199060031b1c19161760098501555b600a840160018060a01b036101408301511681549060ff60a01b610160850151151560a01b1660ff60a81b610180860151151560a81b169060ff60b01b6101a0870151151560b01b169260ff60b81b6101c0880151151560b81b16946001600160401b0360c01b16171717171790550151910155604051602081855161252b8183858a016139d3565b81016003815203019020936040519467027b934b3b4b71d160c51b602087015261257360288785516125638184840160208a016139d3565b810103600881018952018761391a565b60405195612580876138e4565b85875260405161258f816138ff565b600a815269149959da5cdd195c995960b21b6020820152602088015260408701523360608701524260808701528054680100000000000000008110156128ab576125de916001820181556139f6565b612a585785518051906001600160401b0382116128ab5781906126018454613a12565b601f8111612a08575b50602090601f831160011461299c57600092612991575b50508160011b916000199060031b1c19161781555b60208601518051906001600160401b0382116128ab57819061265b6001850154613a12565b601f811161293e575b50602090601f83116001146128cc576000926128c1575b50508160011b916000199060031b1c19161760018201555b60408601519586516001600160401b0381116128ab576126b66002840154613a12565b601f8111612864575b506020601f82116001146127c357926004608061053f948461278398957f73c819068ba25b88a32cb91f9b552ab50d9cccb7c4abdeb2a04f44373b7153939a986127b49e6000926127b8575b50508160011b916000199060031b1c19161760028501555b6003840160018060a01b036060830151166bffffffffffffffffffffffff60a01b82541617905501519101556127756040519660e0885261276760e089018a613ae2565b9088820360208a0152613ae2565b908682036040880152613ae2565b91604435608082015260843560a08201524260c08201528033930390a2604051918291602083526020830190613ae2565b0390f35b015190508e8061270b565b6002840160005260206000209860005b601f198416811061284c5750608061053f946001856127b49d7f73c819068ba25b88a32cb91f9b552ab50d9cccb7c4abdeb2a04f44373b7153939b99966004966127839c99601f19811610612833575b505050811b016002850155612723565b015160001960f88460031b161c191690558e8080612823565b828201518b556001909a0199602092830192016127d3565b600284016000526020600020601f830160051c8101602084106128a4575b601f830160051c820181106128985750506126bf565b60008155600101612882565b5080612882565b634e487b7160e01b600052604160045260246000fd5b01519050888061267b565b9250600184016000526020600020906000935b601f1984168510612923576001945083601f1981161061290a575b505050811b016001820155612693565b015160001960f88460031b161c191690558880806128fa565b818101518355602094850194600190930192909101906128df565b909150600184016000526020600020601f840160051c81016020851061298a575b90849392915b601f830160051c8201811061297b575050612664565b60008155859450600101612965565b508061295f565b015190508880612621565b9250836000526020600020906000935b601f19841685106129ed576001945083601f198116106129d4575b505050811b018155612636565b015160001960f88460031b161c191690558880806129c7565b818101518355602094850194600190930192909101906129ac565b909150836000526020600020601f840160051c810160208510612a51575b90849392915b601f830160051c82018110612a4257505061260a565b60008155859450600101612a2c565b5080612a26565b634e487b7160e01b600052600060045260246000fd5b015190508a8061248a565b906009850160005260206000209160005b601f1985168110612ad7575092600b94926001926101e09583601f19811610612abe575b505050811b0160098501556124a2565b015160001960f88460031b161c191690558a8080612aae565b91926020600181928685015181550194019201612a8a565b600985016000526020600020601f840160051c810160208510612b2f575b601f830160051c82018110612b23575050612469565b60008155600101612b0d565b5080612b0d565b015190508880612424565b9250600885016000526020600020906000935b601f1984168510612b98576001945083601f19811610612b7f575b505050811b01600883015561243c565b015160001960f88460031b161c19169055888080612b6f565b81810151835560209485019460019093019290910190612b54565b909150600885016000526020600020601f840160051c810160208510612bff575b90849392915b601f830160051c82018110612bf057505061240d565b60008155859450600101612bda565b5080612bd4565b01519050888061239f565b9250600685016000526020600020906000935b601f1984168510612c68576001945083601f19811610612c4f575b505050811b0160068301556123b7565b015160001960f88460031b161c19169055888080612c3f565b81810151835560209485019460019093019290910190612c24565b909150600685016000526020600020601f840160051c810160208510612ccf575b90849392915b601f830160051c82018110612cc0575050612388565b60008155859450600101612caa565b5080612ca4565b01519050888061232e565b9250600385016000526020600020906000935b601f1984168510612d38576001945083601f19811610612d1f575b505050811b016003830155612346565b015160001960f88460031b161c19169055888080612d0f565b81810151835560209485019460019093019290910190612cf4565b909150600385016000526020600020601f840160051c810160208510612d9f575b90849392915b601f830160051c82018110612d90575050612317565b60008155859450600101612d7a565b5080612d74565b0151905088806122d1565b9250600285016000526020600020906000935b601f1984168510612e08576001945083601f19811610612def575b505050811b0160028301556122e9565b015160001960f88460031b161c19169055888080612ddf565b81810151835560209485019460019093019290910190612dc4565b909150600285016000526020600020601f840160051c810160208510612e6f575b90849392915b601f830160051c82018110612e605750506122ba565b60008155859450600101612e4a565b5080612e44565b015190508880612274565b9250600185016000526020600020906000935b601f1984168510612ed8576001945083601f19811610612ebf575b505050811b01600183015561228c565b015160001960f88460031b161c19169055888080612eaf565b81810151835560209485019460019093019290910190612e94565b909150600185016000526020600020601f840160051c810160208510612f3f575b90849392915b601f830160051c82018110612f3057505061225d565b60008155859450600101612f1a565b5080612f14565b01519050888061221a565b9250846000526020600020906000935b601f1984168510612fa2576001945083601f19811610612f89575b505050811b01825561222f565b015160001960f88460031b161c19169055888080612f7c565b81810151835560209485019460019093019290910190612f61565b909150846000526020600020601f840160051c810160208510613006575b90849392915b601f830160051c82018110612ff7575050612203565b60008155859450600101612fe1565b5080612fdb565b60208110156130a05781811a90600f61302a818460041c166143b4565b908260011b93600284860481148515171561308a5785810180911161308a5761305a6130619460001a918c6143a3565b53166143b4565b91600390810180911161308a5761307f6130859360001a91896143a3565b5361434f565b612094565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60405163bfccc8e960e01b8152600490fd5b60405163d05db01960e01b81526084356004820152602490fd5b604051633abe7db760e21b8152600490fd5b50606460843511611fec565b60405163fd83f8d960e01b8152600490fd5b60405163a765e58f60e01b8152600490fd5b604051630ac6e45360e31b8152600490fd5b346103065760403660031901126103065761314f6138ce565b336001600160a01b0382160361316b57610c2a906004356142be565b60405163334bd91960e11b8152600490fd5b34610306576040366003190112610306576004356001600160401b038111610306576131ad90369060040161393b565b6131c960206024359281604051938285809451938492016139d3565b81016003815203019020805482101561030657613258916131e9916139f6565b5060405190613203826131fc8184613a4c565b038361391a565b604051613217816110508160018601613a4c565b61327460405161322e816110508160028801613a4c565b613266600460018060a01b036003870154169501549360405197889760a0895260a0890190613ae2565b908782036020890152613ae2565b908582036040870152613ae2565b91606084015260808301520390f35b346103065760203660031901126103065761329c6138b8565b6001600160a01b031660009081526000805160206144f6833981519152602090815260409182902054915160ff9092161515825290f35b34610306576132e136613991565b6132e9613c4c565b6132f282613b4a565b156102f4576102cb7f125f88db22967983b401f70f6804d47f43cb545fcb725d0b335fe7d43d9b4a4a91600080516020614576833981519152806000526000602052613345600160406000200154613ca4565b61038685614000565b3461030657604036600319011261030657610c2a60043561336d6138ce565b90806000526000602052613388600160406000200154613ca4565b613f99565b346103065760203660031901126103065760043560005260006020526020600160406000200154604051908152f35b3461030657602080600319360112610306576004356001600160401b038111610306576133ed90369060040161393b565b9060008051602061455683398151915260005260008152604060002033600052815260ff918260406000205416156105b857604051815193838301946134348184886139d3565b8201906001816002938481528588600a97889303019020015460a01c161515146136cf57600080526000855260406000203360005285528060406000205416156105b8576110506134a76040518781806134928c8b519283916139d3565b81018781520301902060405192838092613a4c565b85815191012084519081882014908115916136c6575b506115fd5780836040518781806134d88c8b519283916139d3565b810187815203019020015460b01c168061369b575b1561367957604051606081527f10f4ba4c7bb6f0c442f54585004a6e24440bea5c2d2e6f36b688e3e624762e226135276060830187613ae2565b916b54726164696e67526561647960a01b88828503948582850152600c81520152426040820152604033930190a2808360405187818061356b8c8b519283916139d3565b810187815203019020015460b01c1690836040518781806135908c8b519283916139d3565b810187815203019020015460b81c1681613671575b501561364f57837ffed1001c142a7ab386454a2f7d78b013ba7ff40595d10c128f2fb6463ccd7b7a94956136139284604051848189516135e68183896139d3565b81018581520301902001805460ff60a01b1916600160a01b179055604051865190948593829085906139d3565b8201908152030190200180546001600160a01b03191633179055604080518181529161364191830190613ae2565b9242908201528033930390a2005b6040516348cddbdb60e11b8152600481018590528061057e6024820186613ae2565b9050866135a5565b6040516348cddbdb60e11b8152600481018690528061057e6024820187613ae2565b5080836040518781806136b28c8b519283916139d3565b810187815203019020015460b81c166134ed565b905015876134bd565b604051632072bb0160e11b8152600481018690528061057e6024820187613ae2565b346103065760203660031901126103065761370a6138b8565b6001600160a01b038116908115610b8957613723613c4c565b61372c81613b75565b610ce65761373990613d46565b5060008051602061455683398151915260005260046020527f5455ba4b8a75b33fa0f1f7affd9817680912f06b7b194bcf9ac01183c4930020805461377d9061434f565b90557ff8ed9ac482b0f7c12999b3f157f758f84e39cd339fa301ea203823ac29e975056020604051428152a2005b34610306576020366003190112610306576137c46138b8565b6001600160a01b038116908115610b89576137dd613c4c565b6137e681613b4a565b610ce6576137f390613cca565b5060008051602061457683398151915260005260046020527f973ccc145476ef147b966a44694f8b2d26bac5a3d44a844fec6be696fe5fea7080546138379061434f565b90557f593f046317558c2857b92915c62c99f2d2108f7bc6f1e1b3c5376cd559abf5596020604051428152a2005b34610306576020366003190112610306576004359063ffffffff60e01b821680920361030657602091637965db0b60e01b81149081156138a7575b5015158152f35b6301ffc9a760e01b149050836138a0565b600435906001600160a01b038216820361030657565b602435906001600160a01b038216820361030657565b60a081019081106001600160401b038211176128ab57604052565b604081019081106001600160401b038211176128ab57604052565b90601f801991011681019081106001600160401b038211176128ab57604052565b81601f82011215610306578035906001600160401b0382116128ab576040519261396f601f8401601f19166020018561391a565b8284526020838301011161030657816000926020809301838601378301015290565b906040600319830112610306576004356001600160a01b03811681036103065791602435906001600160401b038211610306576139d09160040161393b565b90565b60005b8381106139e65750506000910152565b81810151838201526020016139d6565b80548210156130a0576000526005602060002091020190600090565b90600182811c92168015613a42575b6020831014613a2c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691613a21565b9060009291805491613a5d83613a12565b918282526001938481169081600014613abf5750600114613a7f575b50505050565b90919394506000526020928360002092846000945b838610613aab575050505001019038808080613a79565b805485870183015294019385908201613a94565b9294505050602093945060ff191683830152151560051b01019038808080613a79565b90602091613afb815180928185528580860191016139d3565b601f01601f1916010190565b906040600319830112610306576001600160401b036004358181116103065783613b339160040161393b565b92602435918211610306576139d09160040161393b565b6001600160a01b031660009081526000805160206144f6833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614476833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614436833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614536833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614516833981519152602052604090205460ff1690565b6001600160a01b03166000908152600080516020614496833981519152602052604090205460ff1690565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff1615613c865750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600060205260406000203360005260205260ff6040600020541615613c865750565b6001600160a01b031660008181526000805160206144f683398151915260205260408120549091906000805160206145768339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b505090565b6001600160a01b0316600081815260008051602061447683398151915260205260408120549091906000805160206145568339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b0316600081815260008051602061443683398151915260205260408120549091906000805160206145968339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b0316600081815260008051602061453683398151915260205260408120549091906000805160206145b68339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b0316600081815260008051602061451683398151915260205260408120549091906000805160206144b68339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b0316600081815260008051602061449683398151915260205260408120549091906000805160206144d68339815191529060ff16613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541615600014613d4157808352826020526040832082845260205260408320600160ff19825416179055600080516020614456833981519152339380a4600190565b6001600160a01b031660008181526000805160206144f683398151915260205260408120549091906000805160206145768339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061451683398151915260205260408120549091906000805160206144b68339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061447683398151915260205260408120549091906000805160206145568339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061449683398151915260205260408120549091906000805160206144d68339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061453683398151915260205260408120549091906000805160206145b68339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b6001600160a01b0316600081815260008051602061443683398151915260205260408120549091906000805160206145968339815191529060ff1615613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416600014613d415780835282602052604083208284526020526040832060ff1981541690556000805160206145d6833981519152339380a4600190565b93929161434a9061433c604093606088526060880190613ae2565b908682036020880152613ae2565b930152565b600019811461308a5760010190565b801561308a576000190190565b6001600160401b0381116128ab5760051b60200190565b8051156130a05760200190565b80518210156130a05760209160051b010190565b9081518110156130a0570160200190565b60009060ff16600a8110156143e057603091500160ff811161308a5760f81b6001600160f81b03191690565b60610160ff81116144215760ff6009199116019060ff821161440d575060f81b6001600160f81b03191690565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b82526011600452602482fdfe0d2d6a5d08cb5d871289c0a3ca855d9da72909a111c24cce2d5c2b34a20daa542f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0df3fa603c74bfe2a4719960e47343678c3dc690d2b27a2295acc6fc430833aaf9acfff8a39fb957d9d1c8e3ef9f08385e3fcf7bb23ab7ba0ad0f8df93dbde6a68ddaa901e2fe3bda354fe0ede2785152d5c109282a613fe024a056a3e66c41bb3273dcf2136c7d8ef632bb8ef13dbca69a8f36fa620c7468671b3153d46a211c0bb3fcc25fbffa12ea463b3505377899a4d5ddb4858b9c7bd36764686d9425b36bce5fd3347e0dc338dcc0e895534dd4af2740eec95f56cd4ca4b4b2ada357ca04130a4caca6023b0ba21488ee680ce5c3df22860b1cd8b02cd2a0bcb0de98851f8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90ea952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e7259a1c48e5837ad7a7f3dcedcbe129bf3249ec4fbf651fd4f5e2600ead39fe2f5a977e1a3444218ff332edf735c56487bbe59922b15c88777d443eb8b78020f4df6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171ba2646970667358221220b19807b95e0ea62b7b0dd72be0d4a321b0981a008b93d0c49c053c7b3a992e4d64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ]
    },
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "_auditMineral(string,string)": {
        "details": "only the auditor can audit mineralDetails.Logs audit report on every successful audit.",
        "params": {
          "mineralId": "The ID of the mineral under audition.",
          "report": "The audit status report of the mineral under audition."
        }
      },
      "checkAuditAndInspectionStatus(string)": {
        "details": "checks audit and inspection status",
        "params": {
          "mineralId": "The ID of the mineral to check for audit and inspection status Returns (isValid, isInspected) statuses of both audit and inspection of mineral according to mineralId"
        }
      },
      "getAllRoleCounts()": {
        "details": "Returns all role counts in a single call",
        "returns": {
          "auditorCount": "Number of auditors",
          "buyerCount": "Number of buyers",
          "inspectorCount": "Number of inspectors",
          "minerCount": "Number of miners",
          "refinerCount": "Number of refiners",
          "transporterCount": "Number of transporters"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have a specific role",
        "params": {
          "role": "The role to query member count for"
        },
        "returns": {
          "count": "The number of accounts with the role"
        }
      },
      "getRolesForAddress(address)": {
        "details": "Returns all roles assigned to a given address",
        "params": {
          "account": "The address to check roles for"
        },
        "returns": {
          "roles": "An array of role names the address has"
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasMinerRole(address)": {
        "details": "Roles helper functionschecks if an account has a specific role",
        "params": {
          "account": "The address of the account to checked with role association"
        }
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "inspectMineral(string,string)": {
        "details": "only the inspector can inspect mineralDetailsLogs audit report on every successful inspection",
        "params": {
          "mineralId": "The ID of the mineral under inspection",
          "report": "The inspection status report of the mineral under inspection"
        }
      },
      "isMineralRegistered(string)": {
        "details": "checks if a mineral with the given ID is registered",
        "params": {
          "mineralId": "the ID of the mineral to check"
        },
        "returns": {
          "_0": "A boolean indicating whether the mineral is registered or not"
        }
      },
      "purchaseMineral(string)": {
        "details": "Only the buyer can purchase mineralDetails",
        "params": {
          "mineralId": "The ID of the mineral under purchase"
        }
      },
      "refineMineral(string,string)": {
        "details": "only the refiner can refiner a mineral",
        "params": {
          "mineralId": "The ID of the mineral under refinery"
        }
      },
      "registerMineral(string,string,uint256,string,uint256,string)": {
        "details": "Register a new mineral - only by miner.Every mineral is assigned a unique mineralId.",
        "params": {
          "_mineralType": "The type of a mineral.",
          "_name": "Mineral name.",
          "_origin": "Mineral Origin.",
          "_purityPercentage": "Mineral purity in percentage.",
          "_storageConditions": "Mineral Storage conditions.",
          "_weight": "Mineral weight in uint256."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferMineral(string,address,string,string)": {
        "details": "only the transporter can transport mineralDetails",
        "params": {
          "_destination": "The Destination area of the mineral(string)",
          "_origin": "The Original location of the mineral under transportation",
          "_receivingParty": "The address of the destination portal",
          "mineralId": "The ID of the mineral under transportation"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "_auditMineral(string,string)": {
        "notice": "Emits MineralAudited event."
      },
      "inspectMineral(string,string)": {
        "notice": "Emits MineralInspected event on successful inspection"
      },
      "purchaseMineral(string)": {
        "notice": "Emits MineralPurchased event on successful purchase"
      },
      "refineMineral(string,string)": {
        "notice": "Emits MineralRefined event on successfl refining process"
      },
      "registerMineral(string,string,uint256,string,uint256,string)": {
        "notice": "Emits MineralRegistered event on successful registration."
      },
      "transferMineral(string,address,string,string)": {
        "notice": "Emits MineralTransported on successful transportation"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/core/RolesManager.sol:RolesManager",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
      },
      {
        "astId": 3707,
        "contract": "contracts/core/RolesManager.sol:RolesManager",
        "label": "nonce",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3712,
        "contract": "contracts/core/RolesManager.sol:RolesManager",
        "label": "mineralDetails",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(MineralDetails)3689_storage)"
      },
      {
        "astId": 3718,
        "contract": "contracts/core/RolesManager.sol:RolesManager",
        "label": "mineralHistories",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(MineralHistory)3700_storage)dyn_storage)"
      },
      {
        "astId": 3722,
        "contract": "contracts/core/RolesManager.sol:RolesManager",
        "label": "roleMemberCount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(MineralHistory)3700_storage)dyn_storage": {
        "base": "t_struct(MineralHistory)3700_storage",
        "encoding": "dynamic_array",
        "label": "struct RolesManager.MineralHistory[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)21_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(MineralHistory)3700_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct RolesManager.MineralHistory[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(MineralHistory)3700_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(MineralDetails)3689_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct RolesManager.MineralDetails)",
        "numberOfBytes": "32",
        "value": "t_struct(MineralDetails)3689_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(MineralDetails)3689_storage": {
        "encoding": "inplace",
        "label": "struct RolesManager.MineralDetails",
        "members": [
          {
            "astId": 3658,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3660,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 3662,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "origin",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3664,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "mineralType",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 3666,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "weight",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3668,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "purityPercentage",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3670,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "storageConditions",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 3672,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "registeredBy",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 3674,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "currentStatus",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          },
          {
            "astId": 3676,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "currentLocation",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          },
          {
            "astId": 3678,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "currentHandler",
            "offset": 0,
            "slot": "10",
            "type": "t_address"
          },
          {
            "astId": 3680,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "isPurchased",
            "offset": 20,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 3682,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "isRefined",
            "offset": 21,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 3684,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "isAudited",
            "offset": 22,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 3686,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "isInspected",
            "offset": 23,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 3688,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "timestamp",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(MineralHistory)3700_storage": {
        "encoding": "inplace",
        "label": "struct RolesManager.MineralHistory",
        "members": [
          {
            "astId": 3691,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3693,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "fieldChanged",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 3695,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "newValue",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3697,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "updatedBy",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 3699,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(RoleData)21_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20,
            "contract": "contracts/core/RolesManager.sol:RolesManager",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}