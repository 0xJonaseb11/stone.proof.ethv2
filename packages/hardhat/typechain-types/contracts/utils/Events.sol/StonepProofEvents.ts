/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
} from "../../../common";

export interface StonepProofEventsInterface extends Interface {
  getEvent(
    nameOrSignatureOrTopic:
      | "AdminRoleAssigned"
      | "AdminRoleRevoked"
      | "AuditorRoleRevoked"
      | "AuiditorRoleRevoked"
      | "BuyerRoleAssigned"
      | "BuyerRoleRevoked"
      | "InspectorRoleAssigned"
      | "InspectorRoleRevoked"
      | "MinerRoleAssigned"
      | "MinerRoleRevoked"
      | "MineralAudited"
      | "MineralInspected"
      | "MineralPurchased"
      | "MineralReadyToTrade"
      | "MineralRefined"
      | "MineralRegistered"
      | "MineralTransported"
      | "RefinerRoleAssigned"
      | "RefinerRoleRevoked"
      | "RoleAssigned"
      | "RoleRevoked"
      | "TransporterRoleAssigned"
      | "TransporterRoleRevoked",
  ): EventFragment;
}

export namespace AdminRoleAssignedEvent {
  export type InputTuple = [assignee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [assignee: string, timestamp: bigint];
  export interface OutputObject {
    assignee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AdminRoleRevokedEvent {
  export type InputTuple = [revokee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [revokee: string, timestamp: bigint];
  export interface OutputObject {
    revokee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AuditorRoleRevokedEvent {
  export type InputTuple = [revokee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [revokee: string, timestamp: bigint];
  export interface OutputObject {
    revokee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AuiditorRoleRevokedEvent {
  export type InputTuple = [assignee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [assignee: string, timestamp: bigint];
  export interface OutputObject {
    assignee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BuyerRoleAssignedEvent {
  export type InputTuple = [assignee: AddressLike, imestamp: BigNumberish];
  export type OutputTuple = [assignee: string, imestamp: bigint];
  export interface OutputObject {
    assignee: string;
    imestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BuyerRoleRevokedEvent {
  export type InputTuple = [revokee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [revokee: string, timestamp: bigint];
  export interface OutputObject {
    revokee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InspectorRoleAssignedEvent {
  export type InputTuple = [assignee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [assignee: string, timestamp: bigint];
  export interface OutputObject {
    assignee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InspectorRoleRevokedEvent {
  export type InputTuple = [revokee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [revokee: string, timestamp: bigint];
  export interface OutputObject {
    revokee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MinerRoleAssignedEvent {
  export type InputTuple = [assignee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [assignee: string, timestamp: bigint];
  export interface OutputObject {
    assignee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MinerRoleRevokedEvent {
  export type InputTuple = [revokee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [revokee: string, timestamp: bigint];
  export interface OutputObject {
    revokee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MineralAuditedEvent {
  export type InputTuple = [mineralId: string, status: BytesLike, auditor: AddressLike, auditedAt: BigNumberish];
  export type OutputTuple = [mineralId: string, status: string, auditor: string, auditedAt: bigint];
  export interface OutputObject {
    mineralId: string;
    status: string;
    auditor: string;
    auditedAt: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MineralInspectedEvent {
  export type InputTuple = [
    mineralId: string,
    mineralStatus: string,
    inspector: AddressLike,
    inspectedAt: BigNumberish,
  ];
  export type OutputTuple = [mineralId: string, mineralStatus: string, inspector: string, inspectedAt: bigint];
  export interface OutputObject {
    mineralId: string;
    mineralStatus: string;
    inspector: string;
    inspectedAt: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MineralPurchasedEvent {
  export type InputTuple = [mineralId: string, buyer: AddressLike, purchasedAt: BigNumberish];
  export type OutputTuple = [mineralId: string, buyer: string, purchasedAt: bigint];
  export interface OutputObject {
    mineralId: string;
    buyer: string;
    purchasedAt: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MineralReadyToTradeEvent {
  export type InputTuple = [
    mineralId: string,
    inspector_Auditor: AddressLike,
    status: string,
    inspectionDate: BigNumberish,
  ];
  export type OutputTuple = [mineralId: string, inspector_Auditor: string, status: string, inspectionDate: bigint];
  export interface OutputObject {
    mineralId: string;
    inspector_Auditor: string;
    status: string;
    inspectionDate: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MineralRefinedEvent {
  export type InputTuple = [mineralId: BigNumberish, refiner: AddressLike, refinedAt: BigNumberish];
  export type OutputTuple = [mineralId: bigint, refiner: string, refinedAt: bigint];
  export interface OutputObject {
    mineralId: bigint;
    refiner: string;
    refinedAt: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MineralRegisteredEvent {
  export type InputTuple = [
    mineralId: string,
    mineralName: string,
    mineralType: string,
    origin: string,
    weight: string,
    purityPercentage: BigNumberish,
    miner: AddressLike,
    registeredAt: BigNumberish,
  ];
  export type OutputTuple = [
    mineralId: string,
    mineralName: string,
    mineralType: string,
    origin: string,
    weight: string,
    purityPercentage: bigint,
    miner: string,
    registeredAt: bigint,
  ];
  export interface OutputObject {
    mineralId: string;
    mineralName: string;
    mineralType: string;
    origin: string;
    weight: string;
    purityPercentage: bigint;
    miner: string;
    registeredAt: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MineralTransportedEvent {
  export type InputTuple = [
    mineralId: string,
    transporter: AddressLike,
    receivingParty: AddressLike,
    origin: string,
    destination: string,
    transportedAt: BigNumberish,
  ];
  export type OutputTuple = [
    mineralId: string,
    transporter: string,
    receivingParty: string,
    origin: string,
    destination: string,
    transportedAt: bigint,
  ];
  export interface OutputObject {
    mineralId: string;
    transporter: string;
    receivingParty: string;
    origin: string;
    destination: string;
    transportedAt: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RefinerRoleAssignedEvent {
  export type InputTuple = [assignee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [assignee: string, timestamp: bigint];
  export interface OutputObject {
    assignee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RefinerRoleRevokedEvent {
  export type InputTuple = [revokee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [revokee: string, timestamp: bigint];
  export interface OutputObject {
    revokee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAssignedEvent {
  export type InputTuple = [account: AddressLike, role: BytesLike, roleAssignedAt: BigNumberish];
  export type OutputTuple = [account: string, role: string, roleAssignedAt: bigint];
  export interface OutputObject {
    account: string;
    role: string;
    roleAssignedAt: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevokedEvent {
  export type InputTuple = [role: BytesLike, account: AddressLike, revoker: AddressLike, roleRevokedAt: BigNumberish];
  export type OutputTuple = [role: string, account: string, revoker: string, roleRevokedAt: bigint];
  export interface OutputObject {
    role: string;
    account: string;
    revoker: string;
    roleRevokedAt: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransporterRoleAssignedEvent {
  export type InputTuple = [assignee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [assignee: string, timestamp: bigint];
  export interface OutputObject {
    assignee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransporterRoleRevokedEvent {
  export type InputTuple = [revokee: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [revokee: string, timestamp: bigint];
  export interface OutputObject {
    revokee: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface StonepProofEvents extends BaseContract {
  connect(runner?: ContractRunner | null): StonepProofEvents;
  waitForDeployment(): Promise<this>;

  interface: StonepProofEventsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(event: TCEvent, listener: TypedListener<TCEvent>): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(event: TCEvent, listener: TypedListener<TCEvent>): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(event: TCEvent): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(event?: TCEvent): Promise<this>;

  getFunction<T extends ContractMethod = ContractMethod>(key: string | FunctionFragment): T;

  getEvent(
    key: "AdminRoleAssigned",
  ): TypedContractEvent<
    AdminRoleAssignedEvent.InputTuple,
    AdminRoleAssignedEvent.OutputTuple,
    AdminRoleAssignedEvent.OutputObject
  >;
  getEvent(
    key: "AdminRoleRevoked",
  ): TypedContractEvent<
    AdminRoleRevokedEvent.InputTuple,
    AdminRoleRevokedEvent.OutputTuple,
    AdminRoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "AuditorRoleRevoked",
  ): TypedContractEvent<
    AuditorRoleRevokedEvent.InputTuple,
    AuditorRoleRevokedEvent.OutputTuple,
    AuditorRoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "AuiditorRoleRevoked",
  ): TypedContractEvent<
    AuiditorRoleRevokedEvent.InputTuple,
    AuiditorRoleRevokedEvent.OutputTuple,
    AuiditorRoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "BuyerRoleAssigned",
  ): TypedContractEvent<
    BuyerRoleAssignedEvent.InputTuple,
    BuyerRoleAssignedEvent.OutputTuple,
    BuyerRoleAssignedEvent.OutputObject
  >;
  getEvent(
    key: "BuyerRoleRevoked",
  ): TypedContractEvent<
    BuyerRoleRevokedEvent.InputTuple,
    BuyerRoleRevokedEvent.OutputTuple,
    BuyerRoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "InspectorRoleAssigned",
  ): TypedContractEvent<
    InspectorRoleAssignedEvent.InputTuple,
    InspectorRoleAssignedEvent.OutputTuple,
    InspectorRoleAssignedEvent.OutputObject
  >;
  getEvent(
    key: "InspectorRoleRevoked",
  ): TypedContractEvent<
    InspectorRoleRevokedEvent.InputTuple,
    InspectorRoleRevokedEvent.OutputTuple,
    InspectorRoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "MinerRoleAssigned",
  ): TypedContractEvent<
    MinerRoleAssignedEvent.InputTuple,
    MinerRoleAssignedEvent.OutputTuple,
    MinerRoleAssignedEvent.OutputObject
  >;
  getEvent(
    key: "MinerRoleRevoked",
  ): TypedContractEvent<
    MinerRoleRevokedEvent.InputTuple,
    MinerRoleRevokedEvent.OutputTuple,
    MinerRoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "MineralAudited",
  ): TypedContractEvent<
    MineralAuditedEvent.InputTuple,
    MineralAuditedEvent.OutputTuple,
    MineralAuditedEvent.OutputObject
  >;
  getEvent(
    key: "MineralInspected",
  ): TypedContractEvent<
    MineralInspectedEvent.InputTuple,
    MineralInspectedEvent.OutputTuple,
    MineralInspectedEvent.OutputObject
  >;
  getEvent(
    key: "MineralPurchased",
  ): TypedContractEvent<
    MineralPurchasedEvent.InputTuple,
    MineralPurchasedEvent.OutputTuple,
    MineralPurchasedEvent.OutputObject
  >;
  getEvent(
    key: "MineralReadyToTrade",
  ): TypedContractEvent<
    MineralReadyToTradeEvent.InputTuple,
    MineralReadyToTradeEvent.OutputTuple,
    MineralReadyToTradeEvent.OutputObject
  >;
  getEvent(
    key: "MineralRefined",
  ): TypedContractEvent<
    MineralRefinedEvent.InputTuple,
    MineralRefinedEvent.OutputTuple,
    MineralRefinedEvent.OutputObject
  >;
  getEvent(
    key: "MineralRegistered",
  ): TypedContractEvent<
    MineralRegisteredEvent.InputTuple,
    MineralRegisteredEvent.OutputTuple,
    MineralRegisteredEvent.OutputObject
  >;
  getEvent(
    key: "MineralTransported",
  ): TypedContractEvent<
    MineralTransportedEvent.InputTuple,
    MineralTransportedEvent.OutputTuple,
    MineralTransportedEvent.OutputObject
  >;
  getEvent(
    key: "RefinerRoleAssigned",
  ): TypedContractEvent<
    RefinerRoleAssignedEvent.InputTuple,
    RefinerRoleAssignedEvent.OutputTuple,
    RefinerRoleAssignedEvent.OutputObject
  >;
  getEvent(
    key: "RefinerRoleRevoked",
  ): TypedContractEvent<
    RefinerRoleRevokedEvent.InputTuple,
    RefinerRoleRevokedEvent.OutputTuple,
    RefinerRoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "RoleAssigned",
  ): TypedContractEvent<RoleAssignedEvent.InputTuple, RoleAssignedEvent.OutputTuple, RoleAssignedEvent.OutputObject>;
  getEvent(
    key: "RoleRevoked",
  ): TypedContractEvent<RoleRevokedEvent.InputTuple, RoleRevokedEvent.OutputTuple, RoleRevokedEvent.OutputObject>;
  getEvent(
    key: "TransporterRoleAssigned",
  ): TypedContractEvent<
    TransporterRoleAssignedEvent.InputTuple,
    TransporterRoleAssignedEvent.OutputTuple,
    TransporterRoleAssignedEvent.OutputObject
  >;
  getEvent(
    key: "TransporterRoleRevoked",
  ): TypedContractEvent<
    TransporterRoleRevokedEvent.InputTuple,
    TransporterRoleRevokedEvent.OutputTuple,
    TransporterRoleRevokedEvent.OutputObject
  >;

  filters: {
    "AdminRoleAssigned(address,uint256)": TypedContractEvent<
      AdminRoleAssignedEvent.InputTuple,
      AdminRoleAssignedEvent.OutputTuple,
      AdminRoleAssignedEvent.OutputObject
    >;
    AdminRoleAssigned: TypedContractEvent<
      AdminRoleAssignedEvent.InputTuple,
      AdminRoleAssignedEvent.OutputTuple,
      AdminRoleAssignedEvent.OutputObject
    >;

    "AdminRoleRevoked(address,uint256)": TypedContractEvent<
      AdminRoleRevokedEvent.InputTuple,
      AdminRoleRevokedEvent.OutputTuple,
      AdminRoleRevokedEvent.OutputObject
    >;
    AdminRoleRevoked: TypedContractEvent<
      AdminRoleRevokedEvent.InputTuple,
      AdminRoleRevokedEvent.OutputTuple,
      AdminRoleRevokedEvent.OutputObject
    >;

    "AuditorRoleRevoked(address,uint256)": TypedContractEvent<
      AuditorRoleRevokedEvent.InputTuple,
      AuditorRoleRevokedEvent.OutputTuple,
      AuditorRoleRevokedEvent.OutputObject
    >;
    AuditorRoleRevoked: TypedContractEvent<
      AuditorRoleRevokedEvent.InputTuple,
      AuditorRoleRevokedEvent.OutputTuple,
      AuditorRoleRevokedEvent.OutputObject
    >;

    "AuiditorRoleRevoked(address,uint256)": TypedContractEvent<
      AuiditorRoleRevokedEvent.InputTuple,
      AuiditorRoleRevokedEvent.OutputTuple,
      AuiditorRoleRevokedEvent.OutputObject
    >;
    AuiditorRoleRevoked: TypedContractEvent<
      AuiditorRoleRevokedEvent.InputTuple,
      AuiditorRoleRevokedEvent.OutputTuple,
      AuiditorRoleRevokedEvent.OutputObject
    >;

    "BuyerRoleAssigned(address,uint256)": TypedContractEvent<
      BuyerRoleAssignedEvent.InputTuple,
      BuyerRoleAssignedEvent.OutputTuple,
      BuyerRoleAssignedEvent.OutputObject
    >;
    BuyerRoleAssigned: TypedContractEvent<
      BuyerRoleAssignedEvent.InputTuple,
      BuyerRoleAssignedEvent.OutputTuple,
      BuyerRoleAssignedEvent.OutputObject
    >;

    "BuyerRoleRevoked(address,uint256)": TypedContractEvent<
      BuyerRoleRevokedEvent.InputTuple,
      BuyerRoleRevokedEvent.OutputTuple,
      BuyerRoleRevokedEvent.OutputObject
    >;
    BuyerRoleRevoked: TypedContractEvent<
      BuyerRoleRevokedEvent.InputTuple,
      BuyerRoleRevokedEvent.OutputTuple,
      BuyerRoleRevokedEvent.OutputObject
    >;

    "InspectorRoleAssigned(address,uint256)": TypedContractEvent<
      InspectorRoleAssignedEvent.InputTuple,
      InspectorRoleAssignedEvent.OutputTuple,
      InspectorRoleAssignedEvent.OutputObject
    >;
    InspectorRoleAssigned: TypedContractEvent<
      InspectorRoleAssignedEvent.InputTuple,
      InspectorRoleAssignedEvent.OutputTuple,
      InspectorRoleAssignedEvent.OutputObject
    >;

    "InspectorRoleRevoked(address,uint256)": TypedContractEvent<
      InspectorRoleRevokedEvent.InputTuple,
      InspectorRoleRevokedEvent.OutputTuple,
      InspectorRoleRevokedEvent.OutputObject
    >;
    InspectorRoleRevoked: TypedContractEvent<
      InspectorRoleRevokedEvent.InputTuple,
      InspectorRoleRevokedEvent.OutputTuple,
      InspectorRoleRevokedEvent.OutputObject
    >;

    "MinerRoleAssigned(address,uint256)": TypedContractEvent<
      MinerRoleAssignedEvent.InputTuple,
      MinerRoleAssignedEvent.OutputTuple,
      MinerRoleAssignedEvent.OutputObject
    >;
    MinerRoleAssigned: TypedContractEvent<
      MinerRoleAssignedEvent.InputTuple,
      MinerRoleAssignedEvent.OutputTuple,
      MinerRoleAssignedEvent.OutputObject
    >;

    "MinerRoleRevoked(address,uint256)": TypedContractEvent<
      MinerRoleRevokedEvent.InputTuple,
      MinerRoleRevokedEvent.OutputTuple,
      MinerRoleRevokedEvent.OutputObject
    >;
    MinerRoleRevoked: TypedContractEvent<
      MinerRoleRevokedEvent.InputTuple,
      MinerRoleRevokedEvent.OutputTuple,
      MinerRoleRevokedEvent.OutputObject
    >;

    "MineralAudited(string,bytes32,address,uint256)": TypedContractEvent<
      MineralAuditedEvent.InputTuple,
      MineralAuditedEvent.OutputTuple,
      MineralAuditedEvent.OutputObject
    >;
    MineralAudited: TypedContractEvent<
      MineralAuditedEvent.InputTuple,
      MineralAuditedEvent.OutputTuple,
      MineralAuditedEvent.OutputObject
    >;

    "MineralInspected(string,string,address,uint256)": TypedContractEvent<
      MineralInspectedEvent.InputTuple,
      MineralInspectedEvent.OutputTuple,
      MineralInspectedEvent.OutputObject
    >;
    MineralInspected: TypedContractEvent<
      MineralInspectedEvent.InputTuple,
      MineralInspectedEvent.OutputTuple,
      MineralInspectedEvent.OutputObject
    >;

    "MineralPurchased(string,address,uint256)": TypedContractEvent<
      MineralPurchasedEvent.InputTuple,
      MineralPurchasedEvent.OutputTuple,
      MineralPurchasedEvent.OutputObject
    >;
    MineralPurchased: TypedContractEvent<
      MineralPurchasedEvent.InputTuple,
      MineralPurchasedEvent.OutputTuple,
      MineralPurchasedEvent.OutputObject
    >;

    "MineralReadyToTrade(string,address,string,uint256)": TypedContractEvent<
      MineralReadyToTradeEvent.InputTuple,
      MineralReadyToTradeEvent.OutputTuple,
      MineralReadyToTradeEvent.OutputObject
    >;
    MineralReadyToTrade: TypedContractEvent<
      MineralReadyToTradeEvent.InputTuple,
      MineralReadyToTradeEvent.OutputTuple,
      MineralReadyToTradeEvent.OutputObject
    >;

    "MineralRefined(uint256,address,uint256)": TypedContractEvent<
      MineralRefinedEvent.InputTuple,
      MineralRefinedEvent.OutputTuple,
      MineralRefinedEvent.OutputObject
    >;
    MineralRefined: TypedContractEvent<
      MineralRefinedEvent.InputTuple,
      MineralRefinedEvent.OutputTuple,
      MineralRefinedEvent.OutputObject
    >;

    "MineralRegistered(string,string,string,string,string,uint256,address,uint256)": TypedContractEvent<
      MineralRegisteredEvent.InputTuple,
      MineralRegisteredEvent.OutputTuple,
      MineralRegisteredEvent.OutputObject
    >;
    MineralRegistered: TypedContractEvent<
      MineralRegisteredEvent.InputTuple,
      MineralRegisteredEvent.OutputTuple,
      MineralRegisteredEvent.OutputObject
    >;

    "MineralTransported(string,address,address,string,string,uint256)": TypedContractEvent<
      MineralTransportedEvent.InputTuple,
      MineralTransportedEvent.OutputTuple,
      MineralTransportedEvent.OutputObject
    >;
    MineralTransported: TypedContractEvent<
      MineralTransportedEvent.InputTuple,
      MineralTransportedEvent.OutputTuple,
      MineralTransportedEvent.OutputObject
    >;

    "RefinerRoleAssigned(address,uint256)": TypedContractEvent<
      RefinerRoleAssignedEvent.InputTuple,
      RefinerRoleAssignedEvent.OutputTuple,
      RefinerRoleAssignedEvent.OutputObject
    >;
    RefinerRoleAssigned: TypedContractEvent<
      RefinerRoleAssignedEvent.InputTuple,
      RefinerRoleAssignedEvent.OutputTuple,
      RefinerRoleAssignedEvent.OutputObject
    >;

    "RefinerRoleRevoked(address,uint256)": TypedContractEvent<
      RefinerRoleRevokedEvent.InputTuple,
      RefinerRoleRevokedEvent.OutputTuple,
      RefinerRoleRevokedEvent.OutputObject
    >;
    RefinerRoleRevoked: TypedContractEvent<
      RefinerRoleRevokedEvent.InputTuple,
      RefinerRoleRevokedEvent.OutputTuple,
      RefinerRoleRevokedEvent.OutputObject
    >;

    "RoleAssigned(address,bytes32,uint256)": TypedContractEvent<
      RoleAssignedEvent.InputTuple,
      RoleAssignedEvent.OutputTuple,
      RoleAssignedEvent.OutputObject
    >;
    RoleAssigned: TypedContractEvent<
      RoleAssignedEvent.InputTuple,
      RoleAssignedEvent.OutputTuple,
      RoleAssignedEvent.OutputObject
    >;

    "RoleRevoked(bytes32,address,address,uint256)": TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
    RoleRevoked: TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;

    "TransporterRoleAssigned(address,uint256)": TypedContractEvent<
      TransporterRoleAssignedEvent.InputTuple,
      TransporterRoleAssignedEvent.OutputTuple,
      TransporterRoleAssignedEvent.OutputObject
    >;
    TransporterRoleAssigned: TypedContractEvent<
      TransporterRoleAssignedEvent.InputTuple,
      TransporterRoleAssignedEvent.OutputTuple,
      TransporterRoleAssignedEvent.OutputObject
    >;

    "TransporterRoleRevoked(address,uint256)": TypedContractEvent<
      TransporterRoleRevokedEvent.InputTuple,
      TransporterRoleRevokedEvent.OutputTuple,
      TransporterRoleRevokedEvent.OutputObject
    >;
    TransporterRoleRevoked: TypedContractEvent<
      TransporterRoleRevokedEvent.InputTuple,
      TransporterRoleRevokedEvent.OutputTuple,
      TransporterRoleRevokedEvent.OutputObject
    >;
  };
}
